{
  "files": {
    "mdp.py": "from edtrace import text, link, image, note, plot\nfrom typing import Any\nfrom dataclasses import dataclass\nfrom collections import defaultdict\nimport numpy as np\nfrom functools import partial\nfrom graphviz import Digraph\nfrom typing import Callable\nfrom search import TravelSearchProblem\nfrom util import Vocabulary, make_plot\n\nPolicy = Callable[[Any], Any]\n\n\ndef main():\n    text(\"Last week: **search**\")\n    text(\"- Search problem: start state, successors (action, cost, next state), is_end\")\n    text(\"- An action from a state **deterministically** leads to a new state\")\n    problem = TravelSearchProblem(num_locs=10)  # @stepover\n    state = problem.start_state()  # @inspect state\n    successors = problem.successors(state)  # @inspect successors\n    is_end = problem.is_end(successors[0].state)  # @inspect is_end\n\n    text(\"This week: **Markov Decision Processes (MDPs)**\")\n    text(\"- MDPs generalize search problems\")\n    text(\"- Key difference: actions may have stochastic outcomes (e.g., rolling a dice)\")\n\n    text(\"Motivating example: How would you go to the grocery store -- walk, bike or drive?\")\n    text(\"Key: need to take into account uncertainty (traffic, time finding parking, etc.)\")\n\n    introduce_mdp()\n    introduce_policies()\n    introduce_policy_evaluation()\n    introduce_value_iteration()\n\n    text(\"Summary:\")\n    text(\"- MDPs: generalize search problems (action result in distribution over next states)\")\n    text(\"- Policy (solution): maps state to action\")\n    text(\"- MDP + policy \u2192 rollout \u2192 utility\")\n    text(\"- Value of policy = expected utility of policy\")\n    text(\"- Policy evaluation: computes value of a given policy\")\n    text(\"- Value iteration: computes value of the optimal policy\")\n\n\ndef introduce_mdp():\n    text(\"Origins of MDPs\")\n    text(\"- Developed in operations research in the 1950s\")\n    text(\"- \\\"Markov\\\" comes from Markov chains, where the past and future are independent given the state\")\n    text(\"- \\\"decision\\\" means an agent taking actions\")\n    text(\"- \\\"process\\\" means things happen sequentially over time\")\n\n    text(\"Example: flaky tram problem\")\n    text(\"- Locations 1 to n (same)\")\n    text(\"- Walking from i to i+1 takes 1 minute (same)\")\n    text(\"- Taking a tram from i to 2*i takes 2 minutes (same)\")\n    text(\"- But the tram breaks down with probability p (different)\")\n    text(\"- Goal: get from 1 to n in the least time in expectation (on average)\")\n    mdp = FlakyTramMDP(num_locs=10, failure_prob=0.4)  # @stepover\n    state = mdp.start_state()  # @inspect state\n    successors = mdp.successors(state)  # @inspect successors\n    is_end = mdp.is_end(successors[0].state)  # @inspect is_end\n    image(draw_graph(mdp).render(\"var/flaky_tram_graph\", format=\"png\"), width=200)  # @stepover\n    text(\"Mathematical notation:\")\n    text(\"- Actions(s): all possible actions from state s\")\n    text(\"- Reward(s, a, s'): reward that one would get if we take action a in state s and end up in state s'\")\n    text(\"- T(s, a, s'): probability of ending up in state s' after taking action a from state s\")\n    text(\"Note that for each (s, a): \u03a3_s' T(s, a, s') = 1\")\n\n    text(\"Let's consider another example, a dice game.\")\n    text(\"For each round:\")\n    text(\"- You choose quit or stay.\")\n    text(\"- If quit, you get $10 and we end the game.\")\n    text(\"- If stay, you get $4 and then I roll a 6-sided dice.\")\n    text(\"- If the dice results in 1 or 2, we end the game.\")\n    text(\"- Otherwise, continue to the next round.\")\n    mdp = DiceGameMDP()  # @stepover @clear state successors is_end\n    state = mdp.start_state()  # @inspect state\n    successors = mdp.successors(state)  # @inspect successors\n    is_end = mdp.is_end(successors[0].state)  # @inspect is_end\n    image(draw_graph(mdp).render(\"var/dice_game_graph\", format=\"png\"), width=200)  # @stepover\n\n    text(\"Comparison between search problems and MDPs:\")\n    text(\"- Both have a `start_state` and `is_end` function\")\n    text(\"- Both have a `successors` function that return a list of possible actions and their consequences\")\n    text(\"- Superficial difference: search problem uses costs, MDPs use rewards\")\n    text(\"- Deep difference: in search problems, each action has one next state; in MDPs, each action has a distribution over next states\")\n\n\n@dataclass(frozen=True)\nclass Step:\n    action: Any\n    prob: float  # New: the probability that we ended up here\n    reward: float\n    state: Any\n\n\nclass MDP:\n    def start_state(self) -> Any:\n        raise NotImplementedError\n    \n    def successors(self, state: Any) -> list[Step]:\n        raise NotImplementedError\n    \n    def is_end(self, state: Any) -> bool:\n        raise NotImplementedError\n\n    def discount(self) -> float:\n        raise NotImplementedError\n\n\nclass FlakyTramMDP(MDP):\n    def __init__(self, num_locs: int, failure_prob: float):\n        self.num_locs = num_locs\n        self.failure_prob = failure_prob\n\n    def start_state(self) -> Any:\n        return 1\n    \n    def successors(self, state: Any) -> list[Step]:  # @inspect state\n        successors = []\n\n        # Walk\n        if state + 1 <= self.num_locs:\n            successors.append(Step(action=\"walk\", prob=1, reward=-1, state=state + 1))  # @inspect successors\n\n        # Tram\n        if 2 * state <= self.num_locs:\n            # Success: move to desired state\n            successors.append(Step(action=\"tram\", prob=1 - self.failure_prob, reward=-2, state=2 * state))  # @inspect successors\n            # Failure: stay in the same state\n            successors.append(Step(action=\"tram\", prob=self.failure_prob, reward=-2, state=state))  # @inspect successors\n\n        return successors\n\n    def is_end(self, state: Any) -> bool:\n        return state == self.num_locs\n\n    def discount(self) -> float:\n        # No discounting for now\n        return 1\n\n\ndef introduce_policies():\n    mdp = FlakyTramMDP(num_locs=10, failure_prob=0.4)  # @stepover\n\n    text(\"What does a **solution** to an MDP look like?\")\n    text(\"- In a search problem, a solution was a sequence of actions\")\n    text(\"- This won't work for MDPs because actions have uncertain outcomes\")\n    text(\"- So subsequent actions need to depend on the outcome of the previous action\")\n    text(\"- In an MDP, a solution is a **policy**: a function that maps state to action\")\n    text(\"- No matter what state you're in, policy tells you what to do\")\n    action = always_walk_policy(state=3)  # @inspect action\n    action = tram_if_possible_policy(mdp, state=3)  # @inspect action\n    action = tram_if_possible_policy(mdp, state=6)  # @inspect action\n\n    text(\"How do you evaluate a policy?\") # @clear action\n    text(\"A **rollout** is a simulation of the policy in an MDP.\")\n    text(\"Let's generate a rollout of the policy that always walks:\")\n    np.random.seed(1)\n    rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout\n\n    text(\"Each rollout generates a **utility**, which is a discounted sum of rewards.\")\n    text(\"**Discounting**: how important is the future\")\n    text(\"- Generally represented by a discount factor 0 \u2264 \u03b3 \u2264 1\")\n    text(\"- Discount = 1 (no discounting): future is just as important as the present\")\n    utility_1 = compute_utility(rollout.steps, discount=1)  # @inspect utility_1\n    text(\"- Discount = 0 (full discounting): future doesn't matter at all\")\n    utility_0 = compute_utility(rollout.steps, discount=0)  # @inspect utility_0\n    text(\"- Discount = 0.5 (half discounting): next step matters half as much as the present step\")\n    utility_0_5 = compute_utility(rollout.steps, discount=0.5)  # @inspect utility_0_5\n\n    text(\"Let's rollout the policy that always takes the tram:\") # @clear utility_1 utility_0 utility_0_5\n    rollout = generate_rollout(mdp, partial(tram_if_possible_policy, mdp))  # @inspect rollout @stepover\n    rollout = generate_rollout(mdp, partial(tram_if_possible_policy, mdp))  # @inspect rollout @stepover\n    rollout = generate_rollout(mdp, partial(tram_if_possible_policy, mdp))  # @inspect rollout @stepover\n    rollout = generate_rollout(mdp, partial(tram_if_possible_policy, mdp))  # @inspect rollout @stepover\n    text(\"Note that the same policy yields different rollouts.\")\n\n    text(\"So then how do we evaluate a policy?\")\n    text(\"Answer: let's just rollout the policy many times and average the utilities.\")\n    text(\"The expected utility (**value**) of a policy is defined as the average utility.\")\n    text(\"V_\u03c0(s) = expected utility of starting in state s and following policy \u03c0.\")\n\n    # Only need one rollout since walking is deterministic\n    walk_value = monte_carlo_policy_evaluation(mdp, always_walk_policy, num_rollouts=1)  # @inspect walk_value\n    estimated_tram_value = monte_carlo_policy_evaluation(mdp, partial(tram_if_possible_policy, mdp), num_rollouts=20)  # @inspect estimated_tram_value @stepover\n\n    text(\"Let's try the dice game:\")  # @clear rollout walk_value estimated_tram_value\n    mdp = DiceGameMDP()  # @stepover\n    quit_value = monte_carlo_policy_evaluation(mdp, always_quit_policy, num_rollouts=1)  # @inspect quit_value\n    stay_value = monte_carlo_policy_evaluation(mdp, always_stay_policy, num_rollouts=20)  # @inspect stay_value\n    \n\ndef always_stay_policy(state: int) -> str:\n    return \"stay\"\n\n\ndef always_quit_policy(state: int) -> str:\n    return \"quit\"\n\n\ndef always_walk_policy(state: int) -> str:\n    return \"walk\"\n\n\ndef tram_if_possible_policy(mdp: MDP, state: int) -> str:\n    \"\"\"Need the MDP to know the number of locations to make sure we can take the tram.\"\"\"\n    if state * 2 <= mdp.num_locs:\n        return \"tram\"\n    else:\n        return \"walk\"\n\n\n@dataclass\nclass Rollout:\n    \"\"\"Represents a rollout of an MDP (sequence of actions that produces a utility).\"\"\"\n    steps: list[Step]\n    discount: float\n    utility: float  # Discounted sum of rewards\n\n    def __init__(self, steps: list[Step], discount: float):\n        self.steps = steps  # @inspect self.steps\n        self.discount = discount  # @inspect self.discount\n        self.utility = compute_utility(steps, discount)  # @inspect self.utility\n        \n\ndef compute_utility(steps: list[Step], discount: float) -> float:\n    \"\"\"Computes the utility (discounted sum of rewards) of a rollout.\"\"\"\n    rewards = [step.reward * discount ** i for i, step in enumerate(steps)]  # @inspect rewards\n    utility = sum(rewards)  # @inspect utility\n    return utility\n\n\ndef generate_rollout(mdp: MDP, policy: Policy) -> Rollout:\n    \"\"\"Run the `policy` in the `mdp` and return the rollout.\"\"\"\n    steps = []  # @inspect steps\n    state = mdp.start_state()  # @inspect state @stepover\n\n    while not mdp.is_end(state):  # @stepover\n        # Policy: choose an action\n        action = policy(state)  # @inspect action @stepover\n\n        # MDP: choose a successor according to that action\n        successors = [successor for successor in mdp.successors(state) if successor.action == action]  # @inspect successors @stepover\n        probs = [successor.prob for successor in successors]  # @inspect probs\n        choice = np.random.choice(len(successors), p=probs)  # @inspect choice\n        step = successors[choice]  # @inspect step\n        steps.append(step)  # @inspect steps\n\n        # Advance to the next state\n        state = step.state  # @inspect state @clear successors probs choice step\n\n    return Rollout(steps=steps, discount=mdp.discount())\n\n\ndef monte_carlo_policy_evaluation(mdp: MDP, policy: Policy, num_rollouts: int) -> float:\n    \"\"\"Evaluate the policy and return the expected utility.\"\"\"\n    utilities = [generate_rollout(mdp, policy).utility for _ in range(num_rollouts)]  # @inspect utilities @stepover\n    average_utility = np.mean(utilities)  # @inspect average_utility\n    return average_utility\n\n\ndef introduce_policy_evaluation():\n    text(\"So far: can perform many rollouts and average to estimate the value of a policy V_\u03c0(s)\")\n    text(\"Is there a way to compute the value V_\u03c0(s) more efficiently?\")\n    text(\"Yes!\")\n    text(\"Key: compute the recurrences (recall dynamic programming for search problems).\")\n\n    introduce_q_values()\n    introduce_convergence()\n\n    text(\"The resulting algorithm is called **policy evaluation**.\")\n    mdp = FlakyTramMDP(num_locs=10, failure_prob=0.4)  # @stepover\n    policy = partial(tram_if_possible_policy, mdp)\n    result = policy_evaluation(mdp, policy)  # @inspect result\n    tram_value = result.values[mdp.start_state()]  # @inspect tram_value @stepover\n    plot(make_distance_plot(\"policy evaluation\", result.distances))  # @stepover\n    text(\"Two phases:\")\n    text(\"1. Trying to reach all the states (number of steps)\")\n    text(\"2. Distance decreases exponentially\")\n\n    text(\"Let's try the dice game:\")\n    mdp = DiceGameMDP()  # @stepover\n    result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values\n    plot(make_distance_plot(\"policy evaluation\", result.distances))  # @stepover\n\n    text(\"Summary:\")\n    text(\"- Policy evaluation: computes value of a given policy\")\n    text(\"- Key quantity: Q-value Q(s, a, V) = value of taking action a in state s, and obtaining some value V\")\n    text(\"- Bootstrapping: use values to compute new values using recurrence\")\n\n\ndef make_distance_plot(name: str, distances: list[float]) -> dict:\n    points = [{\"iteration\": i, \"distance\": distance, \"color\": \"blue\"} for i, distance in enumerate(distances)]\n    return make_plot(name, \"iteration\", \"distance\", f=None, points=points)\n\n\ndef introduce_q_values():\n    text(\"First, we introduce **Q-values**.\")\n    text(\"Q(s, a, V) = measures value of taking action a in state s, and obtaining some value V\")\n    text(\"Here, V(s) is the value of some policy from state s.\")\n    \n    text(\"Let's consider our flaky tram MDP example again.\")\n    mdp = FlakyTramMDP(num_locs=10, failure_prob=0.4)  # @stepover\n\n    text(\"We start with an initial set of values corresponding to terminating\")\n    values = get_initial_values(mdp)  # @inspect values @stepover\n\n    text(\"Let's warmup with computing the Q-value for just one state.\")\n    # Choose a state (arbitrarily)\n    state = 9  # @inspect state\n    # Take the policy that takes the tram\n    policy = partial(tram_if_possible_policy, mdp)\n    # Get the action the policy would take in that state\n    action = policy(state)  # @inspect action @stepover\n    # Get the successors of that action\n    successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover\n    # Key step: compute the value corresponding to taking that action and then terminating.\n    value = compute_q_value(successors, mdp.discount(), values)  # @inspect value\n\n    text(\"Two things to get to policy evaluation:\")\n    text(\"- Do this for all states\")\n    text(\"- Rinse and repeat with the values (instead of terminating values)\")\n    text(\"This is called **bootstrapping**:\")\n    text(\"After 0 steps: value of terminating\")\n    text(\"After 1 step: value of following policy for 1 step, then terminating\")\n    text(\"After 2 steps: value of following policy for 2 steps, then terminating\")\n    text(\"... and so on.\")\n\n\ndef introduce_convergence():\n    text(\"How do we know when an iterative algorithm is done?\")\n    text(\"[0] values \u2192 [1] values \u2192 [2] values \u2192 [3] values \u2192 [4] values\")\n\n    text(\"We look at the maximum change between iterations.\")\n    values = {1: 0.2, 2: 1.0, 3: -1.0}  # @inspect values\n    new_values = {1: 0.2, 2: 1.1, 3: 1.0}  # @inspect new_values\n    distance = compute_distance(values, new_values)  # @inspect distance\n\n    text(\"When the distance is less than some tolerance (say 1e-5), we terminate.\")\n    text(\"This will be used for policy evaluation and value iteration.\")\n\n\ndef get_initial_values(mdp: MDP) -> dict[Any, float]:\n    \"\"\"\n    Return the values obtained by just terminating.\n    This is used to initialize policy evaluation and value iteration.\n    Returns:\n    - values: dict[Any, float]: state -> value of that state\n    \"\"\"\n    # Get all the states in the MDP (needed for iterative algorithms)\n    states = get_states(mdp)  # @inspect states @stepover\n\n    # Value is 0 for end states and -inf for other states\n    values = {state: 0 if mdp.is_end(state) else -100 for state in states}  # @inspect values @stepover\n\n    return values\n\n\ndef get_action_successors(mdp: MDP, state: Any) -> dict[str, list[Step]]:\n    \"\"\"\n    Get the successors for each action from a state.\n    Returns:\n    - action_to_successors: dict[str, list[Step]]: action -> list of successors for that action\n    \"\"\"\n    # Get a flat list of successors for all actions\n    successors = mdp.successors(state)  # @stepover\n\n    # Group successors by action\n    action_to_successors = defaultdict(list)\n    for step in successors:\n        action_to_successors[step.action].append(step)\n\n    return action_to_successors\n\n            \ndef compute_q_value(successors: list[Step], discount: float, values: dict[Any, float]) -> float:  # @inspect successors values\n    \"\"\"Compute the Q-value for a list of `successors` (possible transitions) given the `values`.\"\"\"\n    weighted_utilities = []  # @inspect weighted_utilities\n\n    for step in successors:  # @inspect step\n        utility = step.reward + discount * values[step.state]  # @inspect utility\n        weighted_utilities.append(step.prob * utility)\n\n    value = sum(weighted_utilities)  # @inspect weighted_utilities value\n    return value\n\n\ndef compute_distance(values: dict[Any, float], new_values: dict[Any, float]) -> float:\n    \"\"\"Compute the distance between two sets of values.\"\"\"\n    distances = [abs(values[state] - new_values[state]) for state in values]  # @inspect distances\n    max_distance = max(distances)  # @inspect max_distance\n    return max_distance\n\n\n@dataclass(frozen=True)\nclass PolicyEvaluationResult:\n    values: dict[Any, float]  # state -> value of that state\n    distances: list[float]  # iteration -> change in value that iteration\n\n\ndef policy_evaluation(mdp: MDP, policy: Policy, max_iters: int = 100, tolerance: float = 1e-5) -> PolicyEvaluationResult:\n    \"\"\"\n    Evaluates the `policy` on the `mdp` by computing the reccurrence.\n    Returns:\n    - values: dict[Any, float]: state -> value of the policy from that state\n    - distances: list[float]: iteration -> maximum change in values that iteration (for debugging)\n    \"\"\"\n    values = get_initial_values(mdp)  # @stepover @inspect values\n    \n    distances = []\n    for iter in range(max_iters):  # @inspect iter\n        # Get ready to compute values\n        new_values = {}  # state -> V(state)\n\n        # Update new_values\n        for state in values:  # @inspect state\n            if mdp.is_end(state):  # @stepover\n                new_values[state] = 0\n                continue\n\n            # Only consider the policy action \u03c0(s)\n            action = policy(state)  # @inspect action @stepover\n\n            # Compute possible successors for that action\n            successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover\n\n            # Compute the value of the policy from that state\n            new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover\n\n        # Check for convergence\n        distance = compute_distance(values, new_values)  # @inspect distance @stepover\n        distances.append(distance)  # @inspect distances\n        if distance < tolerance:\n            break\n\n        # Update values to the next iteration\n        values = new_values  # @inspect values\n\n    return PolicyEvaluationResult(values=values, distances=distances)\n\n\ndef get_states(mdp: MDP) -> list[Any]:\n    \"\"\"Get all the states by traversing all successors starting from the start state.\"\"\"\n    states = set()\n    def recurse(state: Any):\n        if state in states:\n            return\n        states.add(state)\n        for step in mdp.successors(state):\n            recurse(step.state)\n    recurse(mdp.start_state())\n    return list(states)\n\n\ndef introduce_value_iteration():\n    text(\"Policy evaluation: computes value of a given policy\")\n    text(\"Value iteration: computes value of the optimal policy\")\n    text(\"...and in the process, constructs the optimal policy\")\n\n    text(\"Finding the optimal policy might seem much harder than computing the value of a policy\")\n    text(\"...(think computing f(x) versus min_x f(x))\")\n    text(\"...but the two are actually quite similar!\")\n\n    text(\"History: Richard Bellman's work on dynamic programming \"), link(\"https://gwern.net/doc/statistics/decision/1957-bellman-dynamicprogramming.pdf\", title=\"[Bellman, 1957]\")\n\n    text(\"Policy evaluation recurrence:\")\n    text(\"V_\u03c0(s) =  \u03a3_s' T(s, \u03c0(s), s') (R(s, \u03c0(s), s') + \u03b3 V_\u03c0(s'))\")\n    text(\"Value iteration recurrence:\")\n    text(\"V`*`(s) = max_a \u03a3_s' T(s, a, s') (R(s, a, s') + \u03b3 V`*`(s'))\")\n\n    text(\"Key difference: optimize over actions a instead of taking policy action pi(s)\")\n\n    text(\"Let's try the flaky tram MDP example:\")\n    mdp = FlakyTramMDP(num_locs=10, failure_prob=0.4)  # @stepover\n\n    values = get_initial_values(mdp)  # @inspect values\n    # Choose a state (arbitrarily)\n    state = 9  # @inspect state\n    value, action = value_iteration_for_state(mdp, state, values)  # @inspect value action\n\n    text(\"Let's now run value iteration:\")  # @clear value action values\n    result = value_iteration(mdp)  # @inspect result\n    plot(make_distance_plot(\"value iteration\", result.distances))  # @stepover\n\n    text(\"Summary:\")\n    text(\"- Value iteration: computes value of the optimal policy\")\n    text(\"- Takes max over actions compared to policy evaluation, which takes policy action\")\n    text(\"- Bootstrapping: use values to compute new values using recurrence (same)\")\n\n\n@dataclass(frozen=True)\nclass ValueIterationResult:\n    values: dict[Any, float]  # state -> value of that state\n    pi: dict[Any, Any]  # state -> action for that state\n    distances: list[float]  # iteration -> change in value that iteration\n\n\ndef value_iteration(mdp: MDP, max_iters: int = 100, tolerance: float = 1e-5) -> ValueIterationResult:\n    \"\"\"\n    Compute the value of the optimal policy.\n    Returns:\n    - values: dict[Any, float]: state -> optimal value of that state\n    - pi: dict[Any, Any]: state -> optimal action for that state\n    - distances: list[float]: distance between values and new values at each iteration\n    \"\"\"\n    # Initialize values of each state\n    values = get_initial_values(mdp)  # @stepover @inspect values\n    # Initialize the policy (state -> action)\n    pi = {state: None for state in values}  # @inspect pi @stepover\n\n    distances = []\n    for iter in range(max_iters):  # @inspect iter\n        new_values = {}  # state -> V_iter(state)\n        for state in values:\n            if mdp.is_end(state):  # @stepover\n                new_values[state] = 0\n                continue\n            new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover\n\n        # Check for convergence\n        distance = compute_distance(values, new_values)  # @inspect distance @stepover\n        distances.append(distance)\n        if distance < tolerance:\n            break\n\n        # Update values to the next iteration\n        values = new_values  # @inspect values\n\n    return ValueIterationResult(values=values, pi=pi, distances=distances)\n\n\ndef value_iteration_for_state(mdp: MDP, state: Any, values: dict[Any, float]) -> tuple[float, Any]:\n    \"\"\"Compute optimal value V`*`(state) and optimal policy \u03c0`*`(state).\"\"\"\n    # V^* = max_a Q(s, a, V^*)\n    # For each action, compute its Q-value\n    actions = []\n    q_values = []\n\n    # Look at all actions from state\n    for action, successors in get_action_successors(mdp, state).items():  # @stepover\n        actions.append(action)\n        q_values.append(compute_q_value(successors, mdp.discount(), values))  # @stepover\n\n    # Take the best action\n    value = np.max(q_values)  # @inspect value\n    action = actions[np.argmax(q_values)]  # @inspect action\n\n    return value, action\n\n\nclass DiceGameMDP(MDP):\n    def start_state(self) -> Any:\n        return \"in\"\n    \n    def successors(self, state: Any) -> list[Step]:\n        return [\n            Step(action=\"quit\", prob=1, reward=10, state=\"end\"),\n            Step(action=\"stay\", prob=1/3, reward=4, state=\"end\"),\n            Step(action=\"stay\", prob=2/3, reward=4, state=\"in\"),\n        ]\n    \n    def is_end(self, state: Any) -> bool:\n        return state == \"end\"\n    \n    def discount(self) -> float:\n        return 1\n\n\ndef draw_graph(mdp: MDP) -> Digraph:\n    \"\"\"Traverse an MDP and return a graphviz graph.\"\"\"\n    dot = Digraph()\n    visited = set()\n    # Traverse the states (nodes) in the MDP\n    def recurse(state: Any):\n        if state in visited:\n            return\n        visited.add(state)\n        if mdp.is_end(state):\n            dot.node(str(state), shape=\"doublecircle\")\n        else:\n            dot.node(str(state), shape=\"circle\")\n            actions_to_successors = defaultdict(list)\n            for step in mdp.successors(state):\n                actions_to_successors[step.action].append(step)\n            for action, successors in actions_to_successors.items():\n                dot.node(f\"{state},{action}\", style=\"dotted\")\n                dot.edge(str(state), f\"{state},{action}\")\n                for step in successors:\n                    dot.edge(f\"{state},{action}\", str(step.state), label=f\"p={step.prob:.2f},r={step.reward}\")\n                    recurse(step.state)\n\n    recurse(mdp.start_state())\n    return dot\n\ndef get_state_vocab(mdp: MDP) -> Vocabulary:\n    \"\"\"Traverse the entire MDP to map states to integers using the `Vocabulary` class.\"\"\"\n    states = Vocabulary()\n    def recurse(state: Any):\n        if state in states:\n            return\n        # Add the state to the vocabulary\n        states.get_index(state)\n        for step in mdp.successors(state):\n            recurse(step.state)\n    recurse(mdp.start_state())\n    return states\n\n\n\nif __name__ == \"__main__\":\n    main()\n"
  },
  "hidden_line_numbers": {
    "mdp.py": []
  },
  "steps": [
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 15,
          "function_name": "main",
          "code": "def main():"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 16,
          "function_name": "main",
          "code": "text(\"Last week: **search**\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Last week: **search**",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 17,
          "function_name": "main",
          "code": "text(\"- Search problem: start state, successors (action, cost, next state), is_end\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Search problem: start state, successors (action, cost, next state), is_end",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 18,
          "function_name": "main",
          "code": "text(\"- An action from a state **deterministically** leads to a new state\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- An action from a state **deterministically** leads to a new state",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 19,
          "function_name": "main",
          "code": "problem = TravelSearchProblem(num_locs=10)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 20,
          "function_name": "main",
          "code": "state = problem.start_state()  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 1,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 21,
          "function_name": "main",
          "code": "successors = problem.successors(state)  # @inspect successors"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "search.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "cost": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "search.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "cost": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 22,
          "function_name": "main",
          "code": "is_end = problem.is_end(successors[0].state)  # @inspect is_end"
        }
      ],
      "env": {
        "is_end": {
          "type": "bool",
          "contents": false,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 24,
          "function_name": "main",
          "code": "text(\"This week: **Markov Decision Processes (MDPs)**\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "This week: **Markov Decision Processes (MDPs)**",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 25,
          "function_name": "main",
          "code": "text(\"- MDPs generalize search problems\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- MDPs generalize search problems",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 26,
          "function_name": "main",
          "code": "text(\"- Key difference: actions may have stochastic outcomes (e.g., rolling a dice)\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Key difference: actions may have stochastic outcomes (e.g., rolling a dice)",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 28,
          "function_name": "main",
          "code": "text(\"Motivating example: How would you go to the grocery store -- walk, bike or drive?\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Motivating example: How would you go to the grocery store -- walk, bike or drive?",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 29,
          "function_name": "main",
          "code": "text(\"Key: need to take into account uncertainty (traffic, time finding parking, etc.)\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Key: need to take into account uncertainty (traffic, time finding parking, etc.)",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 45,
          "function_name": "introduce_mdp",
          "code": "def introduce_mdp():"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 46,
          "function_name": "introduce_mdp",
          "code": "text(\"Origins of MDPs\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Origins of MDPs",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 47,
          "function_name": "introduce_mdp",
          "code": "text(\"- Developed in operations research in the 1950s\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Developed in operations research in the 1950s",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 48,
          "function_name": "introduce_mdp",
          "code": "text(\"- \\\"Markov\\\" comes from Markov chains, where the past and future are independent given the state\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- \"Markov\" comes from Markov chains, where the past and future are independent given the state",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 49,
          "function_name": "introduce_mdp",
          "code": "text(\"- \\\"decision\\\" means an agent taking actions\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- \"decision\" means an agent taking actions",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 50,
          "function_name": "introduce_mdp",
          "code": "text(\"- \\\"process\\\" means things happen sequentially over time\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- \"process\" means things happen sequentially over time",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 52,
          "function_name": "introduce_mdp",
          "code": "text(\"Example: flaky tram problem\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Example: flaky tram problem",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 53,
          "function_name": "introduce_mdp",
          "code": "text(\"- Locations 1 to n (same)\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Locations 1 to n (same)",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 54,
          "function_name": "introduce_mdp",
          "code": "text(\"- Walking from i to i+1 takes 1 minute (same)\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Walking from i to i+1 takes 1 minute (same)",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 55,
          "function_name": "introduce_mdp",
          "code": "text(\"- Taking a tram from i to 2*i takes 2 minutes (same)\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Taking a tram from i to 2*i takes 2 minutes (same)",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 56,
          "function_name": "introduce_mdp",
          "code": "text(\"- But the tram breaks down with probability p (different)\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- But the tram breaks down with probability p (different)",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 57,
          "function_name": "introduce_mdp",
          "code": "text(\"- Goal: get from 1 to n in the least time in expectation (on average)\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Goal: get from 1 to n in the least time in expectation (on average)",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 58,
          "function_name": "introduce_mdp",
          "code": "mdp = FlakyTramMDP(num_locs=10, failure_prob=0.4)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 59,
          "function_name": "introduce_mdp",
          "code": "state = mdp.start_state()  # @inspect state"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 59,
          "function_name": "introduce_mdp",
          "code": "state = mdp.start_state()  # @inspect state"
        },
        {
          "path": "mdp.py",
          "line_number": 116,
          "function_name": "start_state",
          "code": "def start_state(self) -> Any:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 59,
          "function_name": "introduce_mdp",
          "code": "state = mdp.start_state()  # @inspect state"
        },
        {
          "path": "mdp.py",
          "line_number": 117,
          "function_name": "start_state",
          "code": "return 1"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 59,
          "function_name": "introduce_mdp",
          "code": "state = mdp.start_state()  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 1,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 60,
          "function_name": "introduce_mdp",
          "code": "successors = mdp.successors(state)  # @inspect successors"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 60,
          "function_name": "introduce_mdp",
          "code": "successors = mdp.successors(state)  # @inspect successors"
        },
        {
          "path": "mdp.py",
          "line_number": 119,
          "function_name": "successors",
          "code": "def successors(self, state: Any) -> list[Step]:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 1,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 60,
          "function_name": "introduce_mdp",
          "code": "successors = mdp.successors(state)  # @inspect successors"
        },
        {
          "path": "mdp.py",
          "line_number": 120,
          "function_name": "successors",
          "code": "successors = []"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 60,
          "function_name": "introduce_mdp",
          "code": "successors = mdp.successors(state)  # @inspect successors"
        },
        {
          "path": "mdp.py",
          "line_number": 123,
          "function_name": "successors",
          "code": "if state + 1 <= self.num_locs:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 60,
          "function_name": "introduce_mdp",
          "code": "successors = mdp.successors(state)  # @inspect successors"
        },
        {
          "path": "mdp.py",
          "line_number": 124,
          "function_name": "successors",
          "code": "successors.append(Step(action=\"walk\", prob=1, reward=-1, state=state + 1))  # @inspect successors"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 60,
          "function_name": "introduce_mdp",
          "code": "successors = mdp.successors(state)  # @inspect successors"
        },
        {
          "path": "mdp.py",
          "line_number": 127,
          "function_name": "successors",
          "code": "if 2 * state <= self.num_locs:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 60,
          "function_name": "introduce_mdp",
          "code": "successors = mdp.successors(state)  # @inspect successors"
        },
        {
          "path": "mdp.py",
          "line_number": 129,
          "function_name": "successors",
          "code": "successors.append(Step(action=\"tram\", prob=1 - self.failure_prob, reward=-2, state=2 * state))  # @inspect successors"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 60,
          "function_name": "introduce_mdp",
          "code": "successors = mdp.successors(state)  # @inspect successors"
        },
        {
          "path": "mdp.py",
          "line_number": 131,
          "function_name": "successors",
          "code": "successors.append(Step(action=\"tram\", prob=self.failure_prob, reward=-2, state=state))  # @inspect successors"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 60,
          "function_name": "introduce_mdp",
          "code": "successors = mdp.successors(state)  # @inspect successors"
        },
        {
          "path": "mdp.py",
          "line_number": 133,
          "function_name": "successors",
          "code": "return successors"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 60,
          "function_name": "introduce_mdp",
          "code": "successors = mdp.successors(state)  # @inspect successors"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 61,
          "function_name": "introduce_mdp",
          "code": "is_end = mdp.is_end(successors[0].state)  # @inspect is_end"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 61,
          "function_name": "introduce_mdp",
          "code": "is_end = mdp.is_end(successors[0].state)  # @inspect is_end"
        },
        {
          "path": "mdp.py",
          "line_number": 135,
          "function_name": "is_end",
          "code": "def is_end(self, state: Any) -> bool:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 61,
          "function_name": "introduce_mdp",
          "code": "is_end = mdp.is_end(successors[0].state)  # @inspect is_end"
        },
        {
          "path": "mdp.py",
          "line_number": 136,
          "function_name": "is_end",
          "code": "return state == self.num_locs"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 61,
          "function_name": "introduce_mdp",
          "code": "is_end = mdp.is_end(successors[0].state)  # @inspect is_end"
        }
      ],
      "env": {
        "is_end": {
          "type": "bool",
          "contents": false,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 62,
          "function_name": "introduce_mdp",
          "code": "image(draw_graph(mdp).render(\"var/flaky_tram_graph\", format=\"png\"), width=200)  # @stepover"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "image",
          "data": "var/flaky_tram_graph.png",
          "style": {
            "width": 200
          },
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 63,
          "function_name": "introduce_mdp",
          "code": "text(\"Mathematical notation:\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Mathematical notation:",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 64,
          "function_name": "introduce_mdp",
          "code": "text(\"- Actions(s): all possible actions from state s\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Actions(s): all possible actions from state s",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 65,
          "function_name": "introduce_mdp",
          "code": "text(\"- Reward(s, a, s'): reward that one would get if we take action a in state s and end up in state s'\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Reward(s, a, s'): reward that one would get if we take action a in state s and end up in state s'",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 66,
          "function_name": "introduce_mdp",
          "code": "text(\"- T(s, a, s'): probability of ending up in state s' after taking action a from state s\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- T(s, a, s'): probability of ending up in state s' after taking action a from state s",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 67,
          "function_name": "introduce_mdp",
          "code": "text(\"Note that for each (s, a): \u03a3_s' T(s, a, s') = 1\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Note that for each (s, a): \u03a3_s' T(s, a, s') = 1",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 69,
          "function_name": "introduce_mdp",
          "code": "text(\"Let's consider another example, a dice game.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Let's consider another example, a dice game.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 70,
          "function_name": "introduce_mdp",
          "code": "text(\"For each round:\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "For each round:",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 71,
          "function_name": "introduce_mdp",
          "code": "text(\"- You choose quit or stay.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- You choose quit or stay.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 72,
          "function_name": "introduce_mdp",
          "code": "text(\"- If quit, you get $10 and we end the game.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- If quit, you get $10 and we end the game.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 73,
          "function_name": "introduce_mdp",
          "code": "text(\"- If stay, you get $4 and then I roll a 6-sided dice.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- If stay, you get $4 and then I roll a 6-sided dice.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 74,
          "function_name": "introduce_mdp",
          "code": "text(\"- If the dice results in 1 or 2, we end the game.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- If the dice results in 1 or 2, we end the game.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 75,
          "function_name": "introduce_mdp",
          "code": "text(\"- Otherwise, continue to the next round.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Otherwise, continue to the next round.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 76,
          "function_name": "introduce_mdp",
          "code": "mdp = DiceGameMDP()  # @stepover @clear state successors is_end"
        }
      ],
      "env": {
        "state": null,
        "successors": null,
        "is_end": null
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 77,
          "function_name": "introduce_mdp",
          "code": "state = mdp.start_state()  # @inspect state"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 77,
          "function_name": "introduce_mdp",
          "code": "state = mdp.start_state()  # @inspect state"
        },
        {
          "path": "mdp.py",
          "line_number": 553,
          "function_name": "start_state",
          "code": "def start_state(self) -> Any:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 77,
          "function_name": "introduce_mdp",
          "code": "state = mdp.start_state()  # @inspect state"
        },
        {
          "path": "mdp.py",
          "line_number": 554,
          "function_name": "start_state",
          "code": "return \"in\""
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 77,
          "function_name": "introduce_mdp",
          "code": "state = mdp.start_state()  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "in",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 78,
          "function_name": "introduce_mdp",
          "code": "successors = mdp.successors(state)  # @inspect successors"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 78,
          "function_name": "introduce_mdp",
          "code": "successors = mdp.successors(state)  # @inspect successors"
        },
        {
          "path": "mdp.py",
          "line_number": 556,
          "function_name": "successors",
          "code": "def successors(self, state: Any) -> list[Step]:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 78,
          "function_name": "introduce_mdp",
          "code": "successors = mdp.successors(state)  # @inspect successors"
        },
        {
          "path": "mdp.py",
          "line_number": 558,
          "function_name": "successors",
          "code": "Step(action=\"quit\", prob=1, reward=10, state=\"end\"),"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 78,
          "function_name": "introduce_mdp",
          "code": "successors = mdp.successors(state)  # @inspect successors"
        },
        {
          "path": "mdp.py",
          "line_number": 559,
          "function_name": "successors",
          "code": "Step(action=\"stay\", prob=1/3, reward=4, state=\"end\"),"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 78,
          "function_name": "introduce_mdp",
          "code": "successors = mdp.successors(state)  # @inspect successors"
        },
        {
          "path": "mdp.py",
          "line_number": 560,
          "function_name": "successors",
          "code": "Step(action=\"stay\", prob=2/3, reward=4, state=\"in\"),"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 78,
          "function_name": "introduce_mdp",
          "code": "successors = mdp.successors(state)  # @inspect successors"
        },
        {
          "path": "mdp.py",
          "line_number": 557,
          "function_name": "successors",
          "code": "return ["
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 78,
          "function_name": "introduce_mdp",
          "code": "successors = mdp.successors(state)  # @inspect successors"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "quit",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "end",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.3333333333333333,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "end",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6666666666666666,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "in",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 79,
          "function_name": "introduce_mdp",
          "code": "is_end = mdp.is_end(successors[0].state)  # @inspect is_end"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 79,
          "function_name": "introduce_mdp",
          "code": "is_end = mdp.is_end(successors[0].state)  # @inspect is_end"
        },
        {
          "path": "mdp.py",
          "line_number": 563,
          "function_name": "is_end",
          "code": "def is_end(self, state: Any) -> bool:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 79,
          "function_name": "introduce_mdp",
          "code": "is_end = mdp.is_end(successors[0].state)  # @inspect is_end"
        },
        {
          "path": "mdp.py",
          "line_number": 564,
          "function_name": "is_end",
          "code": "return state == \"end\""
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 79,
          "function_name": "introduce_mdp",
          "code": "is_end = mdp.is_end(successors[0].state)  # @inspect is_end"
        }
      ],
      "env": {
        "is_end": {
          "type": "bool",
          "contents": true,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 80,
          "function_name": "introduce_mdp",
          "code": "image(draw_graph(mdp).render(\"var/dice_game_graph\", format=\"png\"), width=200)  # @stepover"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "image",
          "data": "var/dice_game_graph.png",
          "style": {
            "width": 200
          },
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 82,
          "function_name": "introduce_mdp",
          "code": "text(\"Comparison between search problems and MDPs:\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Comparison between search problems and MDPs:",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 83,
          "function_name": "introduce_mdp",
          "code": "text(\"- Both have a `start_state` and `is_end` function\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Both have a `start_state` and `is_end` function",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 84,
          "function_name": "introduce_mdp",
          "code": "text(\"- Both have a `successors` function that return a list of possible actions and their consequences\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Both have a `successors` function that return a list of possible actions and their consequences",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 85,
          "function_name": "introduce_mdp",
          "code": "text(\"- Superficial difference: search problem uses costs, MDPs use rewards\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Superficial difference: search problem uses costs, MDPs use rewards",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        },
        {
          "path": "mdp.py",
          "line_number": 86,
          "function_name": "introduce_mdp",
          "code": "text(\"- Deep difference: in search problems, each action has one next state; in MDPs, each action has a distribution over next states\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Deep difference: in search problems, each action has one next state; in MDPs, each action has a distribution over next states",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 31,
          "function_name": "main",
          "code": "introduce_mdp()"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 143,
          "function_name": "introduce_policies",
          "code": "def introduce_policies():"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 144,
          "function_name": "introduce_policies",
          "code": "mdp = FlakyTramMDP(num_locs=10, failure_prob=0.4)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 146,
          "function_name": "introduce_policies",
          "code": "text(\"What does a **solution** to an MDP look like?\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "What does a **solution** to an MDP look like?",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 147,
          "function_name": "introduce_policies",
          "code": "text(\"- In a search problem, a solution was a sequence of actions\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- In a search problem, a solution was a sequence of actions",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 148,
          "function_name": "introduce_policies",
          "code": "text(\"- This won't work for MDPs because actions have uncertain outcomes\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- This won't work for MDPs because actions have uncertain outcomes",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 149,
          "function_name": "introduce_policies",
          "code": "text(\"- So subsequent actions need to depend on the outcome of the previous action\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- So subsequent actions need to depend on the outcome of the previous action",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 150,
          "function_name": "introduce_policies",
          "code": "text(\"- In an MDP, a solution is a **policy**: a function that maps state to action\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- In an MDP, a solution is a **policy**: a function that maps state to action",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 151,
          "function_name": "introduce_policies",
          "code": "text(\"- No matter what state you're in, policy tells you what to do\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- No matter what state you're in, policy tells you what to do",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 152,
          "function_name": "introduce_policies",
          "code": "action = always_walk_policy(state=3)  # @inspect action"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 152,
          "function_name": "introduce_policies",
          "code": "action = always_walk_policy(state=3)  # @inspect action"
        },
        {
          "path": "mdp.py",
          "line_number": 202,
          "function_name": "always_walk_policy",
          "code": "def always_walk_policy(state: int) -> str:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 152,
          "function_name": "introduce_policies",
          "code": "action = always_walk_policy(state=3)  # @inspect action"
        },
        {
          "path": "mdp.py",
          "line_number": 203,
          "function_name": "always_walk_policy",
          "code": "return \"walk\""
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 152,
          "function_name": "introduce_policies",
          "code": "action = always_walk_policy(state=3)  # @inspect action"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 153,
          "function_name": "introduce_policies",
          "code": "action = tram_if_possible_policy(mdp, state=3)  # @inspect action"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 153,
          "function_name": "introduce_policies",
          "code": "action = tram_if_possible_policy(mdp, state=3)  # @inspect action"
        },
        {
          "path": "mdp.py",
          "line_number": 206,
          "function_name": "tram_if_possible_policy",
          "code": "def tram_if_possible_policy(mdp: MDP, state: int) -> str:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 153,
          "function_name": "introduce_policies",
          "code": "action = tram_if_possible_policy(mdp, state=3)  # @inspect action"
        },
        {
          "path": "mdp.py",
          "line_number": 208,
          "function_name": "tram_if_possible_policy",
          "code": "if state * 2 <= mdp.num_locs:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 153,
          "function_name": "introduce_policies",
          "code": "action = tram_if_possible_policy(mdp, state=3)  # @inspect action"
        },
        {
          "path": "mdp.py",
          "line_number": 209,
          "function_name": "tram_if_possible_policy",
          "code": "return \"tram\""
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 153,
          "function_name": "introduce_policies",
          "code": "action = tram_if_possible_policy(mdp, state=3)  # @inspect action"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 154,
          "function_name": "introduce_policies",
          "code": "action = tram_if_possible_policy(mdp, state=6)  # @inspect action"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 154,
          "function_name": "introduce_policies",
          "code": "action = tram_if_possible_policy(mdp, state=6)  # @inspect action"
        },
        {
          "path": "mdp.py",
          "line_number": 206,
          "function_name": "tram_if_possible_policy",
          "code": "def tram_if_possible_policy(mdp: MDP, state: int) -> str:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 154,
          "function_name": "introduce_policies",
          "code": "action = tram_if_possible_policy(mdp, state=6)  # @inspect action"
        },
        {
          "path": "mdp.py",
          "line_number": 208,
          "function_name": "tram_if_possible_policy",
          "code": "if state * 2 <= mdp.num_locs:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 154,
          "function_name": "introduce_policies",
          "code": "action = tram_if_possible_policy(mdp, state=6)  # @inspect action"
        },
        {
          "path": "mdp.py",
          "line_number": 211,
          "function_name": "tram_if_possible_policy",
          "code": "return \"walk\""
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 154,
          "function_name": "introduce_policies",
          "code": "action = tram_if_possible_policy(mdp, state=6)  # @inspect action"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 156,
          "function_name": "introduce_policies",
          "code": "text(\"How do you evaluate a policy?\") # @clear action"
        }
      ],
      "env": {
        "action": null
      },
      "renderings": [
        {
          "type": "markdown",
          "data": "How do you evaluate a policy?",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 157,
          "function_name": "introduce_policies",
          "code": "text(\"A **rollout** is a simulation of the policy in an MDP.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "A **rollout** is a simulation of the policy in an MDP.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 158,
          "function_name": "introduce_policies",
          "code": "text(\"Let's generate a rollout of the policy that always walks:\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Let's generate a rollout of the policy that always walks:",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 159,
          "function_name": "introduce_policies",
          "code": "np.random.seed(1)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 234,
          "function_name": "generate_rollout",
          "code": "def generate_rollout(mdp: MDP, policy: Policy) -> Rollout:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 236,
          "function_name": "generate_rollout",
          "code": "steps = []  # @inspect steps"
        }
      ],
      "env": {
        "steps": {
          "type": "list",
          "contents": [],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 237,
          "function_name": "generate_rollout",
          "code": "state = mdp.start_state()  # @inspect state @stepover"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 1,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 239,
          "function_name": "generate_rollout",
          "code": "while not mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 241,
          "function_name": "generate_rollout",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 244,
          "function_name": "generate_rollout",
          "code": "successors = [successor for successor in mdp.successors(state) if successor.action == action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 245,
          "function_name": "generate_rollout",
          "code": "probs = [successor.prob for successor in successors]  # @inspect probs"
        }
      ],
      "env": {
        "probs": {
          "type": "list",
          "contents": [
            {
              "type": "int",
              "contents": 1,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 246,
          "function_name": "generate_rollout",
          "code": "choice = np.random.choice(len(successors), p=probs)  # @inspect choice"
        }
      ],
      "env": {
        "choice": {
          "type": "int",
          "contents": 0,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 247,
          "function_name": "generate_rollout",
          "code": "step = successors[choice]  # @inspect step"
        }
      ],
      "env": {
        "step": {
          "type": "mdp.Step",
          "contents": {
            "action": {
              "type": "str",
              "contents": "walk",
              "dtype": null,
              "shape": null
            },
            "prob": {
              "type": "int",
              "contents": 1,
              "dtype": null,
              "shape": null
            },
            "reward": {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "state": {
              "type": "int",
              "contents": 2,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 248,
          "function_name": "generate_rollout",
          "code": "steps.append(step)  # @inspect steps"
        }
      ],
      "env": {
        "steps": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 251,
          "function_name": "generate_rollout",
          "code": "state = step.state  # @inspect state @clear successors probs choice step"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 2,
          "dtype": null,
          "shape": null
        },
        "successors": null,
        "probs": null,
        "choice": null,
        "step": null
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 239,
          "function_name": "generate_rollout",
          "code": "while not mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 241,
          "function_name": "generate_rollout",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 244,
          "function_name": "generate_rollout",
          "code": "successors = [successor for successor in mdp.successors(state) if successor.action == action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 3,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 245,
          "function_name": "generate_rollout",
          "code": "probs = [successor.prob for successor in successors]  # @inspect probs"
        }
      ],
      "env": {
        "probs": {
          "type": "list",
          "contents": [
            {
              "type": "int",
              "contents": 1,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 246,
          "function_name": "generate_rollout",
          "code": "choice = np.random.choice(len(successors), p=probs)  # @inspect choice"
        }
      ],
      "env": {
        "choice": {
          "type": "int",
          "contents": 0,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 247,
          "function_name": "generate_rollout",
          "code": "step = successors[choice]  # @inspect step"
        }
      ],
      "env": {
        "step": {
          "type": "mdp.Step",
          "contents": {
            "action": {
              "type": "str",
              "contents": "walk",
              "dtype": null,
              "shape": null
            },
            "prob": {
              "type": "int",
              "contents": 1,
              "dtype": null,
              "shape": null
            },
            "reward": {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "state": {
              "type": "int",
              "contents": 3,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 248,
          "function_name": "generate_rollout",
          "code": "steps.append(step)  # @inspect steps"
        }
      ],
      "env": {
        "steps": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 3,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 251,
          "function_name": "generate_rollout",
          "code": "state = step.state  # @inspect state @clear successors probs choice step"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 3,
          "dtype": null,
          "shape": null
        },
        "successors": null,
        "probs": null,
        "choice": null,
        "step": null
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 239,
          "function_name": "generate_rollout",
          "code": "while not mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 241,
          "function_name": "generate_rollout",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 244,
          "function_name": "generate_rollout",
          "code": "successors = [successor for successor in mdp.successors(state) if successor.action == action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 245,
          "function_name": "generate_rollout",
          "code": "probs = [successor.prob for successor in successors]  # @inspect probs"
        }
      ],
      "env": {
        "probs": {
          "type": "list",
          "contents": [
            {
              "type": "int",
              "contents": 1,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 246,
          "function_name": "generate_rollout",
          "code": "choice = np.random.choice(len(successors), p=probs)  # @inspect choice"
        }
      ],
      "env": {
        "choice": {
          "type": "int",
          "contents": 0,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 247,
          "function_name": "generate_rollout",
          "code": "step = successors[choice]  # @inspect step"
        }
      ],
      "env": {
        "step": {
          "type": "mdp.Step",
          "contents": {
            "action": {
              "type": "str",
              "contents": "walk",
              "dtype": null,
              "shape": null
            },
            "prob": {
              "type": "int",
              "contents": 1,
              "dtype": null,
              "shape": null
            },
            "reward": {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "state": {
              "type": "int",
              "contents": 4,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 248,
          "function_name": "generate_rollout",
          "code": "steps.append(step)  # @inspect steps"
        }
      ],
      "env": {
        "steps": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 3,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 251,
          "function_name": "generate_rollout",
          "code": "state = step.state  # @inspect state @clear successors probs choice step"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 4,
          "dtype": null,
          "shape": null
        },
        "successors": null,
        "probs": null,
        "choice": null,
        "step": null
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 239,
          "function_name": "generate_rollout",
          "code": "while not mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 241,
          "function_name": "generate_rollout",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 244,
          "function_name": "generate_rollout",
          "code": "successors = [successor for successor in mdp.successors(state) if successor.action == action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 5,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 245,
          "function_name": "generate_rollout",
          "code": "probs = [successor.prob for successor in successors]  # @inspect probs"
        }
      ],
      "env": {
        "probs": {
          "type": "list",
          "contents": [
            {
              "type": "int",
              "contents": 1,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 246,
          "function_name": "generate_rollout",
          "code": "choice = np.random.choice(len(successors), p=probs)  # @inspect choice"
        }
      ],
      "env": {
        "choice": {
          "type": "int",
          "contents": 0,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 247,
          "function_name": "generate_rollout",
          "code": "step = successors[choice]  # @inspect step"
        }
      ],
      "env": {
        "step": {
          "type": "mdp.Step",
          "contents": {
            "action": {
              "type": "str",
              "contents": "walk",
              "dtype": null,
              "shape": null
            },
            "prob": {
              "type": "int",
              "contents": 1,
              "dtype": null,
              "shape": null
            },
            "reward": {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "state": {
              "type": "int",
              "contents": 5,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 248,
          "function_name": "generate_rollout",
          "code": "steps.append(step)  # @inspect steps"
        }
      ],
      "env": {
        "steps": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 3,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 5,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 251,
          "function_name": "generate_rollout",
          "code": "state = step.state  # @inspect state @clear successors probs choice step"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 5,
          "dtype": null,
          "shape": null
        },
        "successors": null,
        "probs": null,
        "choice": null,
        "step": null
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 239,
          "function_name": "generate_rollout",
          "code": "while not mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 241,
          "function_name": "generate_rollout",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 244,
          "function_name": "generate_rollout",
          "code": "successors = [successor for successor in mdp.successors(state) if successor.action == action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 6,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 245,
          "function_name": "generate_rollout",
          "code": "probs = [successor.prob for successor in successors]  # @inspect probs"
        }
      ],
      "env": {
        "probs": {
          "type": "list",
          "contents": [
            {
              "type": "int",
              "contents": 1,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 246,
          "function_name": "generate_rollout",
          "code": "choice = np.random.choice(len(successors), p=probs)  # @inspect choice"
        }
      ],
      "env": {
        "choice": {
          "type": "int",
          "contents": 0,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 247,
          "function_name": "generate_rollout",
          "code": "step = successors[choice]  # @inspect step"
        }
      ],
      "env": {
        "step": {
          "type": "mdp.Step",
          "contents": {
            "action": {
              "type": "str",
              "contents": "walk",
              "dtype": null,
              "shape": null
            },
            "prob": {
              "type": "int",
              "contents": 1,
              "dtype": null,
              "shape": null
            },
            "reward": {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "state": {
              "type": "int",
              "contents": 6,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 248,
          "function_name": "generate_rollout",
          "code": "steps.append(step)  # @inspect steps"
        }
      ],
      "env": {
        "steps": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 3,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 5,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 6,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 251,
          "function_name": "generate_rollout",
          "code": "state = step.state  # @inspect state @clear successors probs choice step"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 6,
          "dtype": null,
          "shape": null
        },
        "successors": null,
        "probs": null,
        "choice": null,
        "step": null
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 239,
          "function_name": "generate_rollout",
          "code": "while not mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 241,
          "function_name": "generate_rollout",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 244,
          "function_name": "generate_rollout",
          "code": "successors = [successor for successor in mdp.successors(state) if successor.action == action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 7,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 245,
          "function_name": "generate_rollout",
          "code": "probs = [successor.prob for successor in successors]  # @inspect probs"
        }
      ],
      "env": {
        "probs": {
          "type": "list",
          "contents": [
            {
              "type": "int",
              "contents": 1,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 246,
          "function_name": "generate_rollout",
          "code": "choice = np.random.choice(len(successors), p=probs)  # @inspect choice"
        }
      ],
      "env": {
        "choice": {
          "type": "int",
          "contents": 0,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 247,
          "function_name": "generate_rollout",
          "code": "step = successors[choice]  # @inspect step"
        }
      ],
      "env": {
        "step": {
          "type": "mdp.Step",
          "contents": {
            "action": {
              "type": "str",
              "contents": "walk",
              "dtype": null,
              "shape": null
            },
            "prob": {
              "type": "int",
              "contents": 1,
              "dtype": null,
              "shape": null
            },
            "reward": {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "state": {
              "type": "int",
              "contents": 7,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 248,
          "function_name": "generate_rollout",
          "code": "steps.append(step)  # @inspect steps"
        }
      ],
      "env": {
        "steps": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 3,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 5,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 6,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 7,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 251,
          "function_name": "generate_rollout",
          "code": "state = step.state  # @inspect state @clear successors probs choice step"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 7,
          "dtype": null,
          "shape": null
        },
        "successors": null,
        "probs": null,
        "choice": null,
        "step": null
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 239,
          "function_name": "generate_rollout",
          "code": "while not mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 241,
          "function_name": "generate_rollout",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 244,
          "function_name": "generate_rollout",
          "code": "successors = [successor for successor in mdp.successors(state) if successor.action == action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 245,
          "function_name": "generate_rollout",
          "code": "probs = [successor.prob for successor in successors]  # @inspect probs"
        }
      ],
      "env": {
        "probs": {
          "type": "list",
          "contents": [
            {
              "type": "int",
              "contents": 1,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 246,
          "function_name": "generate_rollout",
          "code": "choice = np.random.choice(len(successors), p=probs)  # @inspect choice"
        }
      ],
      "env": {
        "choice": {
          "type": "int",
          "contents": 0,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 247,
          "function_name": "generate_rollout",
          "code": "step = successors[choice]  # @inspect step"
        }
      ],
      "env": {
        "step": {
          "type": "mdp.Step",
          "contents": {
            "action": {
              "type": "str",
              "contents": "walk",
              "dtype": null,
              "shape": null
            },
            "prob": {
              "type": "int",
              "contents": 1,
              "dtype": null,
              "shape": null
            },
            "reward": {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "state": {
              "type": "int",
              "contents": 8,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 248,
          "function_name": "generate_rollout",
          "code": "steps.append(step)  # @inspect steps"
        }
      ],
      "env": {
        "steps": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 3,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 5,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 6,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 7,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 251,
          "function_name": "generate_rollout",
          "code": "state = step.state  # @inspect state @clear successors probs choice step"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 8,
          "dtype": null,
          "shape": null
        },
        "successors": null,
        "probs": null,
        "choice": null,
        "step": null
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 239,
          "function_name": "generate_rollout",
          "code": "while not mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 241,
          "function_name": "generate_rollout",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 244,
          "function_name": "generate_rollout",
          "code": "successors = [successor for successor in mdp.successors(state) if successor.action == action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 9,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 245,
          "function_name": "generate_rollout",
          "code": "probs = [successor.prob for successor in successors]  # @inspect probs"
        }
      ],
      "env": {
        "probs": {
          "type": "list",
          "contents": [
            {
              "type": "int",
              "contents": 1,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 246,
          "function_name": "generate_rollout",
          "code": "choice = np.random.choice(len(successors), p=probs)  # @inspect choice"
        }
      ],
      "env": {
        "choice": {
          "type": "int",
          "contents": 0,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 247,
          "function_name": "generate_rollout",
          "code": "step = successors[choice]  # @inspect step"
        }
      ],
      "env": {
        "step": {
          "type": "mdp.Step",
          "contents": {
            "action": {
              "type": "str",
              "contents": "walk",
              "dtype": null,
              "shape": null
            },
            "prob": {
              "type": "int",
              "contents": 1,
              "dtype": null,
              "shape": null
            },
            "reward": {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "state": {
              "type": "int",
              "contents": 9,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 248,
          "function_name": "generate_rollout",
          "code": "steps.append(step)  # @inspect steps"
        }
      ],
      "env": {
        "steps": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 3,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 5,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 6,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 7,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 9,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 251,
          "function_name": "generate_rollout",
          "code": "state = step.state  # @inspect state @clear successors probs choice step"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 9,
          "dtype": null,
          "shape": null
        },
        "successors": null,
        "probs": null,
        "choice": null,
        "step": null
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 239,
          "function_name": "generate_rollout",
          "code": "while not mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 241,
          "function_name": "generate_rollout",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 244,
          "function_name": "generate_rollout",
          "code": "successors = [successor for successor in mdp.successors(state) if successor.action == action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 245,
          "function_name": "generate_rollout",
          "code": "probs = [successor.prob for successor in successors]  # @inspect probs"
        }
      ],
      "env": {
        "probs": {
          "type": "list",
          "contents": [
            {
              "type": "int",
              "contents": 1,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 246,
          "function_name": "generate_rollout",
          "code": "choice = np.random.choice(len(successors), p=probs)  # @inspect choice"
        }
      ],
      "env": {
        "choice": {
          "type": "int",
          "contents": 0,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 247,
          "function_name": "generate_rollout",
          "code": "step = successors[choice]  # @inspect step"
        }
      ],
      "env": {
        "step": {
          "type": "mdp.Step",
          "contents": {
            "action": {
              "type": "str",
              "contents": "walk",
              "dtype": null,
              "shape": null
            },
            "prob": {
              "type": "int",
              "contents": 1,
              "dtype": null,
              "shape": null
            },
            "reward": {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "state": {
              "type": "int",
              "contents": 10,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 248,
          "function_name": "generate_rollout",
          "code": "steps.append(step)  # @inspect steps"
        }
      ],
      "env": {
        "steps": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 3,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 5,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 6,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 7,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 9,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 251,
          "function_name": "generate_rollout",
          "code": "state = step.state  # @inspect state @clear successors probs choice step"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        },
        "successors": null,
        "probs": null,
        "choice": null,
        "step": null
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 239,
          "function_name": "generate_rollout",
          "code": "while not mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 253,
          "function_name": "generate_rollout",
          "code": "return Rollout(steps=steps, discount=mdp.discount())"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 253,
          "function_name": "generate_rollout",
          "code": "return Rollout(steps=steps, discount=mdp.discount())"
        },
        {
          "path": "mdp.py",
          "line_number": 138,
          "function_name": "discount",
          "code": "def discount(self) -> float:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 253,
          "function_name": "generate_rollout",
          "code": "return Rollout(steps=steps, discount=mdp.discount())"
        },
        {
          "path": "mdp.py",
          "line_number": 140,
          "function_name": "discount",
          "code": "return 1"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 253,
          "function_name": "generate_rollout",
          "code": "return Rollout(steps=steps, discount=mdp.discount())"
        },
        {
          "path": "mdp.py",
          "line_number": 221,
          "function_name": "__init__",
          "code": "def __init__(self, steps: list[Step], discount: float):"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 253,
          "function_name": "generate_rollout",
          "code": "return Rollout(steps=steps, discount=mdp.discount())"
        },
        {
          "path": "mdp.py",
          "line_number": 222,
          "function_name": "__init__",
          "code": "self.steps = steps  # @inspect self.steps"
        }
      ],
      "env": {
        "self.steps": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 3,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 5,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 6,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 7,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 9,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 253,
          "function_name": "generate_rollout",
          "code": "return Rollout(steps=steps, discount=mdp.discount())"
        },
        {
          "path": "mdp.py",
          "line_number": 223,
          "function_name": "__init__",
          "code": "self.discount = discount  # @inspect self.discount"
        }
      ],
      "env": {
        "self.discount": {
          "type": "int",
          "contents": 1,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 253,
          "function_name": "generate_rollout",
          "code": "return Rollout(steps=steps, discount=mdp.discount())"
        },
        {
          "path": "mdp.py",
          "line_number": 224,
          "function_name": "__init__",
          "code": "self.utility = compute_utility(steps, discount)  # @inspect self.utility"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 253,
          "function_name": "generate_rollout",
          "code": "return Rollout(steps=steps, discount=mdp.discount())"
        },
        {
          "path": "mdp.py",
          "line_number": 224,
          "function_name": "__init__",
          "code": "self.utility = compute_utility(steps, discount)  # @inspect self.utility"
        },
        {
          "path": "mdp.py",
          "line_number": 227,
          "function_name": "compute_utility",
          "code": "def compute_utility(steps: list[Step], discount: float) -> float:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 253,
          "function_name": "generate_rollout",
          "code": "return Rollout(steps=steps, discount=mdp.discount())"
        },
        {
          "path": "mdp.py",
          "line_number": 224,
          "function_name": "__init__",
          "code": "self.utility = compute_utility(steps, discount)  # @inspect self.utility"
        },
        {
          "path": "mdp.py",
          "line_number": 229,
          "function_name": "compute_utility",
          "code": "rewards = [step.reward * discount ** i for i, step in enumerate(steps)]  # @inspect rewards"
        }
      ],
      "env": {
        "rewards": {
          "type": "list",
          "contents": [
            {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 253,
          "function_name": "generate_rollout",
          "code": "return Rollout(steps=steps, discount=mdp.discount())"
        },
        {
          "path": "mdp.py",
          "line_number": 224,
          "function_name": "__init__",
          "code": "self.utility = compute_utility(steps, discount)  # @inspect self.utility"
        },
        {
          "path": "mdp.py",
          "line_number": 230,
          "function_name": "compute_utility",
          "code": "utility = sum(rewards)  # @inspect utility"
        }
      ],
      "env": {
        "utility": {
          "type": "int",
          "contents": -9,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 253,
          "function_name": "generate_rollout",
          "code": "return Rollout(steps=steps, discount=mdp.discount())"
        },
        {
          "path": "mdp.py",
          "line_number": 224,
          "function_name": "__init__",
          "code": "self.utility = compute_utility(steps, discount)  # @inspect self.utility"
        },
        {
          "path": "mdp.py",
          "line_number": 231,
          "function_name": "compute_utility",
          "code": "return utility"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 253,
          "function_name": "generate_rollout",
          "code": "return Rollout(steps=steps, discount=mdp.discount())"
        },
        {
          "path": "mdp.py",
          "line_number": 224,
          "function_name": "__init__",
          "code": "self.utility = compute_utility(steps, discount)  # @inspect self.utility"
        }
      ],
      "env": {
        "self.utility": {
          "type": "int",
          "contents": -9,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        },
        {
          "path": "mdp.py",
          "line_number": 253,
          "function_name": "generate_rollout",
          "code": "return Rollout(steps=steps, discount=mdp.discount())"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 160,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, always_walk_policy)  # @inspect rollout"
        }
      ],
      "env": {
        "rollout": {
          "type": "mdp.Rollout",
          "contents": {
            "steps": {
              "type": "list",
              "contents": [
                {
                  "type": "mdp.Step",
                  "contents": {
                    "action": {
                      "type": "str",
                      "contents": "walk",
                      "dtype": null,
                      "shape": null
                    },
                    "prob": {
                      "type": "int",
                      "contents": 1,
                      "dtype": null,
                      "shape": null
                    },
                    "reward": {
                      "type": "int",
                      "contents": -1,
                      "dtype": null,
                      "shape": null
                    },
                    "state": {
                      "type": "int",
                      "contents": 2,
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "mdp.Step",
                  "contents": {
                    "action": {
                      "type": "str",
                      "contents": "walk",
                      "dtype": null,
                      "shape": null
                    },
                    "prob": {
                      "type": "int",
                      "contents": 1,
                      "dtype": null,
                      "shape": null
                    },
                    "reward": {
                      "type": "int",
                      "contents": -1,
                      "dtype": null,
                      "shape": null
                    },
                    "state": {
                      "type": "int",
                      "contents": 3,
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "mdp.Step",
                  "contents": {
                    "action": {
                      "type": "str",
                      "contents": "walk",
                      "dtype": null,
                      "shape": null
                    },
                    "prob": {
                      "type": "int",
                      "contents": 1,
                      "dtype": null,
                      "shape": null
                    },
                    "reward": {
                      "type": "int",
                      "contents": -1,
                      "dtype": null,
                      "shape": null
                    },
                    "state": {
                      "type": "int",
                      "contents": 4,
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "mdp.Step",
                  "contents": {
                    "action": {
                      "type": "str",
                      "contents": "walk",
                      "dtype": null,
                      "shape": null
                    },
                    "prob": {
                      "type": "int",
                      "contents": 1,
                      "dtype": null,
                      "shape": null
                    },
                    "reward": {
                      "type": "int",
                      "contents": -1,
                      "dtype": null,
                      "shape": null
                    },
                    "state": {
                      "type": "int",
                      "contents": 5,
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "mdp.Step",
                  "contents": {
                    "action": {
                      "type": "str",
                      "contents": "walk",
                      "dtype": null,
                      "shape": null
                    },
                    "prob": {
                      "type": "int",
                      "contents": 1,
                      "dtype": null,
                      "shape": null
                    },
                    "reward": {
                      "type": "int",
                      "contents": -1,
                      "dtype": null,
                      "shape": null
                    },
                    "state": {
                      "type": "int",
                      "contents": 6,
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "mdp.Step",
                  "contents": {
                    "action": {
                      "type": "str",
                      "contents": "walk",
                      "dtype": null,
                      "shape": null
                    },
                    "prob": {
                      "type": "int",
                      "contents": 1,
                      "dtype": null,
                      "shape": null
                    },
                    "reward": {
                      "type": "int",
                      "contents": -1,
                      "dtype": null,
                      "shape": null
                    },
                    "state": {
                      "type": "int",
                      "contents": 7,
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "mdp.Step",
                  "contents": {
                    "action": {
                      "type": "str",
                      "contents": "walk",
                      "dtype": null,
                      "shape": null
                    },
                    "prob": {
                      "type": "int",
                      "contents": 1,
                      "dtype": null,
                      "shape": null
                    },
                    "reward": {
                      "type": "int",
                      "contents": -1,
                      "dtype": null,
                      "shape": null
                    },
                    "state": {
                      "type": "int",
                      "contents": 8,
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "mdp.Step",
                  "contents": {
                    "action": {
                      "type": "str",
                      "contents": "walk",
                      "dtype": null,
                      "shape": null
                    },
                    "prob": {
                      "type": "int",
                      "contents": 1,
                      "dtype": null,
                      "shape": null
                    },
                    "reward": {
                      "type": "int",
                      "contents": -1,
                      "dtype": null,
                      "shape": null
                    },
                    "state": {
                      "type": "int",
                      "contents": 9,
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "mdp.Step",
                  "contents": {
                    "action": {
                      "type": "str",
                      "contents": "walk",
                      "dtype": null,
                      "shape": null
                    },
                    "prob": {
                      "type": "int",
                      "contents": 1,
                      "dtype": null,
                      "shape": null
                    },
                    "reward": {
                      "type": "int",
                      "contents": -1,
                      "dtype": null,
                      "shape": null
                    },
                    "state": {
                      "type": "int",
                      "contents": 10,
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            },
            "discount": {
              "type": "int",
              "contents": 1,
              "dtype": null,
              "shape": null
            },
            "utility": {
              "type": "int",
              "contents": -9,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 162,
          "function_name": "introduce_policies",
          "code": "text(\"Each rollout generates a **utility**, which is a discounted sum of rewards.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Each rollout generates a **utility**, which is a discounted sum of rewards.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 163,
          "function_name": "introduce_policies",
          "code": "text(\"**Discounting**: how important is the future\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "**Discounting**: how important is the future",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 164,
          "function_name": "introduce_policies",
          "code": "text(\"- Generally represented by a discount factor 0 \u2264 \u03b3 \u2264 1\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Generally represented by a discount factor 0 \u2264 \u03b3 \u2264 1",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 165,
          "function_name": "introduce_policies",
          "code": "text(\"- Discount = 1 (no discounting): future is just as important as the present\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Discount = 1 (no discounting): future is just as important as the present",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 166,
          "function_name": "introduce_policies",
          "code": "utility_1 = compute_utility(rollout.steps, discount=1)  # @inspect utility_1"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 166,
          "function_name": "introduce_policies",
          "code": "utility_1 = compute_utility(rollout.steps, discount=1)  # @inspect utility_1"
        },
        {
          "path": "mdp.py",
          "line_number": 227,
          "function_name": "compute_utility",
          "code": "def compute_utility(steps: list[Step], discount: float) -> float:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 166,
          "function_name": "introduce_policies",
          "code": "utility_1 = compute_utility(rollout.steps, discount=1)  # @inspect utility_1"
        },
        {
          "path": "mdp.py",
          "line_number": 229,
          "function_name": "compute_utility",
          "code": "rewards = [step.reward * discount ** i for i, step in enumerate(steps)]  # @inspect rewards"
        }
      ],
      "env": {
        "rewards": {
          "type": "list",
          "contents": [
            {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 166,
          "function_name": "introduce_policies",
          "code": "utility_1 = compute_utility(rollout.steps, discount=1)  # @inspect utility_1"
        },
        {
          "path": "mdp.py",
          "line_number": 230,
          "function_name": "compute_utility",
          "code": "utility = sum(rewards)  # @inspect utility"
        }
      ],
      "env": {
        "utility": {
          "type": "int",
          "contents": -9,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 166,
          "function_name": "introduce_policies",
          "code": "utility_1 = compute_utility(rollout.steps, discount=1)  # @inspect utility_1"
        },
        {
          "path": "mdp.py",
          "line_number": 231,
          "function_name": "compute_utility",
          "code": "return utility"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 166,
          "function_name": "introduce_policies",
          "code": "utility_1 = compute_utility(rollout.steps, discount=1)  # @inspect utility_1"
        }
      ],
      "env": {
        "utility_1": {
          "type": "int",
          "contents": -9,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 167,
          "function_name": "introduce_policies",
          "code": "text(\"- Discount = 0 (full discounting): future doesn't matter at all\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Discount = 0 (full discounting): future doesn't matter at all",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 168,
          "function_name": "introduce_policies",
          "code": "utility_0 = compute_utility(rollout.steps, discount=0)  # @inspect utility_0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 168,
          "function_name": "introduce_policies",
          "code": "utility_0 = compute_utility(rollout.steps, discount=0)  # @inspect utility_0"
        },
        {
          "path": "mdp.py",
          "line_number": 227,
          "function_name": "compute_utility",
          "code": "def compute_utility(steps: list[Step], discount: float) -> float:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 168,
          "function_name": "introduce_policies",
          "code": "utility_0 = compute_utility(rollout.steps, discount=0)  # @inspect utility_0"
        },
        {
          "path": "mdp.py",
          "line_number": 229,
          "function_name": "compute_utility",
          "code": "rewards = [step.reward * discount ** i for i, step in enumerate(steps)]  # @inspect rewards"
        }
      ],
      "env": {
        "rewards": {
          "type": "list",
          "contents": [
            {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 168,
          "function_name": "introduce_policies",
          "code": "utility_0 = compute_utility(rollout.steps, discount=0)  # @inspect utility_0"
        },
        {
          "path": "mdp.py",
          "line_number": 230,
          "function_name": "compute_utility",
          "code": "utility = sum(rewards)  # @inspect utility"
        }
      ],
      "env": {
        "utility": {
          "type": "int",
          "contents": -1,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 168,
          "function_name": "introduce_policies",
          "code": "utility_0 = compute_utility(rollout.steps, discount=0)  # @inspect utility_0"
        },
        {
          "path": "mdp.py",
          "line_number": 231,
          "function_name": "compute_utility",
          "code": "return utility"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 168,
          "function_name": "introduce_policies",
          "code": "utility_0 = compute_utility(rollout.steps, discount=0)  # @inspect utility_0"
        }
      ],
      "env": {
        "utility_0": {
          "type": "int",
          "contents": -1,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 169,
          "function_name": "introduce_policies",
          "code": "text(\"- Discount = 0.5 (half discounting): next step matters half as much as the present step\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Discount = 0.5 (half discounting): next step matters half as much as the present step",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 170,
          "function_name": "introduce_policies",
          "code": "utility_0_5 = compute_utility(rollout.steps, discount=0.5)  # @inspect utility_0_5"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 170,
          "function_name": "introduce_policies",
          "code": "utility_0_5 = compute_utility(rollout.steps, discount=0.5)  # @inspect utility_0_5"
        },
        {
          "path": "mdp.py",
          "line_number": 227,
          "function_name": "compute_utility",
          "code": "def compute_utility(steps: list[Step], discount: float) -> float:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 170,
          "function_name": "introduce_policies",
          "code": "utility_0_5 = compute_utility(rollout.steps, discount=0.5)  # @inspect utility_0_5"
        },
        {
          "path": "mdp.py",
          "line_number": 229,
          "function_name": "compute_utility",
          "code": "rewards = [step.reward * discount ** i for i, step in enumerate(steps)]  # @inspect rewards"
        }
      ],
      "env": {
        "rewards": {
          "type": "list",
          "contents": [
            {
              "type": "float",
              "contents": -1.0,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": -0.5,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": -0.25,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": -0.125,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": -0.0625,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": -0.03125,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": -0.015625,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": -0.0078125,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": -0.00390625,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 170,
          "function_name": "introduce_policies",
          "code": "utility_0_5 = compute_utility(rollout.steps, discount=0.5)  # @inspect utility_0_5"
        },
        {
          "path": "mdp.py",
          "line_number": 230,
          "function_name": "compute_utility",
          "code": "utility = sum(rewards)  # @inspect utility"
        }
      ],
      "env": {
        "utility": {
          "type": "float",
          "contents": -1.99609375,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 170,
          "function_name": "introduce_policies",
          "code": "utility_0_5 = compute_utility(rollout.steps, discount=0.5)  # @inspect utility_0_5"
        },
        {
          "path": "mdp.py",
          "line_number": 231,
          "function_name": "compute_utility",
          "code": "return utility"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 170,
          "function_name": "introduce_policies",
          "code": "utility_0_5 = compute_utility(rollout.steps, discount=0.5)  # @inspect utility_0_5"
        }
      ],
      "env": {
        "utility_0_5": {
          "type": "float",
          "contents": -1.99609375,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 172,
          "function_name": "introduce_policies",
          "code": "text(\"Let's rollout the policy that always takes the tram:\") # @clear utility_1 utility_0 utility_0_5"
        }
      ],
      "env": {
        "utility_1": null,
        "utility_0": null,
        "utility_0_5": null
      },
      "renderings": [
        {
          "type": "markdown",
          "data": "Let's rollout the policy that always takes the tram:",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 173,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, partial(tram_if_possible_policy, mdp))  # @inspect rollout @stepover"
        }
      ],
      "env": {
        "rollout": {
          "type": "mdp.Rollout",
          "contents": {
            "steps": {
              "type": "list",
              "contents": [
                {
                  "type": "mdp.Step",
                  "contents": {
                    "action": {
                      "type": "str",
                      "contents": "tram",
                      "dtype": null,
                      "shape": null
                    },
                    "prob": {
                      "type": "float",
                      "contents": 0.6,
                      "dtype": null,
                      "shape": null
                    },
                    "reward": {
                      "type": "int",
                      "contents": -2,
                      "dtype": null,
                      "shape": null
                    },
                    "state": {
                      "type": "int",
                      "contents": 2,
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "mdp.Step",
                  "contents": {
                    "action": {
                      "type": "str",
                      "contents": "tram",
                      "dtype": null,
                      "shape": null
                    },
                    "prob": {
                      "type": "float",
                      "contents": 0.6,
                      "dtype": null,
                      "shape": null
                    },
                    "reward": {
                      "type": "int",
                      "contents": -2,
                      "dtype": null,
                      "shape": null
                    },
                    "state": {
                      "type": "int",
                      "contents": 4,
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "mdp.Step",
                  "contents": {
                    "action": {
                      "type": "str",
                      "contents": "tram",
                      "dtype": null,
                      "shape": null
                    },
                    "prob": {
                      "type": "float",
                      "contents": 0.4,
                      "dtype": null,
                      "shape": null
                    },
                    "reward": {
                      "type": "int",
                      "contents": -2,
                      "dtype": null,
                      "shape": null
                    },
                    "state": {
                      "type": "int",
                      "contents": 4,
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "mdp.Step",
                  "contents": {
                    "action": {
                      "type": "str",
                      "contents": "tram",
                      "dtype": null,
                      "shape": null
                    },
                    "prob": {
                      "type": "float",
                      "contents": 0.6,
                      "dtype": null,
                      "shape": null
                    },
                    "reward": {
                      "type": "int",
                      "contents": -2,
                      "dtype": null,
                      "shape": null
                    },
                    "state": {
                      "type": "int",
                      "contents": 8,
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "mdp.Step",
                  "contents": {
                    "action": {
                      "type": "str",
                      "contents": "walk",
                      "dtype": null,
                      "shape": null
                    },
                    "prob": {
                      "type": "int",
                      "contents": 1,
                      "dtype": null,
                      "shape": null
                    },
                    "reward": {
                      "type": "int",
                      "contents": -1,
                      "dtype": null,
                      "shape": null
                    },
                    "state": {
                      "type": "int",
                      "contents": 9,
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "mdp.Step",
                  "contents": {
                    "action": {
                      "type": "str",
                      "contents": "walk",
                      "dtype": null,
                      "shape": null
                    },
                    "prob": {
                      "type": "int",
                      "contents": 1,
                      "dtype": null,
                      "shape": null
                    },
                    "reward": {
                      "type": "int",
                      "contents": -1,
                      "dtype": null,
                      "shape": null
                    },
                    "state": {
                      "type": "int",
                      "contents": 10,
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            },
            "discount": {
              "type": "int",
              "contents": 1,
              "dtype": null,
              "shape": null
            },
            "utility": {
              "type": "int",
              "contents": -10,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 174,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, partial(tram_if_possible_policy, mdp))  # @inspect rollout @stepover"
        }
      ],
      "env": {
        "rollout": {
          "type": "mdp.Rollout",
          "contents": {
            "steps": {
              "type": "list",
              "contents": [
                {
                  "type": "mdp.Step",
                  "contents": {
                    "action": {
                      "type": "str",
                      "contents": "tram",
                      "dtype": null,
                      "shape": null
                    },
                    "prob": {
                      "type": "float",
                      "contents": 0.4,
                      "dtype": null,
                      "shape": null
                    },
                    "reward": {
                      "type": "int",
                      "contents": -2,
                      "dtype": null,
                      "shape": null
                    },
                    "state": {
                      "type": "int",
                      "contents": 1,
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "mdp.Step",
                  "contents": {
                    "action": {
                      "type": "str",
                      "contents": "tram",
                      "dtype": null,
                      "shape": null
                    },
                    "prob": {
                      "type": "float",
                      "contents": 0.6,
                      "dtype": null,
                      "shape": null
                    },
                    "reward": {
                      "type": "int",
                      "contents": -2,
                      "dtype": null,
                      "shape": null
                    },
                    "state": {
                      "type": "int",
                      "contents": 2,
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "mdp.Step",
                  "contents": {
                    "action": {
                      "type": "str",
                      "contents": "tram",
                      "dtype": null,
                      "shape": null
                    },
                    "prob": {
                      "type": "float",
                      "contents": 0.6,
                      "dtype": null,
                      "shape": null
                    },
                    "reward": {
                      "type": "int",
                      "contents": -2,
                      "dtype": null,
                      "shape": null
                    },
                    "state": {
                      "type": "int",
                      "contents": 4,
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "mdp.Step",
                  "contents": {
                    "action": {
                      "type": "str",
                      "contents": "tram",
                      "dtype": null,
                      "shape": null
                    },
                    "prob": {
                      "type": "float",
                      "contents": 0.6,
                      "dtype": null,
                      "shape": null
                    },
                    "reward": {
                      "type": "int",
                      "contents": -2,
                      "dtype": null,
                      "shape": null
                    },
                    "state": {
                      "type": "int",
                      "contents": 8,
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "mdp.Step",
                  "contents": {
                    "action": {
                      "type": "str",
                      "contents": "walk",
                      "dtype": null,
                      "shape": null
                    },
                    "prob": {
                      "type": "int",
                      "contents": 1,
                      "dtype": null,
                      "shape": null
                    },
                    "reward": {
                      "type": "int",
                      "contents": -1,
                      "dtype": null,
                      "shape": null
                    },
                    "state": {
                      "type": "int",
                      "contents": 9,
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "mdp.Step",
                  "contents": {
                    "action": {
                      "type": "str",
                      "contents": "walk",
                      "dtype": null,
                      "shape": null
                    },
                    "prob": {
                      "type": "int",
                      "contents": 1,
                      "dtype": null,
                      "shape": null
                    },
                    "reward": {
                      "type": "int",
                      "contents": -1,
                      "dtype": null,
                      "shape": null
                    },
                    "state": {
                      "type": "int",
                      "contents": 10,
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            },
            "discount": {
              "type": "int",
              "contents": 1,
              "dtype": null,
              "shape": null
            },
            "utility": {
              "type": "int",
              "contents": -10,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 175,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, partial(tram_if_possible_policy, mdp))  # @inspect rollout @stepover"
        }
      ],
      "env": {
        "rollout": {
          "type": "mdp.Rollout",
          "contents": {
            "steps": {
              "type": "list",
              "contents": [
                {
                  "type": "mdp.Step",
                  "contents": {
                    "action": {
                      "type": "str",
                      "contents": "tram",
                      "dtype": null,
                      "shape": null
                    },
                    "prob": {
                      "type": "float",
                      "contents": 0.4,
                      "dtype": null,
                      "shape": null
                    },
                    "reward": {
                      "type": "int",
                      "contents": -2,
                      "dtype": null,
                      "shape": null
                    },
                    "state": {
                      "type": "int",
                      "contents": 1,
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "mdp.Step",
                  "contents": {
                    "action": {
                      "type": "str",
                      "contents": "tram",
                      "dtype": null,
                      "shape": null
                    },
                    "prob": {
                      "type": "float",
                      "contents": 0.6,
                      "dtype": null,
                      "shape": null
                    },
                    "reward": {
                      "type": "int",
                      "contents": -2,
                      "dtype": null,
                      "shape": null
                    },
                    "state": {
                      "type": "int",
                      "contents": 2,
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "mdp.Step",
                  "contents": {
                    "action": {
                      "type": "str",
                      "contents": "tram",
                      "dtype": null,
                      "shape": null
                    },
                    "prob": {
                      "type": "float",
                      "contents": 0.4,
                      "dtype": null,
                      "shape": null
                    },
                    "reward": {
                      "type": "int",
                      "contents": -2,
                      "dtype": null,
                      "shape": null
                    },
                    "state": {
                      "type": "int",
                      "contents": 2,
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "mdp.Step",
                  "contents": {
                    "action": {
                      "type": "str",
                      "contents": "tram",
                      "dtype": null,
                      "shape": null
                    },
                    "prob": {
                      "type": "float",
                      "contents": 0.4,
                      "dtype": null,
                      "shape": null
                    },
                    "reward": {
                      "type": "int",
                      "contents": -2,
                      "dtype": null,
                      "shape": null
                    },
                    "state": {
                      "type": "int",
                      "contents": 2,
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "mdp.Step",
                  "contents": {
                    "action": {
                      "type": "str",
                      "contents": "tram",
                      "dtype": null,
                      "shape": null
                    },
                    "prob": {
                      "type": "float",
                      "contents": 0.4,
                      "dtype": null,
                      "shape": null
                    },
                    "reward": {
                      "type": "int",
                      "contents": -2,
                      "dtype": null,
                      "shape": null
                    },
                    "state": {
                      "type": "int",
                      "contents": 2,
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "mdp.Step",
                  "contents": {
                    "action": {
                      "type": "str",
                      "contents": "tram",
                      "dtype": null,
                      "shape": null
                    },
                    "prob": {
                      "type": "float",
                      "contents": 0.6,
                      "dtype": null,
                      "shape": null
                    },
                    "reward": {
                      "type": "int",
                      "contents": -2,
                      "dtype": null,
                      "shape": null
                    },
                    "state": {
                      "type": "int",
                      "contents": 4,
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "mdp.Step",
                  "contents": {
                    "action": {
                      "type": "str",
                      "contents": "tram",
                      "dtype": null,
                      "shape": null
                    },
                    "prob": {
                      "type": "float",
                      "contents": 0.6,
                      "dtype": null,
                      "shape": null
                    },
                    "reward": {
                      "type": "int",
                      "contents": -2,
                      "dtype": null,
                      "shape": null
                    },
                    "state": {
                      "type": "int",
                      "contents": 8,
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "mdp.Step",
                  "contents": {
                    "action": {
                      "type": "str",
                      "contents": "walk",
                      "dtype": null,
                      "shape": null
                    },
                    "prob": {
                      "type": "int",
                      "contents": 1,
                      "dtype": null,
                      "shape": null
                    },
                    "reward": {
                      "type": "int",
                      "contents": -1,
                      "dtype": null,
                      "shape": null
                    },
                    "state": {
                      "type": "int",
                      "contents": 9,
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "mdp.Step",
                  "contents": {
                    "action": {
                      "type": "str",
                      "contents": "walk",
                      "dtype": null,
                      "shape": null
                    },
                    "prob": {
                      "type": "int",
                      "contents": 1,
                      "dtype": null,
                      "shape": null
                    },
                    "reward": {
                      "type": "int",
                      "contents": -1,
                      "dtype": null,
                      "shape": null
                    },
                    "state": {
                      "type": "int",
                      "contents": 10,
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            },
            "discount": {
              "type": "int",
              "contents": 1,
              "dtype": null,
              "shape": null
            },
            "utility": {
              "type": "int",
              "contents": -16,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 176,
          "function_name": "introduce_policies",
          "code": "rollout = generate_rollout(mdp, partial(tram_if_possible_policy, mdp))  # @inspect rollout @stepover"
        }
      ],
      "env": {
        "rollout": {
          "type": "mdp.Rollout",
          "contents": {
            "steps": {
              "type": "list",
              "contents": [
                {
                  "type": "mdp.Step",
                  "contents": {
                    "action": {
                      "type": "str",
                      "contents": "tram",
                      "dtype": null,
                      "shape": null
                    },
                    "prob": {
                      "type": "float",
                      "contents": 0.6,
                      "dtype": null,
                      "shape": null
                    },
                    "reward": {
                      "type": "int",
                      "contents": -2,
                      "dtype": null,
                      "shape": null
                    },
                    "state": {
                      "type": "int",
                      "contents": 2,
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "mdp.Step",
                  "contents": {
                    "action": {
                      "type": "str",
                      "contents": "tram",
                      "dtype": null,
                      "shape": null
                    },
                    "prob": {
                      "type": "float",
                      "contents": 0.6,
                      "dtype": null,
                      "shape": null
                    },
                    "reward": {
                      "type": "int",
                      "contents": -2,
                      "dtype": null,
                      "shape": null
                    },
                    "state": {
                      "type": "int",
                      "contents": 4,
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "mdp.Step",
                  "contents": {
                    "action": {
                      "type": "str",
                      "contents": "tram",
                      "dtype": null,
                      "shape": null
                    },
                    "prob": {
                      "type": "float",
                      "contents": 0.4,
                      "dtype": null,
                      "shape": null
                    },
                    "reward": {
                      "type": "int",
                      "contents": -2,
                      "dtype": null,
                      "shape": null
                    },
                    "state": {
                      "type": "int",
                      "contents": 4,
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "mdp.Step",
                  "contents": {
                    "action": {
                      "type": "str",
                      "contents": "tram",
                      "dtype": null,
                      "shape": null
                    },
                    "prob": {
                      "type": "float",
                      "contents": 0.6,
                      "dtype": null,
                      "shape": null
                    },
                    "reward": {
                      "type": "int",
                      "contents": -2,
                      "dtype": null,
                      "shape": null
                    },
                    "state": {
                      "type": "int",
                      "contents": 8,
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "mdp.Step",
                  "contents": {
                    "action": {
                      "type": "str",
                      "contents": "walk",
                      "dtype": null,
                      "shape": null
                    },
                    "prob": {
                      "type": "int",
                      "contents": 1,
                      "dtype": null,
                      "shape": null
                    },
                    "reward": {
                      "type": "int",
                      "contents": -1,
                      "dtype": null,
                      "shape": null
                    },
                    "state": {
                      "type": "int",
                      "contents": 9,
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "mdp.Step",
                  "contents": {
                    "action": {
                      "type": "str",
                      "contents": "walk",
                      "dtype": null,
                      "shape": null
                    },
                    "prob": {
                      "type": "int",
                      "contents": 1,
                      "dtype": null,
                      "shape": null
                    },
                    "reward": {
                      "type": "int",
                      "contents": -1,
                      "dtype": null,
                      "shape": null
                    },
                    "state": {
                      "type": "int",
                      "contents": 10,
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            },
            "discount": {
              "type": "int",
              "contents": 1,
              "dtype": null,
              "shape": null
            },
            "utility": {
              "type": "int",
              "contents": -10,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 177,
          "function_name": "introduce_policies",
          "code": "text(\"Note that the same policy yields different rollouts.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Note that the same policy yields different rollouts.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 179,
          "function_name": "introduce_policies",
          "code": "text(\"So then how do we evaluate a policy?\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "So then how do we evaluate a policy?",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 180,
          "function_name": "introduce_policies",
          "code": "text(\"Answer: let's just rollout the policy many times and average the utilities.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Answer: let's just rollout the policy many times and average the utilities.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 181,
          "function_name": "introduce_policies",
          "code": "text(\"The expected utility (**value**) of a policy is defined as the average utility.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "The expected utility (**value**) of a policy is defined as the average utility.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 182,
          "function_name": "introduce_policies",
          "code": "text(\"V_\u03c0(s) = expected utility of starting in state s and following policy \u03c0.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "V_\u03c0(s) = expected utility of starting in state s and following policy \u03c0.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 185,
          "function_name": "introduce_policies",
          "code": "walk_value = monte_carlo_policy_evaluation(mdp, always_walk_policy, num_rollouts=1)  # @inspect walk_value"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 185,
          "function_name": "introduce_policies",
          "code": "walk_value = monte_carlo_policy_evaluation(mdp, always_walk_policy, num_rollouts=1)  # @inspect walk_value"
        },
        {
          "path": "mdp.py",
          "line_number": 256,
          "function_name": "monte_carlo_policy_evaluation",
          "code": "def monte_carlo_policy_evaluation(mdp: MDP, policy: Policy, num_rollouts: int) -> float:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 185,
          "function_name": "introduce_policies",
          "code": "walk_value = monte_carlo_policy_evaluation(mdp, always_walk_policy, num_rollouts=1)  # @inspect walk_value"
        },
        {
          "path": "mdp.py",
          "line_number": 258,
          "function_name": "monte_carlo_policy_evaluation",
          "code": "utilities = [generate_rollout(mdp, policy).utility for _ in range(num_rollouts)]  # @inspect utilities @stepover"
        }
      ],
      "env": {
        "utilities": {
          "type": "list",
          "contents": [
            {
              "type": "int",
              "contents": -9,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 185,
          "function_name": "introduce_policies",
          "code": "walk_value = monte_carlo_policy_evaluation(mdp, always_walk_policy, num_rollouts=1)  # @inspect walk_value"
        },
        {
          "path": "mdp.py",
          "line_number": 259,
          "function_name": "monte_carlo_policy_evaluation",
          "code": "average_utility = np.mean(utilities)  # @inspect average_utility"
        }
      ],
      "env": {
        "average_utility": {
          "type": "numpy.float64",
          "contents": -9.0,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 185,
          "function_name": "introduce_policies",
          "code": "walk_value = monte_carlo_policy_evaluation(mdp, always_walk_policy, num_rollouts=1)  # @inspect walk_value"
        },
        {
          "path": "mdp.py",
          "line_number": 260,
          "function_name": "monte_carlo_policy_evaluation",
          "code": "return average_utility"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 185,
          "function_name": "introduce_policies",
          "code": "walk_value = monte_carlo_policy_evaluation(mdp, always_walk_policy, num_rollouts=1)  # @inspect walk_value"
        }
      ],
      "env": {
        "walk_value": {
          "type": "numpy.float64",
          "contents": -9.0,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 186,
          "function_name": "introduce_policies",
          "code": "estimated_tram_value = monte_carlo_policy_evaluation(mdp, partial(tram_if_possible_policy, mdp), num_rollouts=20)  # @inspect estimated_tram_value @stepover"
        }
      ],
      "env": {
        "estimated_tram_value": {
          "type": "numpy.float64",
          "contents": -11.7,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 188,
          "function_name": "introduce_policies",
          "code": "text(\"Let's try the dice game:\")  # @clear rollout walk_value estimated_tram_value"
        }
      ],
      "env": {
        "rollout": null,
        "walk_value": null,
        "estimated_tram_value": null
      },
      "renderings": [
        {
          "type": "markdown",
          "data": "Let's try the dice game:",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 189,
          "function_name": "introduce_policies",
          "code": "mdp = DiceGameMDP()  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 190,
          "function_name": "introduce_policies",
          "code": "quit_value = monte_carlo_policy_evaluation(mdp, always_quit_policy, num_rollouts=1)  # @inspect quit_value"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 190,
          "function_name": "introduce_policies",
          "code": "quit_value = monte_carlo_policy_evaluation(mdp, always_quit_policy, num_rollouts=1)  # @inspect quit_value"
        },
        {
          "path": "mdp.py",
          "line_number": 256,
          "function_name": "monte_carlo_policy_evaluation",
          "code": "def monte_carlo_policy_evaluation(mdp: MDP, policy: Policy, num_rollouts: int) -> float:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 190,
          "function_name": "introduce_policies",
          "code": "quit_value = monte_carlo_policy_evaluation(mdp, always_quit_policy, num_rollouts=1)  # @inspect quit_value"
        },
        {
          "path": "mdp.py",
          "line_number": 258,
          "function_name": "monte_carlo_policy_evaluation",
          "code": "utilities = [generate_rollout(mdp, policy).utility for _ in range(num_rollouts)]  # @inspect utilities @stepover"
        }
      ],
      "env": {
        "utilities": {
          "type": "list",
          "contents": [
            {
              "type": "int",
              "contents": 10,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 190,
          "function_name": "introduce_policies",
          "code": "quit_value = monte_carlo_policy_evaluation(mdp, always_quit_policy, num_rollouts=1)  # @inspect quit_value"
        },
        {
          "path": "mdp.py",
          "line_number": 259,
          "function_name": "monte_carlo_policy_evaluation",
          "code": "average_utility = np.mean(utilities)  # @inspect average_utility"
        }
      ],
      "env": {
        "average_utility": {
          "type": "numpy.float64",
          "contents": 10.0,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 190,
          "function_name": "introduce_policies",
          "code": "quit_value = monte_carlo_policy_evaluation(mdp, always_quit_policy, num_rollouts=1)  # @inspect quit_value"
        },
        {
          "path": "mdp.py",
          "line_number": 260,
          "function_name": "monte_carlo_policy_evaluation",
          "code": "return average_utility"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 190,
          "function_name": "introduce_policies",
          "code": "quit_value = monte_carlo_policy_evaluation(mdp, always_quit_policy, num_rollouts=1)  # @inspect quit_value"
        }
      ],
      "env": {
        "quit_value": {
          "type": "numpy.float64",
          "contents": 10.0,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 191,
          "function_name": "introduce_policies",
          "code": "stay_value = monte_carlo_policy_evaluation(mdp, always_stay_policy, num_rollouts=20)  # @inspect stay_value"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 191,
          "function_name": "introduce_policies",
          "code": "stay_value = monte_carlo_policy_evaluation(mdp, always_stay_policy, num_rollouts=20)  # @inspect stay_value"
        },
        {
          "path": "mdp.py",
          "line_number": 256,
          "function_name": "monte_carlo_policy_evaluation",
          "code": "def monte_carlo_policy_evaluation(mdp: MDP, policy: Policy, num_rollouts: int) -> float:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 191,
          "function_name": "introduce_policies",
          "code": "stay_value = monte_carlo_policy_evaluation(mdp, always_stay_policy, num_rollouts=20)  # @inspect stay_value"
        },
        {
          "path": "mdp.py",
          "line_number": 258,
          "function_name": "monte_carlo_policy_evaluation",
          "code": "utilities = [generate_rollout(mdp, policy).utility for _ in range(num_rollouts)]  # @inspect utilities @stepover"
        }
      ],
      "env": {
        "utilities": {
          "type": "list",
          "contents": [
            {
              "type": "int",
              "contents": 4,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 4,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 8,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 16,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 4,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 20,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 4,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 60,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 4,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 4,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 8,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 12,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 4,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 4,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 4,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 44,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 12,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 16,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 12,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 12,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 191,
          "function_name": "introduce_policies",
          "code": "stay_value = monte_carlo_policy_evaluation(mdp, always_stay_policy, num_rollouts=20)  # @inspect stay_value"
        },
        {
          "path": "mdp.py",
          "line_number": 259,
          "function_name": "monte_carlo_policy_evaluation",
          "code": "average_utility = np.mean(utilities)  # @inspect average_utility"
        }
      ],
      "env": {
        "average_utility": {
          "type": "numpy.float64",
          "contents": 12.8,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 191,
          "function_name": "introduce_policies",
          "code": "stay_value = monte_carlo_policy_evaluation(mdp, always_stay_policy, num_rollouts=20)  # @inspect stay_value"
        },
        {
          "path": "mdp.py",
          "line_number": 260,
          "function_name": "monte_carlo_policy_evaluation",
          "code": "return average_utility"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        },
        {
          "path": "mdp.py",
          "line_number": 191,
          "function_name": "introduce_policies",
          "code": "stay_value = monte_carlo_policy_evaluation(mdp, always_stay_policy, num_rollouts=20)  # @inspect stay_value"
        }
      ],
      "env": {
        "stay_value": {
          "type": "numpy.float64",
          "contents": 12.8,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 32,
          "function_name": "main",
          "code": "introduce_policies()"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 263,
          "function_name": "introduce_policy_evaluation",
          "code": "def introduce_policy_evaluation():"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 264,
          "function_name": "introduce_policy_evaluation",
          "code": "text(\"So far: can perform many rollouts and average to estimate the value of a policy V_\u03c0(s)\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "So far: can perform many rollouts and average to estimate the value of a policy V_\u03c0(s)",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 265,
          "function_name": "introduce_policy_evaluation",
          "code": "text(\"Is there a way to compute the value V_\u03c0(s) more efficiently?\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Is there a way to compute the value V_\u03c0(s) more efficiently?",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 266,
          "function_name": "introduce_policy_evaluation",
          "code": "text(\"Yes!\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Yes!",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 267,
          "function_name": "introduce_policy_evaluation",
          "code": "text(\"Key: compute the recurrences (recall dynamic programming for search problems).\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Key: compute the recurrences (recall dynamic programming for search problems).",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 269,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_q_values()"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 269,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_q_values()"
        },
        {
          "path": "mdp.py",
          "line_number": 298,
          "function_name": "introduce_q_values",
          "code": "def introduce_q_values():"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 269,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_q_values()"
        },
        {
          "path": "mdp.py",
          "line_number": 299,
          "function_name": "introduce_q_values",
          "code": "text(\"First, we introduce **Q-values**.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "First, we introduce **Q-values**.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 269,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_q_values()"
        },
        {
          "path": "mdp.py",
          "line_number": 300,
          "function_name": "introduce_q_values",
          "code": "text(\"Q(s, a, V) = measures value of taking action a in state s, and obtaining some value V\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Q(s, a, V) = measures value of taking action a in state s, and obtaining some value V",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 269,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_q_values()"
        },
        {
          "path": "mdp.py",
          "line_number": 301,
          "function_name": "introduce_q_values",
          "code": "text(\"Here, V(s) is the value of some policy from state s.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Here, V(s) is the value of some policy from state s.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 269,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_q_values()"
        },
        {
          "path": "mdp.py",
          "line_number": 303,
          "function_name": "introduce_q_values",
          "code": "text(\"Let's consider our flaky tram MDP example again.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Let's consider our flaky tram MDP example again.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 269,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_q_values()"
        },
        {
          "path": "mdp.py",
          "line_number": 304,
          "function_name": "introduce_q_values",
          "code": "mdp = FlakyTramMDP(num_locs=10, failure_prob=0.4)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 269,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_q_values()"
        },
        {
          "path": "mdp.py",
          "line_number": 306,
          "function_name": "introduce_q_values",
          "code": "text(\"We start with an initial set of values corresponding to terminating\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "We start with an initial set of values corresponding to terminating",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 269,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_q_values()"
        },
        {
          "path": "mdp.py",
          "line_number": 307,
          "function_name": "introduce_q_values",
          "code": "values = get_initial_values(mdp)  # @inspect values @stepover"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 269,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_q_values()"
        },
        {
          "path": "mdp.py",
          "line_number": 309,
          "function_name": "introduce_q_values",
          "code": "text(\"Let's warmup with computing the Q-value for just one state.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Let's warmup with computing the Q-value for just one state.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 269,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_q_values()"
        },
        {
          "path": "mdp.py",
          "line_number": 311,
          "function_name": "introduce_q_values",
          "code": "state = 9  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 9,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 269,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_q_values()"
        },
        {
          "path": "mdp.py",
          "line_number": 313,
          "function_name": "introduce_q_values",
          "code": "policy = partial(tram_if_possible_policy, mdp)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 269,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_q_values()"
        },
        {
          "path": "mdp.py",
          "line_number": 315,
          "function_name": "introduce_q_values",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 269,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_q_values()"
        },
        {
          "path": "mdp.py",
          "line_number": 317,
          "function_name": "introduce_q_values",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 269,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_q_values()"
        },
        {
          "path": "mdp.py",
          "line_number": 319,
          "function_name": "introduce_q_values",
          "code": "value = compute_q_value(successors, mdp.discount(), values)  # @inspect value"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 269,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_q_values()"
        },
        {
          "path": "mdp.py",
          "line_number": 319,
          "function_name": "introduce_q_values",
          "code": "value = compute_q_value(successors, mdp.discount(), values)  # @inspect value"
        },
        {
          "path": "mdp.py",
          "line_number": 138,
          "function_name": "discount",
          "code": "def discount(self) -> float:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 269,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_q_values()"
        },
        {
          "path": "mdp.py",
          "line_number": 319,
          "function_name": "introduce_q_values",
          "code": "value = compute_q_value(successors, mdp.discount(), values)  # @inspect value"
        },
        {
          "path": "mdp.py",
          "line_number": 140,
          "function_name": "discount",
          "code": "return 1"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 269,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_q_values()"
        },
        {
          "path": "mdp.py",
          "line_number": 319,
          "function_name": "introduce_q_values",
          "code": "value = compute_q_value(successors, mdp.discount(), values)  # @inspect value"
        },
        {
          "path": "mdp.py",
          "line_number": 377,
          "function_name": "compute_q_value",
          "code": "def compute_q_value(successors: list[Step], discount: float, values: dict[Any, float]) -> float:  # @inspect successors values"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        },
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 269,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_q_values()"
        },
        {
          "path": "mdp.py",
          "line_number": 319,
          "function_name": "introduce_q_values",
          "code": "value = compute_q_value(successors, mdp.discount(), values)  # @inspect value"
        },
        {
          "path": "mdp.py",
          "line_number": 379,
          "function_name": "compute_q_value",
          "code": "weighted_utilities = []  # @inspect weighted_utilities"
        }
      ],
      "env": {
        "weighted_utilities": {
          "type": "list",
          "contents": [],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 269,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_q_values()"
        },
        {
          "path": "mdp.py",
          "line_number": 319,
          "function_name": "introduce_q_values",
          "code": "value = compute_q_value(successors, mdp.discount(), values)  # @inspect value"
        },
        {
          "path": "mdp.py",
          "line_number": 381,
          "function_name": "compute_q_value",
          "code": "for step in successors:  # @inspect step"
        }
      ],
      "env": {
        "step": {
          "type": "mdp.Step",
          "contents": {
            "action": {
              "type": "str",
              "contents": "walk",
              "dtype": null,
              "shape": null
            },
            "prob": {
              "type": "int",
              "contents": 1,
              "dtype": null,
              "shape": null
            },
            "reward": {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "state": {
              "type": "int",
              "contents": 10,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 269,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_q_values()"
        },
        {
          "path": "mdp.py",
          "line_number": 319,
          "function_name": "introduce_q_values",
          "code": "value = compute_q_value(successors, mdp.discount(), values)  # @inspect value"
        },
        {
          "path": "mdp.py",
          "line_number": 382,
          "function_name": "compute_q_value",
          "code": "utility = step.reward + discount * values[step.state]  # @inspect utility"
        }
      ],
      "env": {
        "utility": {
          "type": "int",
          "contents": -1,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 269,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_q_values()"
        },
        {
          "path": "mdp.py",
          "line_number": 319,
          "function_name": "introduce_q_values",
          "code": "value = compute_q_value(successors, mdp.discount(), values)  # @inspect value"
        },
        {
          "path": "mdp.py",
          "line_number": 383,
          "function_name": "compute_q_value",
          "code": "weighted_utilities.append(step.prob * utility)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 269,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_q_values()"
        },
        {
          "path": "mdp.py",
          "line_number": 319,
          "function_name": "introduce_q_values",
          "code": "value = compute_q_value(successors, mdp.discount(), values)  # @inspect value"
        },
        {
          "path": "mdp.py",
          "line_number": 381,
          "function_name": "compute_q_value",
          "code": "for step in successors:  # @inspect step"
        }
      ],
      "env": {
        "step": {
          "type": "mdp.Step",
          "contents": {
            "action": {
              "type": "str",
              "contents": "walk",
              "dtype": null,
              "shape": null
            },
            "prob": {
              "type": "int",
              "contents": 1,
              "dtype": null,
              "shape": null
            },
            "reward": {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "state": {
              "type": "int",
              "contents": 10,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 269,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_q_values()"
        },
        {
          "path": "mdp.py",
          "line_number": 319,
          "function_name": "introduce_q_values",
          "code": "value = compute_q_value(successors, mdp.discount(), values)  # @inspect value"
        },
        {
          "path": "mdp.py",
          "line_number": 385,
          "function_name": "compute_q_value",
          "code": "value = sum(weighted_utilities)  # @inspect weighted_utilities value"
        }
      ],
      "env": {
        "weighted_utilities": {
          "type": "list",
          "contents": [
            {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        },
        "value": {
          "type": "int",
          "contents": -1,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 269,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_q_values()"
        },
        {
          "path": "mdp.py",
          "line_number": 319,
          "function_name": "introduce_q_values",
          "code": "value = compute_q_value(successors, mdp.discount(), values)  # @inspect value"
        },
        {
          "path": "mdp.py",
          "line_number": 386,
          "function_name": "compute_q_value",
          "code": "return value"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 269,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_q_values()"
        },
        {
          "path": "mdp.py",
          "line_number": 319,
          "function_name": "introduce_q_values",
          "code": "value = compute_q_value(successors, mdp.discount(), values)  # @inspect value"
        }
      ],
      "env": {
        "value": {
          "type": "int",
          "contents": -1,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 269,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_q_values()"
        },
        {
          "path": "mdp.py",
          "line_number": 321,
          "function_name": "introduce_q_values",
          "code": "text(\"Two things to get to policy evaluation:\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Two things to get to policy evaluation:",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 269,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_q_values()"
        },
        {
          "path": "mdp.py",
          "line_number": 322,
          "function_name": "introduce_q_values",
          "code": "text(\"- Do this for all states\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Do this for all states",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 269,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_q_values()"
        },
        {
          "path": "mdp.py",
          "line_number": 323,
          "function_name": "introduce_q_values",
          "code": "text(\"- Rinse and repeat with the values (instead of terminating values)\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Rinse and repeat with the values (instead of terminating values)",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 269,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_q_values()"
        },
        {
          "path": "mdp.py",
          "line_number": 324,
          "function_name": "introduce_q_values",
          "code": "text(\"This is called **bootstrapping**:\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "This is called **bootstrapping**:",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 269,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_q_values()"
        },
        {
          "path": "mdp.py",
          "line_number": 325,
          "function_name": "introduce_q_values",
          "code": "text(\"After 0 steps: value of terminating\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "After 0 steps: value of terminating",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 269,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_q_values()"
        },
        {
          "path": "mdp.py",
          "line_number": 326,
          "function_name": "introduce_q_values",
          "code": "text(\"After 1 step: value of following policy for 1 step, then terminating\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "After 1 step: value of following policy for 1 step, then terminating",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 269,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_q_values()"
        },
        {
          "path": "mdp.py",
          "line_number": 327,
          "function_name": "introduce_q_values",
          "code": "text(\"After 2 steps: value of following policy for 2 steps, then terminating\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "After 2 steps: value of following policy for 2 steps, then terminating",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 269,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_q_values()"
        },
        {
          "path": "mdp.py",
          "line_number": 328,
          "function_name": "introduce_q_values",
          "code": "text(\"... and so on.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "... and so on.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 269,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_q_values()"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 270,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_convergence()"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 270,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_convergence()"
        },
        {
          "path": "mdp.py",
          "line_number": 331,
          "function_name": "introduce_convergence",
          "code": "def introduce_convergence():"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 270,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_convergence()"
        },
        {
          "path": "mdp.py",
          "line_number": 332,
          "function_name": "introduce_convergence",
          "code": "text(\"How do we know when an iterative algorithm is done?\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "How do we know when an iterative algorithm is done?",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 270,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_convergence()"
        },
        {
          "path": "mdp.py",
          "line_number": 333,
          "function_name": "introduce_convergence",
          "code": "text(\"[0] values \u2192 [1] values \u2192 [2] values \u2192 [3] values \u2192 [4] values\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "[0] values \u2192 [1] values \u2192 [2] values \u2192 [3] values \u2192 [4] values",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 270,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_convergence()"
        },
        {
          "path": "mdp.py",
          "line_number": 335,
          "function_name": "introduce_convergence",
          "code": "text(\"We look at the maximum change between iterations.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "We look at the maximum change between iterations.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 270,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_convergence()"
        },
        {
          "path": "mdp.py",
          "line_number": 336,
          "function_name": "introduce_convergence",
          "code": "values = {1: 0.2, 2: 1.0, 3: -1.0}  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "float",
              "contents": 0.2,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "float",
              "contents": 1.0,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "float",
              "contents": -1.0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 270,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_convergence()"
        },
        {
          "path": "mdp.py",
          "line_number": 337,
          "function_name": "introduce_convergence",
          "code": "new_values = {1: 0.2, 2: 1.1, 3: 1.0}  # @inspect new_values"
        }
      ],
      "env": {
        "new_values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "float",
              "contents": 0.2,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "float",
              "contents": 1.1,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "float",
              "contents": 1.0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 270,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_convergence()"
        },
        {
          "path": "mdp.py",
          "line_number": 338,
          "function_name": "introduce_convergence",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 270,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_convergence()"
        },
        {
          "path": "mdp.py",
          "line_number": 338,
          "function_name": "introduce_convergence",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance"
        },
        {
          "path": "mdp.py",
          "line_number": 389,
          "function_name": "compute_distance",
          "code": "def compute_distance(values: dict[Any, float], new_values: dict[Any, float]) -> float:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 270,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_convergence()"
        },
        {
          "path": "mdp.py",
          "line_number": 338,
          "function_name": "introduce_convergence",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance"
        },
        {
          "path": "mdp.py",
          "line_number": 391,
          "function_name": "compute_distance",
          "code": "distances = [abs(values[state] - new_values[state]) for state in values]  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "float",
              "contents": 0.0,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.10000000000000009,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.0,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 270,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_convergence()"
        },
        {
          "path": "mdp.py",
          "line_number": 338,
          "function_name": "introduce_convergence",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance"
        },
        {
          "path": "mdp.py",
          "line_number": 392,
          "function_name": "compute_distance",
          "code": "max_distance = max(distances)  # @inspect max_distance"
        }
      ],
      "env": {
        "max_distance": {
          "type": "float",
          "contents": 2.0,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 270,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_convergence()"
        },
        {
          "path": "mdp.py",
          "line_number": 338,
          "function_name": "introduce_convergence",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance"
        },
        {
          "path": "mdp.py",
          "line_number": 393,
          "function_name": "compute_distance",
          "code": "return max_distance"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 270,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_convergence()"
        },
        {
          "path": "mdp.py",
          "line_number": 338,
          "function_name": "introduce_convergence",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 2.0,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 270,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_convergence()"
        },
        {
          "path": "mdp.py",
          "line_number": 340,
          "function_name": "introduce_convergence",
          "code": "text(\"When the distance is less than some tolerance (say 1e-5), we terminate.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "When the distance is less than some tolerance (say 1e-5), we terminate.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 270,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_convergence()"
        },
        {
          "path": "mdp.py",
          "line_number": 341,
          "function_name": "introduce_convergence",
          "code": "text(\"This will be used for policy evaluation and value iteration.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "This will be used for policy evaluation and value iteration.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 270,
          "function_name": "introduce_policy_evaluation",
          "code": "introduce_convergence()"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 272,
          "function_name": "introduce_policy_evaluation",
          "code": "text(\"The resulting algorithm is called **policy evaluation**.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "The resulting algorithm is called **policy evaluation**.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 273,
          "function_name": "introduce_policy_evaluation",
          "code": "mdp = FlakyTramMDP(num_locs=10, failure_prob=0.4)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 274,
          "function_name": "introduce_policy_evaluation",
          "code": "policy = partial(tram_if_possible_policy, mdp)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 402,
          "function_name": "policy_evaluation",
          "code": "def policy_evaluation(mdp: MDP, policy: Policy, max_iters: int = 100, tolerance: float = 1e-5) -> PolicyEvaluationResult:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 409,
          "function_name": "policy_evaluation",
          "code": "values = get_initial_values(mdp)  # @stepover @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 411,
          "function_name": "policy_evaluation",
          "code": "distances = []"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 0,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 1,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 2,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 3,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 6,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 3,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 4,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 5,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 5,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 6,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 7,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 7,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 8,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 9,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 9,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "int",
          "contents": 99,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "float",
              "contents": -102.0,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "float",
              "contents": -102.0,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "float",
              "contents": -102.0,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "float",
              "contents": -102.0,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "float",
              "contents": -42.00000000000001,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "int",
              "contents": -101,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "int",
              "contents": -101,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "int",
              "contents": -101,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 1,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 1,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 2,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 3,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 6,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 3,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 4,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 5,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 5,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 6,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 7,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 7,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 8,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 9,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 9,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "int",
          "contents": 99,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "float",
              "contents": -104.0,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "float",
              "contents": -104.0,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "float",
              "contents": -103.4,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "float",
              "contents": -103.4,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "float",
              "contents": -18.800000000000004,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "int",
              "contents": -102,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "int",
              "contents": -102,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "int",
              "contents": -2,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 2,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 1,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 2,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 3,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 6,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 3,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 4,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 5,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 5,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 6,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 7,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 7,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 8,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 9,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 9,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "int",
          "contents": 99,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "float",
              "contents": -106.0,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "float",
              "contents": -105.64000000000001,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "float",
              "contents": -104.56,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "float",
              "contents": -44.56,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "float",
              "contents": -9.520000000000001,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "int",
              "contents": -103,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "int",
              "contents": -3,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "int",
              "contents": -2,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 3,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 1,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 2,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 3,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 6,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 3,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 4,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 5,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 5,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 6,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 7,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 7,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 8,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 9,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 9,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "int",
          "contents": 99,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "float",
              "contents": -107.784,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "float",
              "contents": -70.99200000000002,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "float",
              "contents": -105.624,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "float",
              "contents": -21.024,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "float",
              "contents": -5.808000000000001,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "int",
              "contents": -4,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "int",
              "contents": -3,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "int",
              "contents": -2,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 4,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 1,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 2,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 3,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 6,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 3,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 4,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 5,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 5,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 6,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 7,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 7,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 8,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 9,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 9,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 58.974399999999996,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 58.974399999999996,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "float",
              "contents": -87.70880000000001,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "float",
              "contents": -43.01120000000001,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "float",
              "contents": -46.6496,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "float",
              "contents": -11.6096,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "float",
              "contents": -4.323200000000001,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "int",
              "contents": -4,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "int",
              "contents": -3,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "int",
              "contents": -2,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 5,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 1,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 2,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 3,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 6,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 3,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 4,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 5,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 5,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 6,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 7,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 7,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 8,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 9,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 9,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 24.818560000000005,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 58.974399999999996,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.818560000000005,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "float",
              "contents": -62.890240000000006,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "float",
              "contents": -26.170240000000007,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "float",
              "contents": -23.05984,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "float",
              "contents": -7.84384,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "float",
              "contents": -3.72928,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "int",
              "contents": -4,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "int",
              "contents": -3,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "int",
              "contents": -2,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 6,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 1,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 2,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 3,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 6,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 3,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 4,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 5,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 5,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 6,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 7,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 7,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 8,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 9,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 9,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 20.031999999999996,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 58.974399999999996,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.818560000000005,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 20.031999999999996,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "float",
              "contents": -42.85824000000001,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "float",
              "contents": -17.174400000000002,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "float",
              "contents": -13.623936,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "float",
              "contents": -6.337536,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "float",
              "contents": -3.4917119999999997,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "int",
              "contents": -4,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "int",
              "contents": -3,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "int",
              "contents": -2,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 7,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 1,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 2,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 3,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 6,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 3,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 4,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 5,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 5,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 6,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 7,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 7,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 8,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 9,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 9,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 13.410304000000004,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 58.974399999999996,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.818560000000005,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 20.031999999999996,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 13.410304000000004,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "float",
              "contents": -29.447936000000006,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "float",
              "contents": -12.672281600000002,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "float",
              "contents": -9.8495744,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "float",
              "contents": -5.735014400000001,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "float",
              "contents": -3.3966848,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "int",
              "contents": -4,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "int",
              "contents": -3,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "int",
              "contents": -2,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 8,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 1,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 2,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 3,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 6,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 3,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 4,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 5,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 5,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 6,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 7,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 7,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 8,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 9,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 9,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 8.065392640000002,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 58.974399999999996,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.818560000000005,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 20.031999999999996,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 13.410304000000004,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 8.065392640000002,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "float",
              "contents": -21.382543360000003,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "float",
              "contents": -10.50992128,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "float",
              "contents": -8.33982976,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "float",
              "contents": -5.49400576,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "float",
              "contents": -3.35867392,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "int",
              "contents": -4,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "int",
              "contents": -3,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "int",
              "contents": -2,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 9,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 1,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 2,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 3,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 6,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 3,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 4,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 5,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 5,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 6,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 7,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 7,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 8,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 9,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 9,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 4.523573248000002,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 58.974399999999996,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.818560000000005,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 20.031999999999996,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 13.410304000000004,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 8.065392640000002,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.523573248000002,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "float",
              "contents": -16.858970112,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "float",
              "contents": -9.500371968,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "float",
              "contents": -7.735931904,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "float",
              "contents": -5.397602304,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "float",
              "contents": -3.3434695679999997,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "int",
              "contents": -4,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "int",
              "contents": -3,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "int",
              "contents": -2,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 1,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 2,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 3,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 6,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 3,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 4,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 5,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 5,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 6,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 7,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 7,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 8,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 9,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 9,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 2.4151588864000004,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 58.974399999999996,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.818560000000005,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 20.031999999999996,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 13.410304000000004,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 8.065392640000002,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.523573248000002,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.4151588864000004,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "float",
              "contents": -14.443811225600001,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "float",
              "contents": -9.0387101696,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "float",
              "contents": -7.4943727616,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "float",
              "contents": -5.3590409216,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "float",
              "contents": -3.3373878271999997,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "int",
              "contents": -4,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "int",
              "contents": -3,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "int",
              "contents": -2,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 11,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 1,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 2,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 3,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 6,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 3,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 4,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 5,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 5,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 6,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 7,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 7,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 8,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 9,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 9,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 1.2430606336000007,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 58.974399999999996,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.818560000000005,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 20.031999999999996,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 13.410304000000004,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 8.065392640000002,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.523573248000002,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.4151588864000004,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.2430606336000007,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "float",
              "contents": -13.200750592,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "float",
              "contents": -8.8309086208,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "float",
              "contents": -7.397749104640001,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "float",
              "contents": -5.34361636864,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "float",
              "contents": -3.33495513088,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "int",
              "contents": -4,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "int",
              "contents": -3,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "int",
              "contents": -2,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 12,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 1,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 2,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 3,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 6,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 3,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 4,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 5,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 5,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 6,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 7,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 7,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 8,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 9,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 9,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 0.6219051827200008,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 58.974399999999996,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.818560000000005,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 20.031999999999996,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 13.410304000000004,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 8.065392640000002,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.523573248000002,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.4151588864000004,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.2430606336000007,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.6219051827200008,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "float",
              "contents": -12.57884540928,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "float",
              "contents": -8.738533269504,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "float",
              "contents": -7.359099641856,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "float",
              "contents": -5.3374465474560004,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "float",
              "contents": -3.333982052352,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "int",
              "contents": -4,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "int",
              "contents": -3,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "int",
              "contents": -2,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 13,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 1,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 2,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 3,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 6,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 3,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 4,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 5,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 5,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 6,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 7,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 7,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 8,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 9,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 9,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 0.30418728386559835,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 58.974399999999996,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.818560000000005,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 20.031999999999996,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 13.410304000000004,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 8.065392640000002,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.523573248000002,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.4151588864000004,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.2430606336000007,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.6219051827200008,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.30418728386559835,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "float",
              "contents": -12.274658125414401,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "float",
              "contents": -8.697881236275201,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "float",
              "contents": -7.343639856742399,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "float",
              "contents": -5.334978618982401,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "float",
              "contents": -3.3335928209408,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "int",
              "contents": -4,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "int",
              "contents": -3,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "int",
              "contents": -2,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 14,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 1,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 2,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 3,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 6,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 3,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 4,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 5,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 5,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 6,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 7,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 7,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 8,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 9,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 9,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 0.1460661334835205,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 58.974399999999996,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.818560000000005,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 20.031999999999996,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 13.410304000000004,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 8.065392640000002,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.523573248000002,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.4151588864000004,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.2430606336000007,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.6219051827200008,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.30418728386559835,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.1460661334835205,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "float",
              "contents": -12.12859199193088,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "float",
              "contents": -8.680139665899521,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "float",
              "contents": -7.337455942696959,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "float",
              "contents": -5.333991447592961,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "float",
              "contents": -3.3334371283763202,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "int",
              "contents": -4,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "int",
              "contents": -3,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "int",
              "contents": -2,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 15,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 1,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 2,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 3,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 6,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 3,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 4,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 5,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 5,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 6,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 7,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 7,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 8,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 9,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 9,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 0.06907139561881515,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 58.974399999999996,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.818560000000005,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 20.031999999999996,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 13.410304000000004,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 8.065392640000002,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.523573248000002,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.4151588864000004,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.2430606336000007,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.6219051827200008,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.30418728386559835,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.1460661334835205,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.06907139561881515,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "float",
              "contents": -12.059520596312066,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "float",
              "contents": -8.672450734915586,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "float",
              "contents": -7.334982377078783,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "float",
              "contents": -5.333596579037184,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "float",
              "contents": -3.333374851350528,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "int",
              "contents": -4,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "int",
              "contents": -3,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "int",
              "contents": -2,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 16,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 1,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 2,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 3,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 6,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 3,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 4,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 5,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 5,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 6,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 7,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 7,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 8,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 9,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 9,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 0.032241916837886464,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 58.974399999999996,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.818560000000005,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 20.031999999999996,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 13.410304000000004,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 8.065392640000002,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.523573248000002,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.4151588864000004,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.2430606336000007,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.6219051827200008,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.30418728386559835,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.1460661334835205,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.06907139561881515,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.032241916837886464,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "float",
              "contents": -12.027278679474179,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "float",
              "contents": -8.669138241388545,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "float",
              "contents": -7.333992950831513,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "float",
              "contents": -5.333438631614873,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "float",
              "contents": -3.333349940540211,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "int",
              "contents": -4,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "int",
              "contents": -3,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "int",
              "contents": -2,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 17,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 1,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 2,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 3,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 6,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 3,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 4,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 5,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 5,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 6,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 7,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 7,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 8,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 9,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 9,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 0.014884262851380115,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 58.974399999999996,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.818560000000005,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 20.031999999999996,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 13.410304000000004,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 8.065392640000002,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.523573248000002,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.4151588864000004,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.2430606336000007,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.6219051827200008,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.30418728386559835,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.1460661334835205,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.06907139561881515,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.032241916837886464,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.014884262851380115,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "float",
              "contents": -12.012394416622799,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "float",
              "contents": -8.667718475524342,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "float",
              "contents": -7.333597180332605,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "float",
              "contents": -5.333375452645949,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "float",
              "contents": -3.3333399762160845,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "int",
              "contents": -4,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "int",
              "contents": -3,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "int",
              "contents": -2,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 18,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 1,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 2,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 3,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 6,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 3,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 4,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 5,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 5,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 6,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 7,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 7,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 8,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 9,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 9,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 0.006805564659073227,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 58.974399999999996,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.818560000000005,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 20.031999999999996,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 13.410304000000004,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 8.065392640000002,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.523573248000002,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.4151588864000004,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.2430606336000007,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.6219051827200008,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.30418728386559835,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.1460661334835205,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.06907139561881515,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.032241916837886464,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.014884262851380115,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.006805564659073227,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "float",
              "contents": -12.005588851963726,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "float",
              "contents": -8.667112661797308,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "float",
              "contents": -7.333438872133042,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "float",
              "contents": -5.33335018105838,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "float",
              "contents": -3.333335990486434,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "int",
              "contents": -4,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "int",
              "contents": -3,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "int",
              "contents": -2,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 19,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 1,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 2,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 3,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 6,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 3,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 4,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 5,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 5,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 6,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 7,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 7,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 8,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 9,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 9,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 0.0030857140998499233,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 58.974399999999996,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.818560000000005,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 20.031999999999996,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 13.410304000000004,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 8.065392640000002,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.523573248000002,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.4151588864000004,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.2430606336000007,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.6219051827200008,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.30418728386559835,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.1460661334835205,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.06907139561881515,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.032241916837886464,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.014884262851380115,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.006805564659073227,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0030857140998499233,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "float",
              "contents": -12.002503137863876,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "float",
              "contents": -8.666855173353952,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "float",
              "contents": -7.333375548853217,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "float",
              "contents": -5.333340072423352,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "float",
              "contents": -3.333334396194574,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "int",
              "contents": -4,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "int",
              "contents": -3,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "int",
              "contents": -2,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 20,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 1,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 2,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 3,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 6,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 3,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 4,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 5,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 5,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 6,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 7,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 7,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 8,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 9,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 9,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 0.0013887787059552181,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 58.974399999999996,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.818560000000005,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 20.031999999999996,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 13.410304000000004,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 8.065392640000002,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.523573248000002,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.4151588864000004,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.2430606336000007,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.6219051827200008,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.30418728386559835,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.1460661334835205,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.06907139561881515,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.032241916837886464,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.014884262851380115,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.006805564659073227,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0030857140998499233,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0013887787059552181,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "float",
              "contents": -12.00111435915792,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "float",
              "contents": -8.666746112795593,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "float",
              "contents": -7.333350219541287,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "float",
              "contents": -5.333336028969342,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "float",
              "contents": -3.3333337584778295,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "int",
              "contents": -4,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "int",
              "contents": -3,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "int",
              "contents": -2,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 21,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 1,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 2,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 3,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 6,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 3,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 4,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 5,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 5,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 6,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 7,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 7,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 8,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 9,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 9,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 0.000620947817395745,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 58.974399999999996,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.818560000000005,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 20.031999999999996,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 13.410304000000004,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 8.065392640000002,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.523573248000002,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.4151588864000004,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.2430606336000007,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.6219051827200008,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.30418728386559835,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.1460661334835205,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.06907139561881515,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.032241916837886464,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.014884262851380115,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.006805564659073227,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0030857140998499233,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0013887787059552181,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.000620947817395745,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "float",
              "contents": -12.000493411340525,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "float",
              "contents": -8.666700062499842,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "float",
              "contents": -7.333340087816515,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "float",
              "contents": -5.333334411587737,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "float",
              "contents": -3.333333503391132,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "int",
              "contents": -4,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "int",
              "contents": -3,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "int",
              "contents": -2,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 22,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 1,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 2,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 3,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 6,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 3,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 4,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 5,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 5,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 6,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 7,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 7,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 8,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 9,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 9,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 0.00027600930440918603,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 58.974399999999996,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.818560000000005,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 20.031999999999996,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 13.410304000000004,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 8.065392640000002,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.523573248000002,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.4151588864000004,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.2430606336000007,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.6219051827200008,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.30418728386559835,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.1460661334835205,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.06907139561881515,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.032241916837886464,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.014884262851380115,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.006805564659073227,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0030857140998499233,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0013887787059552181,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.000620947817395745,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.00027600930440918603,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "float",
              "contents": -12.000217402036116,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "float",
              "contents": -8.66668067195258,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "float",
              "contents": -7.333336035126606,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "float",
              "contents": -5.3333337646350945,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "float",
              "contents": -3.3333334013564526,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "int",
              "contents": -4,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "int",
              "contents": -3,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "int",
              "contents": -2,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 23,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 1,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 2,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 3,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 6,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 3,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 4,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 5,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 5,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 6,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 7,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 7,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 8,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 9,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 9,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 0.00012203805012056534,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 58.974399999999996,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.818560000000005,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 20.031999999999996,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 13.410304000000004,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 8.065392640000002,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.523573248000002,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.4151588864000004,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.2430606336000007,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.6219051827200008,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.30418728386559835,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.1460661334835205,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.06907139561881515,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.032241916837886464,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.014884262851380115,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.006805564659073227,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0030857140998499233,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0013887787059552181,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.000620947817395745,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.00027600930440918603,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.00012203805012056534,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "float",
              "contents": -12.000095363985995,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "float",
              "contents": -8.666672527562088,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "float",
              "contents": -7.3333344140506425,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "float",
              "contents": -5.333333505854037,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "float",
              "contents": -3.3333333605425812,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "int",
              "contents": -4,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "int",
              "contents": -3,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "int",
              "contents": -2,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 24,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 1,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 2,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 3,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 6,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 3,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 4,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 5,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 5,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 6,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 7,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 7,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 8,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 9,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 9,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 5.370185434472319e-05,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 58.974399999999996,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.818560000000005,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 20.031999999999996,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 13.410304000000004,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 8.065392640000002,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.523573248000002,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.4151588864000004,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.2430606336000007,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.6219051827200008,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.30418728386559835,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.1460661334835205,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.06907139561881515,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.032241916837886464,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.014884262851380115,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.006805564659073227,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0030857140998499233,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0013887787059552181,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.000620947817395745,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.00027600930440918603,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.00012203805012056534,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 5.370185434472319e-05,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "float",
              "contents": -12.00004166213165,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "float",
              "contents": -8.666669114537257,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "float",
              "contents": -7.333333765620257,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "float",
              "contents": -5.333333402341616,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "float",
              "contents": -3.3333333442170323,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "int",
              "contents": -4,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "int",
              "contents": -3,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "int",
              "contents": -2,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 25,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 1,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 2,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 3,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 6,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 3,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 4,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 5,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 5,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 6,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 7,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 7,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 8,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 9,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 9,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 2.3528556635454834e-05,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 58.974399999999996,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.818560000000005,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 20.031999999999996,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 13.410304000000004,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 8.065392640000002,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.523573248000002,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.4151588864000004,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.2430606336000007,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.6219051827200008,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.30418728386559835,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.1460661334835205,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.06907139561881515,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.032241916837886464,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.014884262851380115,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.006805564659073227,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0030857140998499233,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0013887787059552181,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.000620947817395745,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.00027600930440918603,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.00012203805012056534,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 5.370185434472319e-05,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.3528556635454834e-05,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "float",
              "contents": -12.000018133575015,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "float",
              "contents": -8.666667687219872,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "float",
              "contents": -7.333333506248103,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "float",
              "contents": -5.3333333609366465,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "float",
              "contents": -3.3333333376868133,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "int",
              "contents": -4,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "int",
              "contents": -3,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "int",
              "contents": -2,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 26,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 1,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 2,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 3,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 6,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 3,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 4,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 5,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 5,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 6,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 7,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 7,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 8,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 9,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 9,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 1.0267813085107491e-05,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 58.974399999999996,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.818560000000005,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 20.031999999999996,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 13.410304000000004,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 8.065392640000002,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.523573248000002,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.4151588864000004,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.2430606336000007,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.6219051827200008,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.30418728386559835,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.1460661334835205,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.06907139561881515,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.032241916837886464,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.014884262851380115,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.006805564659073227,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0030857140998499233,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0013887787059552181,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.000620947817395745,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.00027600930440918603,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.00012203805012056534,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 5.370185434472319e-05,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.3528556635454834e-05,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.0267813085107491e-05,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "float",
              "contents": -12.00000786576193,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "float",
              "contents": -8.666667091449938,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "float",
              "contents": -7.333333402499241,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "float",
              "contents": -5.333333344374658,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "float",
              "contents": -3.333333335074725,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "int",
              "contents": -4,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "int",
              "contents": -3,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "int",
              "contents": -2,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "int",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 27,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 1,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 2,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 2,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 3,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 6,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 3,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 4,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 5,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "tram",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.4,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 5,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 6,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 7,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 7,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 8,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 8,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 9,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 9,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "int",
                  "contents": 1,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "int",
                  "contents": 10,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 4.464587195940339e-06,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 99,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 58.974399999999996,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.818560000000005,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 20.031999999999996,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 13.410304000000004,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 8.065392640000002,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.523573248000002,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.4151588864000004,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.2430606336000007,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.6219051827200008,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.30418728386559835,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.1460661334835205,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.06907139561881515,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.032241916837886464,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.014884262851380115,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.006805564659073227,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0030857140998499233,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0013887787059552181,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.000620947817395745,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.00027600930440918603,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.00012203805012056534,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 5.370185434472319e-05,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.3528556635454834e-05,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.0267813085107491e-05,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.464587195940339e-06,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 435,
          "function_name": "policy_evaluation",
          "code": "break"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 440,
          "function_name": "policy_evaluation",
          "code": "return PolicyEvaluationResult(values=values, distances=distances)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 275,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, policy)  # @inspect result"
        }
      ],
      "env": {
        "result": {
          "type": "mdp.PolicyEvaluationResult",
          "contents": {
            "values": {
              "type": "dict",
              "contents": {
                "1": {
                  "type": "float",
                  "contents": -12.00000786576193,
                  "dtype": null,
                  "shape": null
                },
                "2": {
                  "type": "float",
                  "contents": -8.666667091449938,
                  "dtype": null,
                  "shape": null
                },
                "3": {
                  "type": "float",
                  "contents": -7.333333402499241,
                  "dtype": null,
                  "shape": null
                },
                "4": {
                  "type": "float",
                  "contents": -5.333333344374658,
                  "dtype": null,
                  "shape": null
                },
                "5": {
                  "type": "float",
                  "contents": -3.333333335074725,
                  "dtype": null,
                  "shape": null
                },
                "6": {
                  "type": "int",
                  "contents": -4,
                  "dtype": null,
                  "shape": null
                },
                "7": {
                  "type": "int",
                  "contents": -3,
                  "dtype": null,
                  "shape": null
                },
                "8": {
                  "type": "int",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "9": {
                  "type": "int",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "10": {
                  "type": "int",
                  "contents": 0,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            "distances": {
              "type": "list",
              "contents": [
                {
                  "type": "int",
                  "contents": 99,
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "int",
                  "contents": 99,
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "int",
                  "contents": 99,
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "int",
                  "contents": 99,
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "float",
                  "contents": 58.974399999999996,
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "float",
                  "contents": 24.818560000000005,
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "float",
                  "contents": 20.031999999999996,
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "float",
                  "contents": 13.410304000000004,
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "float",
                  "contents": 8.065392640000002,
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "float",
                  "contents": 4.523573248000002,
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "float",
                  "contents": 2.4151588864000004,
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "float",
                  "contents": 1.2430606336000007,
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "float",
                  "contents": 0.6219051827200008,
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "float",
                  "contents": 0.30418728386559835,
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "float",
                  "contents": 0.1460661334835205,
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "float",
                  "contents": 0.06907139561881515,
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "float",
                  "contents": 0.032241916837886464,
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "float",
                  "contents": 0.014884262851380115,
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "float",
                  "contents": 0.006805564659073227,
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "float",
                  "contents": 0.0030857140998499233,
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "float",
                  "contents": 0.0013887787059552181,
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "float",
                  "contents": 0.000620947817395745,
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "float",
                  "contents": 0.00027600930440918603,
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "float",
                  "contents": 0.00012203805012056534,
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "float",
                  "contents": 5.370185434472319e-05,
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "float",
                  "contents": 2.3528556635454834e-05,
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "float",
                  "contents": 1.0267813085107491e-05,
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "float",
                  "contents": 4.464587195940339e-06,
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 276,
          "function_name": "introduce_policy_evaluation",
          "code": "tram_value = result.values[mdp.start_state()]  # @inspect tram_value @stepover"
        }
      ],
      "env": {
        "tram_value": {
          "type": "float",
          "contents": -12.00000786576193,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 277,
          "function_name": "introduce_policy_evaluation",
          "code": "plot(make_distance_plot(\"policy evaluation\", result.distances))  # @stepover"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "plot",
          "data": {
            "config": {
              "view": {
                "continuousWidth": 300,
                "continuousHeight": 300
              }
            },
            "data": {
              "values": [
                {
                  "iteration": 0,
                  "distance": 99,
                  "color": "blue"
                },
                {
                  "iteration": 1,
                  "distance": 99,
                  "color": "blue"
                },
                {
                  "iteration": 2,
                  "distance": 99,
                  "color": "blue"
                },
                {
                  "iteration": 3,
                  "distance": 99,
                  "color": "blue"
                },
                {
                  "iteration": 4,
                  "distance": 58.974399999999996,
                  "color": "blue"
                },
                {
                  "iteration": 5,
                  "distance": 24.818560000000005,
                  "color": "blue"
                },
                {
                  "iteration": 6,
                  "distance": 20.031999999999996,
                  "color": "blue"
                },
                {
                  "iteration": 7,
                  "distance": 13.410304000000004,
                  "color": "blue"
                },
                {
                  "iteration": 8,
                  "distance": 8.065392640000002,
                  "color": "blue"
                },
                {
                  "iteration": 9,
                  "distance": 4.523573248000002,
                  "color": "blue"
                },
                {
                  "iteration": 10,
                  "distance": 2.4151588864000004,
                  "color": "blue"
                },
                {
                  "iteration": 11,
                  "distance": 1.2430606336000007,
                  "color": "blue"
                },
                {
                  "iteration": 12,
                  "distance": 0.6219051827200008,
                  "color": "blue"
                },
                {
                  "iteration": 13,
                  "distance": 0.30418728386559835,
                  "color": "blue"
                },
                {
                  "iteration": 14,
                  "distance": 0.1460661334835205,
                  "color": "blue"
                },
                {
                  "iteration": 15,
                  "distance": 0.06907139561881515,
                  "color": "blue"
                },
                {
                  "iteration": 16,
                  "distance": 0.032241916837886464,
                  "color": "blue"
                },
                {
                  "iteration": 17,
                  "distance": 0.014884262851380115,
                  "color": "blue"
                },
                {
                  "iteration": 18,
                  "distance": 0.006805564659073227,
                  "color": "blue"
                },
                {
                  "iteration": 19,
                  "distance": 0.0030857140998499233,
                  "color": "blue"
                },
                {
                  "iteration": 20,
                  "distance": 0.0013887787059552181,
                  "color": "blue"
                },
                {
                  "iteration": 21,
                  "distance": 0.000620947817395745,
                  "color": "blue"
                },
                {
                  "iteration": 22,
                  "distance": 0.00027600930440918603,
                  "color": "blue"
                },
                {
                  "iteration": 23,
                  "distance": 0.00012203805012056534,
                  "color": "blue"
                },
                {
                  "iteration": 24,
                  "distance": 5.370185434472319e-05,
                  "color": "blue"
                },
                {
                  "iteration": 25,
                  "distance": 2.3528556635454834e-05,
                  "color": "blue"
                },
                {
                  "iteration": 26,
                  "distance": 1.0267813085107491e-05,
                  "color": "blue"
                },
                {
                  "iteration": 27,
                  "distance": 4.464587195940339e-06,
                  "color": "blue"
                }
              ]
            },
            "mark": {
              "type": "point"
            },
            "encoding": {
              "color": {
                "field": "color",
                "type": "nominal"
              },
              "x": {
                "field": "iteration",
                "type": "quantitative"
              },
              "y": {
                "field": "distance",
                "type": "quantitative"
              }
            },
            "$schema": "https://vega.github.io/schema/vega-lite/v5.20.1.json"
          },
          "style": null,
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 278,
          "function_name": "introduce_policy_evaluation",
          "code": "text(\"Two phases:\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Two phases:",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 279,
          "function_name": "introduce_policy_evaluation",
          "code": "text(\"1. Trying to reach all the states (number of steps)\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "1. Trying to reach all the states (number of steps)",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 280,
          "function_name": "introduce_policy_evaluation",
          "code": "text(\"2. Distance decreases exponentially\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "2. Distance decreases exponentially",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 282,
          "function_name": "introduce_policy_evaluation",
          "code": "text(\"Let's try the dice game:\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Let's try the dice game:",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 283,
          "function_name": "introduce_policy_evaluation",
          "code": "mdp = DiceGameMDP()  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 402,
          "function_name": "policy_evaluation",
          "code": "def policy_evaluation(mdp: MDP, policy: Policy, max_iters: int = 100, tolerance: float = 1e-5) -> PolicyEvaluationResult:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 409,
          "function_name": "policy_evaluation",
          "code": "values = get_initial_values(mdp)  # @stepover @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "in": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "end": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 411,
          "function_name": "policy_evaluation",
          "code": "distances = []"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 0,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "in",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "stay",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.3333333333333333,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "end",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6666666666666666,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "in",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 37.333333333333336,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "float",
              "contents": 37.333333333333336,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "in": {
              "type": "float",
              "contents": -62.666666666666664,
              "dtype": null,
              "shape": null
            },
            "end": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 1,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "in",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "stay",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.3333333333333333,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "end",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6666666666666666,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "in",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 24.888888888888893,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "float",
              "contents": 37.333333333333336,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.888888888888893,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "in": {
              "type": "float",
              "contents": -37.77777777777777,
              "dtype": null,
              "shape": null
            },
            "end": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 2,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "in",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "stay",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.3333333333333333,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "end",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6666666666666666,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "in",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 16.59259259259259,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "float",
              "contents": 37.333333333333336,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.888888888888893,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 16.59259259259259,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "in": {
              "type": "float",
              "contents": -21.18518518518518,
              "dtype": null,
              "shape": null
            },
            "end": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 3,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "in",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "stay",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.3333333333333333,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "end",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6666666666666666,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "in",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 11.061728395061728,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "float",
              "contents": 37.333333333333336,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.888888888888893,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 16.59259259259259,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 11.061728395061728,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "in": {
              "type": "float",
              "contents": -10.123456790123452,
              "dtype": null,
              "shape": null
            },
            "end": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 4,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "in",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "stay",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.3333333333333333,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "end",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6666666666666666,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "in",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 7.374485596707817,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "float",
              "contents": 37.333333333333336,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.888888888888893,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 16.59259259259259,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 11.061728395061728,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 7.374485596707817,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "in": {
              "type": "float",
              "contents": -2.7489711934156347,
              "dtype": null,
              "shape": null
            },
            "end": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 5,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "in",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "stay",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.3333333333333333,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "end",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6666666666666666,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "in",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 4.916323731138545,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "float",
              "contents": 37.333333333333336,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.888888888888893,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 16.59259259259259,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 11.061728395061728,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 7.374485596707817,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.916323731138545,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "in": {
              "type": "float",
              "contents": 2.16735253772291,
              "dtype": null,
              "shape": null
            },
            "end": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 6,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "in",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "stay",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.3333333333333333,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "end",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6666666666666666,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "in",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 3.2775491540923625,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "float",
              "contents": 37.333333333333336,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.888888888888893,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 16.59259259259259,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 11.061728395061728,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 7.374485596707817,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.916323731138545,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 3.2775491540923625,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "in": {
              "type": "float",
              "contents": 5.444901691815272,
              "dtype": null,
              "shape": null
            },
            "end": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 7,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "in",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "stay",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.3333333333333333,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "end",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6666666666666666,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "in",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 2.1850327693949083,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "float",
              "contents": 37.333333333333336,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.888888888888893,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 16.59259259259259,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 11.061728395061728,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 7.374485596707817,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.916323731138545,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 3.2775491540923625,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.1850327693949083,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "in": {
              "type": "float",
              "contents": 7.629934461210181,
              "dtype": null,
              "shape": null
            },
            "end": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 8,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "in",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "stay",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.3333333333333333,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "end",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6666666666666666,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "in",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 1.4566885129299392,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "float",
              "contents": 37.333333333333336,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.888888888888893,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 16.59259259259259,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 11.061728395061728,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 7.374485596707817,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.916323731138545,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 3.2775491540923625,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.1850327693949083,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.4566885129299392,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "in": {
              "type": "float",
              "contents": 9.08662297414012,
              "dtype": null,
              "shape": null
            },
            "end": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 9,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "in",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "stay",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.3333333333333333,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "end",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6666666666666666,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "in",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 0.9711256752866273,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "float",
              "contents": 37.333333333333336,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.888888888888893,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 16.59259259259259,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 11.061728395061728,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 7.374485596707817,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.916323731138545,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 3.2775491540923625,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.1850327693949083,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.4566885129299392,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.9711256752866273,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "in": {
              "type": "float",
              "contents": 10.057748649426747,
              "dtype": null,
              "shape": null
            },
            "end": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "in",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "stay",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.3333333333333333,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "end",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6666666666666666,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "in",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 0.6474171168577509,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "float",
              "contents": 37.333333333333336,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.888888888888893,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 16.59259259259259,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 11.061728395061728,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 7.374485596707817,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.916323731138545,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 3.2775491540923625,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.1850327693949083,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.4566885129299392,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.9711256752866273,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.6474171168577509,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "in": {
              "type": "float",
              "contents": 10.705165766284498,
              "dtype": null,
              "shape": null
            },
            "end": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 11,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "in",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "stay",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.3333333333333333,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "end",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6666666666666666,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "in",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 0.4316114112385012,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "float",
              "contents": 37.333333333333336,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.888888888888893,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 16.59259259259259,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 11.061728395061728,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 7.374485596707817,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.916323731138545,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 3.2775491540923625,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.1850327693949083,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.4566885129299392,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.9711256752866273,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.6474171168577509,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.4316114112385012,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "in": {
              "type": "float",
              "contents": 11.136777177523,
              "dtype": null,
              "shape": null
            },
            "end": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 12,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "in",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "stay",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.3333333333333333,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "end",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6666666666666666,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "in",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 0.2877409408256675,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "float",
              "contents": 37.333333333333336,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.888888888888893,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 16.59259259259259,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 11.061728395061728,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 7.374485596707817,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.916323731138545,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 3.2775491540923625,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.1850327693949083,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.4566885129299392,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.9711256752866273,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.6474171168577509,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.4316114112385012,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.2877409408256675,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "in": {
              "type": "float",
              "contents": 11.424518118348667,
              "dtype": null,
              "shape": null
            },
            "end": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 13,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "in",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "stay",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.3333333333333333,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "end",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6666666666666666,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "in",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 0.19182729388377773,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "float",
              "contents": 37.333333333333336,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.888888888888893,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 16.59259259259259,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 11.061728395061728,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 7.374485596707817,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.916323731138545,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 3.2775491540923625,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.1850327693949083,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.4566885129299392,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.9711256752866273,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.6474171168577509,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.4316114112385012,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.2877409408256675,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.19182729388377773,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "in": {
              "type": "float",
              "contents": 11.616345412232445,
              "dtype": null,
              "shape": null
            },
            "end": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 14,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "in",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "stay",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.3333333333333333,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "end",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6666666666666666,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "in",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 0.12788486258918574,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "float",
              "contents": 37.333333333333336,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.888888888888893,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 16.59259259259259,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 11.061728395061728,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 7.374485596707817,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.916323731138545,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 3.2775491540923625,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.1850327693949083,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.4566885129299392,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.9711256752866273,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.6474171168577509,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.4316114112385012,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.2877409408256675,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.19182729388377773,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.12788486258918574,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "in": {
              "type": "float",
              "contents": 11.74423027482163,
              "dtype": null,
              "shape": null
            },
            "end": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 15,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "in",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "stay",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.3333333333333333,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "end",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6666666666666666,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "in",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 0.08525657505945716,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "float",
              "contents": 37.333333333333336,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.888888888888893,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 16.59259259259259,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 11.061728395061728,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 7.374485596707817,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.916323731138545,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 3.2775491540923625,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.1850327693949083,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.4566885129299392,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.9711256752866273,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.6474171168577509,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.4316114112385012,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.2877409408256675,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.19182729388377773,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.12788486258918574,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.08525657505945716,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "in": {
              "type": "float",
              "contents": 11.829486849881087,
              "dtype": null,
              "shape": null
            },
            "end": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 16,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "in",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "stay",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.3333333333333333,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "end",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6666666666666666,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "in",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 0.056837716706304775,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "float",
              "contents": 37.333333333333336,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.888888888888893,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 16.59259259259259,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 11.061728395061728,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 7.374485596707817,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.916323731138545,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 3.2775491540923625,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.1850327693949083,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.4566885129299392,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.9711256752866273,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.6474171168577509,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.4316114112385012,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.2877409408256675,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.19182729388377773,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.12788486258918574,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.08525657505945716,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.056837716706304775,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "in": {
              "type": "float",
              "contents": 11.886324566587392,
              "dtype": null,
              "shape": null
            },
            "end": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 17,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "in",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "stay",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.3333333333333333,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "end",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6666666666666666,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "in",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 0.037891811137535925,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "float",
              "contents": 37.333333333333336,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.888888888888893,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 16.59259259259259,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 11.061728395061728,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 7.374485596707817,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.916323731138545,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 3.2775491540923625,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.1850327693949083,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.4566885129299392,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.9711256752866273,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.6474171168577509,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.4316114112385012,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.2877409408256675,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.19182729388377773,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.12788486258918574,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.08525657505945716,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.056837716706304775,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.037891811137535925,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "in": {
              "type": "float",
              "contents": 11.924216377724928,
              "dtype": null,
              "shape": null
            },
            "end": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 18,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "in",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "stay",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.3333333333333333,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "end",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6666666666666666,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "in",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 0.025261207425023358,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "float",
              "contents": 37.333333333333336,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.888888888888893,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 16.59259259259259,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 11.061728395061728,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 7.374485596707817,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.916323731138545,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 3.2775491540923625,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.1850327693949083,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.4566885129299392,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.9711256752866273,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.6474171168577509,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.4316114112385012,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.2877409408256675,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.19182729388377773,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.12788486258918574,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.08525657505945716,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.056837716706304775,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.037891811137535925,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.025261207425023358,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "in": {
              "type": "float",
              "contents": 11.949477585149952,
              "dtype": null,
              "shape": null
            },
            "end": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 19,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "in",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "stay",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.3333333333333333,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "end",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6666666666666666,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "in",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 0.016840804950016164,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "float",
              "contents": 37.333333333333336,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.888888888888893,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 16.59259259259259,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 11.061728395061728,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 7.374485596707817,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.916323731138545,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 3.2775491540923625,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.1850327693949083,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.4566885129299392,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.9711256752866273,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.6474171168577509,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.4316114112385012,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.2877409408256675,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.19182729388377773,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.12788486258918574,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.08525657505945716,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.056837716706304775,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.037891811137535925,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.025261207425023358,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.016840804950016164,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "in": {
              "type": "float",
              "contents": 11.966318390099968,
              "dtype": null,
              "shape": null
            },
            "end": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 20,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "in",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "stay",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.3333333333333333,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "end",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6666666666666666,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "in",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 0.011227203300011368,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "float",
              "contents": 37.333333333333336,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.888888888888893,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 16.59259259259259,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 11.061728395061728,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 7.374485596707817,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.916323731138545,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 3.2775491540923625,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.1850327693949083,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.4566885129299392,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.9711256752866273,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.6474171168577509,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.4316114112385012,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.2877409408256675,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.19182729388377773,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.12788486258918574,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.08525657505945716,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.056837716706304775,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.037891811137535925,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.025261207425023358,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.016840804950016164,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.011227203300011368,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "in": {
              "type": "float",
              "contents": 11.977545593399979,
              "dtype": null,
              "shape": null
            },
            "end": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 21,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "in",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "stay",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.3333333333333333,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "end",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6666666666666666,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "in",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 0.007484802200007579,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "float",
              "contents": 37.333333333333336,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.888888888888893,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 16.59259259259259,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 11.061728395061728,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 7.374485596707817,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.916323731138545,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 3.2775491540923625,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.1850327693949083,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.4566885129299392,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.9711256752866273,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.6474171168577509,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.4316114112385012,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.2877409408256675,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.19182729388377773,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.12788486258918574,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.08525657505945716,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.056837716706304775,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.037891811137535925,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.025261207425023358,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.016840804950016164,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.011227203300011368,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.007484802200007579,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "in": {
              "type": "float",
              "contents": 11.985030395599987,
              "dtype": null,
              "shape": null
            },
            "end": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 22,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "in",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "stay",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.3333333333333333,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "end",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6666666666666666,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "in",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 0.004989868133337794,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "float",
              "contents": 37.333333333333336,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.888888888888893,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 16.59259259259259,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 11.061728395061728,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 7.374485596707817,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.916323731138545,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 3.2775491540923625,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.1850327693949083,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.4566885129299392,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.9711256752866273,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.6474171168577509,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.4316114112385012,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.2877409408256675,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.19182729388377773,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.12788486258918574,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.08525657505945716,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.056837716706304775,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.037891811137535925,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.025261207425023358,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.016840804950016164,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.011227203300011368,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.007484802200007579,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.004989868133337794,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "in": {
              "type": "float",
              "contents": 11.990020263733324,
              "dtype": null,
              "shape": null
            },
            "end": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 23,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "in",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "stay",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.3333333333333333,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "end",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6666666666666666,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "in",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 0.003326578755558529,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "float",
              "contents": 37.333333333333336,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.888888888888893,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 16.59259259259259,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 11.061728395061728,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 7.374485596707817,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.916323731138545,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 3.2775491540923625,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.1850327693949083,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.4566885129299392,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.9711256752866273,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.6474171168577509,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.4316114112385012,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.2877409408256675,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.19182729388377773,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.12788486258918574,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.08525657505945716,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.056837716706304775,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.037891811137535925,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.025261207425023358,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.016840804950016164,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.011227203300011368,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.007484802200007579,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.004989868133337794,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.003326578755558529,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "in": {
              "type": "float",
              "contents": 11.993346842488883,
              "dtype": null,
              "shape": null
            },
            "end": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 24,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "in",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "stay",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.3333333333333333,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "end",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6666666666666666,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "in",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 0.002217719170372945,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "float",
              "contents": 37.333333333333336,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.888888888888893,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 16.59259259259259,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 11.061728395061728,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 7.374485596707817,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.916323731138545,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 3.2775491540923625,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.1850327693949083,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.4566885129299392,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.9711256752866273,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.6474171168577509,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.4316114112385012,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.2877409408256675,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.19182729388377773,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.12788486258918574,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.08525657505945716,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.056837716706304775,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.037891811137535925,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.025261207425023358,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.016840804950016164,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.011227203300011368,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.007484802200007579,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.004989868133337794,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.003326578755558529,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.002217719170372945,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "in": {
              "type": "float",
              "contents": 11.995564561659256,
              "dtype": null,
              "shape": null
            },
            "end": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 25,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "in",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "stay",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.3333333333333333,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "end",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6666666666666666,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "in",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 0.0014784794469147045,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "float",
              "contents": 37.333333333333336,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.888888888888893,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 16.59259259259259,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 11.061728395061728,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 7.374485596707817,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.916323731138545,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 3.2775491540923625,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.1850327693949083,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.4566885129299392,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.9711256752866273,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.6474171168577509,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.4316114112385012,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.2877409408256675,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.19182729388377773,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.12788486258918574,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.08525657505945716,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.056837716706304775,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.037891811137535925,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.025261207425023358,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.016840804950016164,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.011227203300011368,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.007484802200007579,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.004989868133337794,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.003326578755558529,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.002217719170372945,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0014784794469147045,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "in": {
              "type": "float",
              "contents": 11.99704304110617,
              "dtype": null,
              "shape": null
            },
            "end": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 26,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "in",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "stay",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.3333333333333333,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "end",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6666666666666666,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "in",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 0.000985652964610395,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "float",
              "contents": 37.333333333333336,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.888888888888893,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 16.59259259259259,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 11.061728395061728,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 7.374485596707817,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.916323731138545,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 3.2775491540923625,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.1850327693949083,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.4566885129299392,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.9711256752866273,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.6474171168577509,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.4316114112385012,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.2877409408256675,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.19182729388377773,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.12788486258918574,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.08525657505945716,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.056837716706304775,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.037891811137535925,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.025261207425023358,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.016840804950016164,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.011227203300011368,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.007484802200007579,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.004989868133337794,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.003326578755558529,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.002217719170372945,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0014784794469147045,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.000985652964610395,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "in": {
              "type": "float",
              "contents": 11.998028694070781,
              "dtype": null,
              "shape": null
            },
            "end": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 27,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "in",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "stay",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.3333333333333333,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "end",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6666666666666666,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "in",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 0.0006571019764063379,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "float",
              "contents": 37.333333333333336,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.888888888888893,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 16.59259259259259,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 11.061728395061728,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 7.374485596707817,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.916323731138545,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 3.2775491540923625,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.1850327693949083,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.4566885129299392,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.9711256752866273,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.6474171168577509,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.4316114112385012,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.2877409408256675,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.19182729388377773,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.12788486258918574,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.08525657505945716,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.056837716706304775,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.037891811137535925,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.025261207425023358,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.016840804950016164,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.011227203300011368,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.007484802200007579,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.004989868133337794,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.003326578755558529,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.002217719170372945,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0014784794469147045,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.000985652964610395,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0006571019764063379,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "in": {
              "type": "float",
              "contents": 11.998685796047187,
              "dtype": null,
              "shape": null
            },
            "end": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 28,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "in",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "stay",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.3333333333333333,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "end",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6666666666666666,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "in",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 0.0004380679842714841,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "float",
              "contents": 37.333333333333336,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.888888888888893,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 16.59259259259259,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 11.061728395061728,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 7.374485596707817,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.916323731138545,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 3.2775491540923625,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.1850327693949083,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.4566885129299392,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.9711256752866273,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.6474171168577509,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.4316114112385012,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.2877409408256675,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.19182729388377773,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.12788486258918574,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.08525657505945716,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.056837716706304775,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.037891811137535925,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.025261207425023358,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.016840804950016164,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.011227203300011368,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.007484802200007579,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.004989868133337794,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.003326578755558529,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.002217719170372945,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0014784794469147045,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.000985652964610395,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0006571019764063379,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0004380679842714841,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "in": {
              "type": "float",
              "contents": 11.999123864031459,
              "dtype": null,
              "shape": null
            },
            "end": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 29,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "in",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "stay",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.3333333333333333,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "end",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6666666666666666,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "in",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 0.00029204532284765605,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "float",
              "contents": 37.333333333333336,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.888888888888893,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 16.59259259259259,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 11.061728395061728,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 7.374485596707817,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.916323731138545,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 3.2775491540923625,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.1850327693949083,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.4566885129299392,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.9711256752866273,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.6474171168577509,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.4316114112385012,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.2877409408256675,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.19182729388377773,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.12788486258918574,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.08525657505945716,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.056837716706304775,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.037891811137535925,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.025261207425023358,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.016840804950016164,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.011227203300011368,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.007484802200007579,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.004989868133337794,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.003326578755558529,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.002217719170372945,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0014784794469147045,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.000985652964610395,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0006571019764063379,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0004380679842714841,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.00029204532284765605,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "in": {
              "type": "float",
              "contents": 11.999415909354306,
              "dtype": null,
              "shape": null
            },
            "end": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 30,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "in",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "stay",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.3333333333333333,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "end",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6666666666666666,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "in",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 0.00019469688189843737,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "float",
              "contents": 37.333333333333336,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.888888888888893,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 16.59259259259259,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 11.061728395061728,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 7.374485596707817,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.916323731138545,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 3.2775491540923625,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.1850327693949083,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.4566885129299392,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.9711256752866273,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.6474171168577509,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.4316114112385012,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.2877409408256675,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.19182729388377773,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.12788486258918574,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.08525657505945716,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.056837716706304775,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.037891811137535925,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.025261207425023358,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.016840804950016164,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.011227203300011368,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.007484802200007579,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.004989868133337794,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.003326578755558529,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.002217719170372945,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0014784794469147045,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.000985652964610395,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0006571019764063379,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0004380679842714841,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.00029204532284765605,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.00019469688189843737,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "in": {
              "type": "float",
              "contents": 11.999610606236205,
              "dtype": null,
              "shape": null
            },
            "end": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 31,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "in",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "stay",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.3333333333333333,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "end",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6666666666666666,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "in",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 0.00012979792126444067,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "float",
              "contents": 37.333333333333336,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.888888888888893,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 16.59259259259259,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 11.061728395061728,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 7.374485596707817,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.916323731138545,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 3.2775491540923625,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.1850327693949083,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.4566885129299392,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.9711256752866273,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.6474171168577509,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.4316114112385012,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.2877409408256675,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.19182729388377773,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.12788486258918574,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.08525657505945716,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.056837716706304775,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.037891811137535925,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.025261207425023358,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.016840804950016164,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.011227203300011368,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.007484802200007579,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.004989868133337794,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.003326578755558529,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.002217719170372945,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0014784794469147045,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.000985652964610395,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0006571019764063379,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0004380679842714841,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.00029204532284765605,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.00019469688189843737,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.00012979792126444067,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "in": {
              "type": "float",
              "contents": 11.99974040415747,
              "dtype": null,
              "shape": null
            },
            "end": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 32,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "in",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "stay",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.3333333333333333,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "end",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6666666666666666,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "in",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 8.653194750962712e-05,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "float",
              "contents": 37.333333333333336,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.888888888888893,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 16.59259259259259,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 11.061728395061728,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 7.374485596707817,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.916323731138545,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 3.2775491540923625,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.1850327693949083,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.4566885129299392,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.9711256752866273,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.6474171168577509,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.4316114112385012,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.2877409408256675,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.19182729388377773,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.12788486258918574,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.08525657505945716,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.056837716706304775,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.037891811137535925,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.025261207425023358,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.016840804950016164,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.011227203300011368,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.007484802200007579,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.004989868133337794,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.003326578755558529,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.002217719170372945,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0014784794469147045,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.000985652964610395,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0006571019764063379,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0004380679842714841,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.00029204532284765605,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.00019469688189843737,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.00012979792126444067,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 8.653194750962712e-05,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "in": {
              "type": "float",
              "contents": 11.999826936104979,
              "dtype": null,
              "shape": null
            },
            "end": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 33,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "in",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "stay",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.3333333333333333,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "end",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6666666666666666,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "in",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 5.7687965007602315e-05,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "float",
              "contents": 37.333333333333336,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.888888888888893,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 16.59259259259259,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 11.061728395061728,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 7.374485596707817,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.916323731138545,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 3.2775491540923625,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.1850327693949083,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.4566885129299392,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.9711256752866273,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.6474171168577509,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.4316114112385012,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.2877409408256675,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.19182729388377773,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.12788486258918574,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.08525657505945716,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.056837716706304775,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.037891811137535925,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.025261207425023358,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.016840804950016164,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.011227203300011368,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.007484802200007579,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.004989868133337794,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.003326578755558529,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.002217719170372945,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0014784794469147045,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.000985652964610395,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0006571019764063379,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0004380679842714841,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.00029204532284765605,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.00019469688189843737,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.00012979792126444067,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 8.653194750962712e-05,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 5.7687965007602315e-05,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "in": {
              "type": "float",
              "contents": 11.999884624069987,
              "dtype": null,
              "shape": null
            },
            "end": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 34,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "in",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "stay",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.3333333333333333,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "end",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6666666666666666,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "in",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 3.8458643338401544e-05,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "float",
              "contents": 37.333333333333336,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.888888888888893,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 16.59259259259259,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 11.061728395061728,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 7.374485596707817,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.916323731138545,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 3.2775491540923625,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.1850327693949083,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.4566885129299392,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.9711256752866273,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.6474171168577509,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.4316114112385012,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.2877409408256675,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.19182729388377773,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.12788486258918574,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.08525657505945716,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.056837716706304775,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.037891811137535925,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.025261207425023358,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.016840804950016164,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.011227203300011368,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.007484802200007579,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.004989868133337794,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.003326578755558529,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.002217719170372945,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0014784794469147045,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.000985652964610395,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0006571019764063379,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0004380679842714841,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.00029204532284765605,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.00019469688189843737,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.00012979792126444067,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 8.653194750962712e-05,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 5.7687965007602315e-05,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 3.8458643338401544e-05,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "in": {
              "type": "float",
              "contents": 11.999923082713325,
              "dtype": null,
              "shape": null
            },
            "end": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 35,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "in",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "stay",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.3333333333333333,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "end",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6666666666666666,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "in",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 2.5639095557750124e-05,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "float",
              "contents": 37.333333333333336,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.888888888888893,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 16.59259259259259,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 11.061728395061728,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 7.374485596707817,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.916323731138545,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 3.2775491540923625,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.1850327693949083,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.4566885129299392,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.9711256752866273,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.6474171168577509,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.4316114112385012,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.2877409408256675,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.19182729388377773,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.12788486258918574,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.08525657505945716,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.056837716706304775,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.037891811137535925,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.025261207425023358,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.016840804950016164,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.011227203300011368,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.007484802200007579,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.004989868133337794,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.003326578755558529,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.002217719170372945,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0014784794469147045,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.000985652964610395,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0006571019764063379,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0004380679842714841,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.00029204532284765605,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.00019469688189843737,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.00012979792126444067,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 8.653194750962712e-05,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 5.7687965007602315e-05,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 3.8458643338401544e-05,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.5639095557750124e-05,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "in": {
              "type": "float",
              "contents": 11.999948721808883,
              "dtype": null,
              "shape": null
            },
            "end": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 36,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "in",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "stay",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.3333333333333333,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "end",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6666666666666666,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "in",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 1.7092730372425535e-05,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "float",
              "contents": 37.333333333333336,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.888888888888893,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 16.59259259259259,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 11.061728395061728,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 7.374485596707817,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.916323731138545,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 3.2775491540923625,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.1850327693949083,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.4566885129299392,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.9711256752866273,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.6474171168577509,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.4316114112385012,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.2877409408256675,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.19182729388377773,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.12788486258918574,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.08525657505945716,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.056837716706304775,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.037891811137535925,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.025261207425023358,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.016840804950016164,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.011227203300011368,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.007484802200007579,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.004989868133337794,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.003326578755558529,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.002217719170372945,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0014784794469147045,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.000985652964610395,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0006571019764063379,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0004380679842714841,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.00029204532284765605,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.00019469688189843737,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.00012979792126444067,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 8.653194750962712e-05,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 5.7687965007602315e-05,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 3.8458643338401544e-05,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.5639095557750124e-05,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.7092730372425535e-05,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "in": {
              "type": "float",
              "contents": 11.999965814539255,
              "dtype": null,
              "shape": null
            },
            "end": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 37,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "in",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "stay",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.3333333333333333,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "end",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6666666666666666,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "in",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 1.1395153581617024e-05,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "float",
              "contents": 37.333333333333336,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.888888888888893,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 16.59259259259259,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 11.061728395061728,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 7.374485596707817,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.916323731138545,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 3.2775491540923625,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.1850327693949083,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.4566885129299392,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.9711256752866273,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.6474171168577509,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.4316114112385012,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.2877409408256675,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.19182729388377773,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.12788486258918574,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.08525657505945716,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.056837716706304775,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.037891811137535925,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.025261207425023358,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.016840804950016164,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.011227203300011368,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.007484802200007579,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.004989868133337794,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.003326578755558529,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.002217719170372945,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0014784794469147045,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.000985652964610395,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0006571019764063379,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0004380679842714841,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.00029204532284765605,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.00019469688189843737,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.00012979792126444067,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 8.653194750962712e-05,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 5.7687965007602315e-05,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 3.8458643338401544e-05,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.5639095557750124e-05,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.7092730372425535e-05,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.1395153581617024e-05,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 438,
          "function_name": "policy_evaluation",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "in": {
              "type": "float",
              "contents": 11.999977209692837,
              "dtype": null,
              "shape": null
            },
            "end": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 412,
          "function_name": "policy_evaluation",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 38,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 414,
          "function_name": "policy_evaluation",
          "code": "new_values = {}  # state -> V(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "in",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 423,
          "function_name": "policy_evaluation",
          "code": "action = policy(state)  # @inspect action @stepover"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "stay",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 426,
          "function_name": "policy_evaluation",
          "code": "successors = get_action_successors(mdp, state)[action]  # @inspect successors @stepover"
        }
      ],
      "env": {
        "successors": {
          "type": "list",
          "contents": [
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.3333333333333333,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "end",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "mdp.Step",
              "contents": {
                "action": {
                  "type": "str",
                  "contents": "stay",
                  "dtype": null,
                  "shape": null
                },
                "prob": {
                  "type": "float",
                  "contents": 0.6666666666666666,
                  "dtype": null,
                  "shape": null
                },
                "reward": {
                  "type": "int",
                  "contents": 4,
                  "dtype": null,
                  "shape": null
                },
                "state": {
                  "type": "str",
                  "contents": "in",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 429,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = compute_q_value(successors, mdp.discount(), values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 418,
          "function_name": "policy_evaluation",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 419,
          "function_name": "policy_evaluation",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 420,
          "function_name": "policy_evaluation",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 417,
          "function_name": "policy_evaluation",
          "code": "for state in values:  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "str",
          "contents": "end",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 432,
          "function_name": "policy_evaluation",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "float",
          "contents": 7.59676905381923e-06,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 433,
          "function_name": "policy_evaluation",
          "code": "distances.append(distance)  # @inspect distances"
        }
      ],
      "env": {
        "distances": {
          "type": "list",
          "contents": [
            {
              "type": "float",
              "contents": 37.333333333333336,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 24.888888888888893,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 16.59259259259259,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 11.061728395061728,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 7.374485596707817,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 4.916323731138545,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 3.2775491540923625,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.1850327693949083,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.4566885129299392,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.9711256752866273,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.6474171168577509,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.4316114112385012,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.2877409408256675,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.19182729388377773,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.12788486258918574,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.08525657505945716,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.056837716706304775,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.037891811137535925,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.025261207425023358,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.016840804950016164,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.011227203300011368,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.007484802200007579,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.004989868133337794,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.003326578755558529,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.002217719170372945,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0014784794469147045,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.000985652964610395,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0006571019764063379,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.0004380679842714841,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.00029204532284765605,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.00019469688189843737,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 0.00012979792126444067,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 8.653194750962712e-05,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 5.7687965007602315e-05,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 3.8458643338401544e-05,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 2.5639095557750124e-05,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.7092730372425535e-05,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 1.1395153581617024e-05,
              "dtype": null,
              "shape": null
            },
            {
              "type": "float",
              "contents": 7.59676905381923e-06,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 434,
          "function_name": "policy_evaluation",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 435,
          "function_name": "policy_evaluation",
          "code": "break"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        },
        {
          "path": "mdp.py",
          "line_number": 440,
          "function_name": "policy_evaluation",
          "code": "return PolicyEvaluationResult(values=values, distances=distances)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 284,
          "function_name": "introduce_policy_evaluation",
          "code": "result = policy_evaluation(mdp, always_stay_policy)  # @inspect result.values"
        }
      ],
      "env": {
        "result.values": {
          "type": "dict",
          "contents": {
            "in": {
              "type": "float",
              "contents": 11.999977209692837,
              "dtype": null,
              "shape": null
            },
            "end": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 285,
          "function_name": "introduce_policy_evaluation",
          "code": "plot(make_distance_plot(\"policy evaluation\", result.distances))  # @stepover"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "plot",
          "data": {
            "config": {
              "view": {
                "continuousWidth": 300,
                "continuousHeight": 300
              }
            },
            "data": {
              "values": [
                {
                  "iteration": 0,
                  "distance": 37.333333333333336,
                  "color": "blue"
                },
                {
                  "iteration": 1,
                  "distance": 24.888888888888893,
                  "color": "blue"
                },
                {
                  "iteration": 2,
                  "distance": 16.59259259259259,
                  "color": "blue"
                },
                {
                  "iteration": 3,
                  "distance": 11.061728395061728,
                  "color": "blue"
                },
                {
                  "iteration": 4,
                  "distance": 7.374485596707817,
                  "color": "blue"
                },
                {
                  "iteration": 5,
                  "distance": 4.916323731138545,
                  "color": "blue"
                },
                {
                  "iteration": 6,
                  "distance": 3.2775491540923625,
                  "color": "blue"
                },
                {
                  "iteration": 7,
                  "distance": 2.1850327693949083,
                  "color": "blue"
                },
                {
                  "iteration": 8,
                  "distance": 1.4566885129299392,
                  "color": "blue"
                },
                {
                  "iteration": 9,
                  "distance": 0.9711256752866273,
                  "color": "blue"
                },
                {
                  "iteration": 10,
                  "distance": 0.6474171168577509,
                  "color": "blue"
                },
                {
                  "iteration": 11,
                  "distance": 0.4316114112385012,
                  "color": "blue"
                },
                {
                  "iteration": 12,
                  "distance": 0.2877409408256675,
                  "color": "blue"
                },
                {
                  "iteration": 13,
                  "distance": 0.19182729388377773,
                  "color": "blue"
                },
                {
                  "iteration": 14,
                  "distance": 0.12788486258918574,
                  "color": "blue"
                },
                {
                  "iteration": 15,
                  "distance": 0.08525657505945716,
                  "color": "blue"
                },
                {
                  "iteration": 16,
                  "distance": 0.056837716706304775,
                  "color": "blue"
                },
                {
                  "iteration": 17,
                  "distance": 0.037891811137535925,
                  "color": "blue"
                },
                {
                  "iteration": 18,
                  "distance": 0.025261207425023358,
                  "color": "blue"
                },
                {
                  "iteration": 19,
                  "distance": 0.016840804950016164,
                  "color": "blue"
                },
                {
                  "iteration": 20,
                  "distance": 0.011227203300011368,
                  "color": "blue"
                },
                {
                  "iteration": 21,
                  "distance": 0.007484802200007579,
                  "color": "blue"
                },
                {
                  "iteration": 22,
                  "distance": 0.004989868133337794,
                  "color": "blue"
                },
                {
                  "iteration": 23,
                  "distance": 0.003326578755558529,
                  "color": "blue"
                },
                {
                  "iteration": 24,
                  "distance": 0.002217719170372945,
                  "color": "blue"
                },
                {
                  "iteration": 25,
                  "distance": 0.0014784794469147045,
                  "color": "blue"
                },
                {
                  "iteration": 26,
                  "distance": 0.000985652964610395,
                  "color": "blue"
                },
                {
                  "iteration": 27,
                  "distance": 0.0006571019764063379,
                  "color": "blue"
                },
                {
                  "iteration": 28,
                  "distance": 0.0004380679842714841,
                  "color": "blue"
                },
                {
                  "iteration": 29,
                  "distance": 0.00029204532284765605,
                  "color": "blue"
                },
                {
                  "iteration": 30,
                  "distance": 0.00019469688189843737,
                  "color": "blue"
                },
                {
                  "iteration": 31,
                  "distance": 0.00012979792126444067,
                  "color": "blue"
                },
                {
                  "iteration": 32,
                  "distance": 8.653194750962712e-05,
                  "color": "blue"
                },
                {
                  "iteration": 33,
                  "distance": 5.7687965007602315e-05,
                  "color": "blue"
                },
                {
                  "iteration": 34,
                  "distance": 3.8458643338401544e-05,
                  "color": "blue"
                },
                {
                  "iteration": 35,
                  "distance": 2.5639095557750124e-05,
                  "color": "blue"
                },
                {
                  "iteration": 36,
                  "distance": 1.7092730372425535e-05,
                  "color": "blue"
                },
                {
                  "iteration": 37,
                  "distance": 1.1395153581617024e-05,
                  "color": "blue"
                },
                {
                  "iteration": 38,
                  "distance": 7.59676905381923e-06,
                  "color": "blue"
                }
              ]
            },
            "mark": {
              "type": "point"
            },
            "encoding": {
              "color": {
                "field": "color",
                "type": "nominal"
              },
              "x": {
                "field": "iteration",
                "type": "quantitative"
              },
              "y": {
                "field": "distance",
                "type": "quantitative"
              }
            },
            "$schema": "https://vega.github.io/schema/vega-lite/v5.20.1.json"
          },
          "style": null,
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 287,
          "function_name": "introduce_policy_evaluation",
          "code": "text(\"Summary:\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Summary:",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 288,
          "function_name": "introduce_policy_evaluation",
          "code": "text(\"- Policy evaluation: computes value of a given policy\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Policy evaluation: computes value of a given policy",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 289,
          "function_name": "introduce_policy_evaluation",
          "code": "text(\"- Key quantity: Q-value Q(s, a, V) = value of taking action a in state s, and obtaining some value V\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Key quantity: Q-value Q(s, a, V) = value of taking action a in state s, and obtaining some value V",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        },
        {
          "path": "mdp.py",
          "line_number": 290,
          "function_name": "introduce_policy_evaluation",
          "code": "text(\"- Bootstrapping: use values to compute new values using recurrence\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Bootstrapping: use values to compute new values using recurrence",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 33,
          "function_name": "main",
          "code": "introduce_policy_evaluation()"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 456,
          "function_name": "introduce_value_iteration",
          "code": "def introduce_value_iteration():"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 457,
          "function_name": "introduce_value_iteration",
          "code": "text(\"Policy evaluation: computes value of a given policy\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Policy evaluation: computes value of a given policy",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 458,
          "function_name": "introduce_value_iteration",
          "code": "text(\"Value iteration: computes value of the optimal policy\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Value iteration: computes value of the optimal policy",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 459,
          "function_name": "introduce_value_iteration",
          "code": "text(\"...and in the process, constructs the optimal policy\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "...and in the process, constructs the optimal policy",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 461,
          "function_name": "introduce_value_iteration",
          "code": "text(\"Finding the optimal policy might seem much harder than computing the value of a policy\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Finding the optimal policy might seem much harder than computing the value of a policy",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 462,
          "function_name": "introduce_value_iteration",
          "code": "text(\"...(think computing f(x) versus min_x f(x))\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "...(think computing f(x) versus min_x f(x))",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 463,
          "function_name": "introduce_value_iteration",
          "code": "text(\"...but the two are actually quite similar!\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "...but the two are actually quite similar!",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 465,
          "function_name": "introduce_value_iteration",
          "code": "text(\"History: Richard Bellman's work on dynamic programming \"), link(\"https://gwern.net/doc/statistics/decision/1957-bellman-dynamicprogramming.pdf\", title=\"[Bellman, 1957]\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "History: Richard Bellman's work on dynamic programming ",
          "style": {},
          "external_link": null,
          "internal_link": null
        },
        {
          "type": "link",
          "data": null,
          "style": {},
          "external_link": {
            "title": "[Bellman, 1957]",
            "authors": null,
            "organization": null,
            "date": null,
            "url": "https://gwern.net/doc/statistics/decision/1957-bellman-dynamicprogramming.pdf",
            "description": null,
            "notes": null
          },
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 467,
          "function_name": "introduce_value_iteration",
          "code": "text(\"Policy evaluation recurrence:\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Policy evaluation recurrence:",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 468,
          "function_name": "introduce_value_iteration",
          "code": "text(\"V_\u03c0(s) =  \u03a3_s' T(s, \u03c0(s), s') (R(s, \u03c0(s), s') + \u03b3 V_\u03c0(s'))\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "V_\u03c0(s) =  \u03a3_s' T(s, \u03c0(s), s') (R(s, \u03c0(s), s') + \u03b3 V_\u03c0(s'))",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 469,
          "function_name": "introduce_value_iteration",
          "code": "text(\"Value iteration recurrence:\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Value iteration recurrence:",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 470,
          "function_name": "introduce_value_iteration",
          "code": "text(\"V`*`(s) = max_a \u03a3_s' T(s, a, s') (R(s, a, s') + \u03b3 V`*`(s'))\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "V`*`(s) = max_a \u03a3_s' T(s, a, s') (R(s, a, s') + \u03b3 V`*`(s'))",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 472,
          "function_name": "introduce_value_iteration",
          "code": "text(\"Key difference: optimize over actions a instead of taking policy action pi(s)\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Key difference: optimize over actions a instead of taking policy action pi(s)",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 474,
          "function_name": "introduce_value_iteration",
          "code": "text(\"Let's try the flaky tram MDP example:\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Let's try the flaky tram MDP example:",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 475,
          "function_name": "introduce_value_iteration",
          "code": "mdp = FlakyTramMDP(num_locs=10, failure_prob=0.4)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 477,
          "function_name": "introduce_value_iteration",
          "code": "values = get_initial_values(mdp)  # @inspect values"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 477,
          "function_name": "introduce_value_iteration",
          "code": "values = get_initial_values(mdp)  # @inspect values"
        },
        {
          "path": "mdp.py",
          "line_number": 344,
          "function_name": "get_initial_values",
          "code": "def get_initial_values(mdp: MDP) -> dict[Any, float]:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 477,
          "function_name": "introduce_value_iteration",
          "code": "values = get_initial_values(mdp)  # @inspect values"
        },
        {
          "path": "mdp.py",
          "line_number": 352,
          "function_name": "get_initial_values",
          "code": "states = get_states(mdp)  # @inspect states @stepover"
        }
      ],
      "env": {
        "states": {
          "type": "list",
          "contents": [
            {
              "type": "int",
              "contents": 1,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 2,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 3,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 4,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 5,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 6,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 7,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 8,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 9,
              "dtype": null,
              "shape": null
            },
            {
              "type": "int",
              "contents": 10,
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 477,
          "function_name": "introduce_value_iteration",
          "code": "values = get_initial_values(mdp)  # @inspect values"
        },
        {
          "path": "mdp.py",
          "line_number": 355,
          "function_name": "get_initial_values",
          "code": "values = {state: 0 if mdp.is_end(state) else -100 for state in states}  # @inspect values @stepover"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 477,
          "function_name": "introduce_value_iteration",
          "code": "values = get_initial_values(mdp)  # @inspect values"
        },
        {
          "path": "mdp.py",
          "line_number": 357,
          "function_name": "get_initial_values",
          "code": "return values"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 477,
          "function_name": "introduce_value_iteration",
          "code": "values = get_initial_values(mdp)  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 479,
          "function_name": "introduce_value_iteration",
          "code": "state = 9  # @inspect state"
        }
      ],
      "env": {
        "state": {
          "type": "int",
          "contents": 9,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 480,
          "function_name": "introduce_value_iteration",
          "code": "value, action = value_iteration_for_state(mdp, state, values)  # @inspect value action"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 480,
          "function_name": "introduce_value_iteration",
          "code": "value, action = value_iteration_for_state(mdp, state, values)  # @inspect value action"
        },
        {
          "path": "mdp.py",
          "line_number": 533,
          "function_name": "value_iteration_for_state",
          "code": "def value_iteration_for_state(mdp: MDP, state: Any, values: dict[Any, float]) -> tuple[float, Any]:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 480,
          "function_name": "introduce_value_iteration",
          "code": "value, action = value_iteration_for_state(mdp, state, values)  # @inspect value action"
        },
        {
          "path": "mdp.py",
          "line_number": 537,
          "function_name": "value_iteration_for_state",
          "code": "actions = []"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 480,
          "function_name": "introduce_value_iteration",
          "code": "value, action = value_iteration_for_state(mdp, state, values)  # @inspect value action"
        },
        {
          "path": "mdp.py",
          "line_number": 538,
          "function_name": "value_iteration_for_state",
          "code": "q_values = []"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 480,
          "function_name": "introduce_value_iteration",
          "code": "value, action = value_iteration_for_state(mdp, state, values)  # @inspect value action"
        },
        {
          "path": "mdp.py",
          "line_number": 541,
          "function_name": "value_iteration_for_state",
          "code": "for action, successors in get_action_successors(mdp, state).items():  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 480,
          "function_name": "introduce_value_iteration",
          "code": "value, action = value_iteration_for_state(mdp, state, values)  # @inspect value action"
        },
        {
          "path": "mdp.py",
          "line_number": 542,
          "function_name": "value_iteration_for_state",
          "code": "actions.append(action)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 480,
          "function_name": "introduce_value_iteration",
          "code": "value, action = value_iteration_for_state(mdp, state, values)  # @inspect value action"
        },
        {
          "path": "mdp.py",
          "line_number": 543,
          "function_name": "value_iteration_for_state",
          "code": "q_values.append(compute_q_value(successors, mdp.discount(), values))  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 480,
          "function_name": "introduce_value_iteration",
          "code": "value, action = value_iteration_for_state(mdp, state, values)  # @inspect value action"
        },
        {
          "path": "mdp.py",
          "line_number": 541,
          "function_name": "value_iteration_for_state",
          "code": "for action, successors in get_action_successors(mdp, state).items():  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 480,
          "function_name": "introduce_value_iteration",
          "code": "value, action = value_iteration_for_state(mdp, state, values)  # @inspect value action"
        },
        {
          "path": "mdp.py",
          "line_number": 546,
          "function_name": "value_iteration_for_state",
          "code": "value = np.max(q_values)  # @inspect value"
        }
      ],
      "env": {
        "value": {
          "type": "numpy.int64",
          "contents": -1,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 480,
          "function_name": "introduce_value_iteration",
          "code": "value, action = value_iteration_for_state(mdp, state, values)  # @inspect value action"
        },
        {
          "path": "mdp.py",
          "line_number": 547,
          "function_name": "value_iteration_for_state",
          "code": "action = actions[np.argmax(q_values)]  # @inspect action"
        }
      ],
      "env": {
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 480,
          "function_name": "introduce_value_iteration",
          "code": "value, action = value_iteration_for_state(mdp, state, values)  # @inspect value action"
        },
        {
          "path": "mdp.py",
          "line_number": 549,
          "function_name": "value_iteration_for_state",
          "code": "return value, action"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 480,
          "function_name": "introduce_value_iteration",
          "code": "value, action = value_iteration_for_state(mdp, state, values)  # @inspect value action"
        }
      ],
      "env": {
        "value": {
          "type": "numpy.int64",
          "contents": -1,
          "dtype": null,
          "shape": null
        },
        "action": {
          "type": "str",
          "contents": "walk",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 482,
          "function_name": "introduce_value_iteration",
          "code": "text(\"Let's now run value iteration:\")  # @clear value action values"
        }
      ],
      "env": {
        "value": null,
        "action": null,
        "values": null
      },
      "renderings": [
        {
          "type": "markdown",
          "data": "Let's now run value iteration:",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 499,
          "function_name": "value_iteration",
          "code": "def value_iteration(mdp: MDP, max_iters: int = 100, tolerance: float = 1e-5) -> ValueIterationResult:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 508,
          "function_name": "value_iteration",
          "code": "values = get_initial_values(mdp)  # @stepover @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "int",
              "contents": -100,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 510,
          "function_name": "value_iteration",
          "code": "pi = {state: None for state in values}  # @inspect pi @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 510,
          "function_name": "value_iteration",
          "code": "pi = {state: None for state in values}  # @inspect pi @stepover"
        },
        {
          "path": "mdp.py",
          "line_number": 510,
          "function_name": "<dictcomp>",
          "code": "pi = {state: None for state in values}  # @inspect pi @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 510,
          "function_name": "value_iteration",
          "code": "pi = {state: None for state in values}  # @inspect pi @stepover"
        }
      ],
      "env": {
        "pi": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 512,
          "function_name": "value_iteration",
          "code": "distances = []"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 513,
          "function_name": "value_iteration",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 0,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 514,
          "function_name": "value_iteration",
          "code": "new_values = {}  # state -> V_iter(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 517,
          "function_name": "value_iteration",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 518,
          "function_name": "value_iteration",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 522,
          "function_name": "value_iteration",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "numpy.int64",
          "contents": 99,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 523,
          "function_name": "value_iteration",
          "code": "distances.append(distance)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 524,
          "function_name": "value_iteration",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 528,
          "function_name": "value_iteration",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "numpy.float64",
              "contents": -101.0,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "numpy.float64",
              "contents": -101.0,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "numpy.float64",
              "contents": -101.0,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "numpy.float64",
              "contents": -101.0,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "numpy.float64",
              "contents": -42.00000000000001,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "numpy.int64",
              "contents": -101,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "numpy.int64",
              "contents": -101,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "numpy.int64",
              "contents": -101,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "numpy.int64",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 513,
          "function_name": "value_iteration",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 1,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 514,
          "function_name": "value_iteration",
          "code": "new_values = {}  # state -> V_iter(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 517,
          "function_name": "value_iteration",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 518,
          "function_name": "value_iteration",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 522,
          "function_name": "value_iteration",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "numpy.int64",
          "contents": 99,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 523,
          "function_name": "value_iteration",
          "code": "distances.append(distance)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 524,
          "function_name": "value_iteration",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 528,
          "function_name": "value_iteration",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "numpy.float64",
              "contents": -102.0,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "numpy.float64",
              "contents": -102.0,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "numpy.float64",
              "contents": -102.0,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "numpy.float64",
              "contents": -43.00000000000001,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "numpy.float64",
              "contents": -18.800000000000004,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "numpy.int64",
              "contents": -102,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "numpy.int64",
              "contents": -102,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "numpy.int64",
              "contents": -2,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "numpy.int64",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 513,
          "function_name": "value_iteration",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 2,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 514,
          "function_name": "value_iteration",
          "code": "new_values = {}  # state -> V_iter(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 517,
          "function_name": "value_iteration",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 518,
          "function_name": "value_iteration",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 522,
          "function_name": "value_iteration",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "numpy.int64",
          "contents": 99,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 523,
          "function_name": "value_iteration",
          "code": "distances.append(distance)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 524,
          "function_name": "value_iteration",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 528,
          "function_name": "value_iteration",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "numpy.float64",
              "contents": -103.0,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "numpy.float64",
              "contents": -68.60000000000001,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "numpy.float64",
              "contents": -44.00000000000001,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "numpy.float64",
              "contents": -19.800000000000004,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "numpy.float64",
              "contents": -9.520000000000001,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "numpy.int64",
              "contents": -103,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "numpy.int64",
              "contents": -3,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "numpy.int64",
              "contents": -2,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "numpy.int64",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 513,
          "function_name": "value_iteration",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 3,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 514,
          "function_name": "value_iteration",
          "code": "new_values = {}  # state -> V_iter(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 517,
          "function_name": "value_iteration",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 518,
          "function_name": "value_iteration",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 522,
          "function_name": "value_iteration",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "numpy.int64",
          "contents": 99,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 523,
          "function_name": "value_iteration",
          "code": "distances.append(distance)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 524,
          "function_name": "value_iteration",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 528,
          "function_name": "value_iteration",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "numpy.float64",
              "contents": -69.60000000000001,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "numpy.float64",
              "contents": -41.32000000000001,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "numpy.float64",
              "contents": -20.800000000000004,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "numpy.float64",
              "contents": -10.520000000000001,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "numpy.float64",
              "contents": -5.808000000000001,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "numpy.int64",
              "contents": -4,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "numpy.int64",
              "contents": -3,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "numpy.int64",
              "contents": -2,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "numpy.int64",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 513,
          "function_name": "value_iteration",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 4,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 514,
          "function_name": "value_iteration",
          "code": "new_values = {}  # state -> V_iter(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 517,
          "function_name": "value_iteration",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 518,
          "function_name": "value_iteration",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 522,
          "function_name": "value_iteration",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "numpy.float64",
          "contents": 27.28,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 523,
          "function_name": "value_iteration",
          "code": "distances.append(distance)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 524,
          "function_name": "value_iteration",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 528,
          "function_name": "value_iteration",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "numpy.float64",
              "contents": -42.32000000000001,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "numpy.float64",
              "contents": -21.800000000000004,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "numpy.float64",
              "contents": -11.520000000000001,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "numpy.float64",
              "contents": -6.808000000000001,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "numpy.float64",
              "contents": -4.323200000000001,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "numpy.int64",
              "contents": -4,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "numpy.int64",
              "contents": -3,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "numpy.int64",
              "contents": -2,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "numpy.int64",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 513,
          "function_name": "value_iteration",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 5,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 514,
          "function_name": "value_iteration",
          "code": "new_values = {}  # state -> V_iter(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 517,
          "function_name": "value_iteration",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 518,
          "function_name": "value_iteration",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 522,
          "function_name": "value_iteration",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "numpy.float64",
          "contents": 19.520000000000003,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 523,
          "function_name": "value_iteration",
          "code": "distances.append(distance)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 524,
          "function_name": "value_iteration",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 528,
          "function_name": "value_iteration",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "numpy.float64",
              "contents": -22.800000000000004,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "numpy.float64",
              "contents": -12.520000000000001,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "numpy.float64",
              "contents": -7.808000000000001,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "numpy.float64",
              "contents": -5.323200000000001,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "numpy.float64",
              "contents": -3.72928,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "numpy.int64",
              "contents": -4,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "numpy.int64",
              "contents": -3,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "numpy.int64",
              "contents": -2,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "numpy.int64",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 513,
          "function_name": "value_iteration",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 6,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 514,
          "function_name": "value_iteration",
          "code": "new_values = {}  # state -> V_iter(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 517,
          "function_name": "value_iteration",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 518,
          "function_name": "value_iteration",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 522,
          "function_name": "value_iteration",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "numpy.float64",
          "contents": 9.280000000000003,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 523,
          "function_name": "value_iteration",
          "code": "distances.append(distance)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 524,
          "function_name": "value_iteration",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 528,
          "function_name": "value_iteration",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "numpy.float64",
              "contents": -13.520000000000001,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "numpy.float64",
              "contents": -8.808,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "numpy.float64",
              "contents": -6.323200000000001,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "numpy.float64",
              "contents": -4.72928,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "numpy.float64",
              "contents": -3.4917119999999997,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "numpy.int64",
              "contents": -4,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "numpy.int64",
              "contents": -3,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "numpy.int64",
              "contents": -2,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "numpy.int64",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 513,
          "function_name": "value_iteration",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 7,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 514,
          "function_name": "value_iteration",
          "code": "new_values = {}  # state -> V_iter(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 517,
          "function_name": "value_iteration",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 518,
          "function_name": "value_iteration",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 522,
          "function_name": "value_iteration",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "numpy.float64",
          "contents": 3.7120000000000015,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 523,
          "function_name": "value_iteration",
          "code": "distances.append(distance)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 524,
          "function_name": "value_iteration",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 528,
          "function_name": "value_iteration",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "numpy.float64",
              "contents": -9.808,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "numpy.float64",
              "contents": -7.323200000000001,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "numpy.float64",
              "contents": -5.72928,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "numpy.float64",
              "contents": -4.491712,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "numpy.float64",
              "contents": -3.3966848,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "numpy.int64",
              "contents": -4,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "numpy.int64",
              "contents": -3,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "numpy.int64",
              "contents": -2,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "numpy.int64",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 513,
          "function_name": "value_iteration",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 8,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 514,
          "function_name": "value_iteration",
          "code": "new_values = {}  # state -> V_iter(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 517,
          "function_name": "value_iteration",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 518,
          "function_name": "value_iteration",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 522,
          "function_name": "value_iteration",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "numpy.float64",
          "contents": 1.4848,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 523,
          "function_name": "value_iteration",
          "code": "distances.append(distance)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 524,
          "function_name": "value_iteration",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 528,
          "function_name": "value_iteration",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "numpy.float64",
              "contents": -8.3232,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "numpy.float64",
              "contents": -6.72928,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "numpy.float64",
              "contents": -5.491712,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "numpy.float64",
              "contents": -4.3966848,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "numpy.float64",
              "contents": -3.35867392,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "numpy.int64",
              "contents": -4,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "numpy.int64",
              "contents": -3,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "numpy.int64",
              "contents": -2,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "numpy.int64",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 513,
          "function_name": "value_iteration",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 9,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 514,
          "function_name": "value_iteration",
          "code": "new_values = {}  # state -> V_iter(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 517,
          "function_name": "value_iteration",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 518,
          "function_name": "value_iteration",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 522,
          "function_name": "value_iteration",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "numpy.float64",
          "contents": 0.5939199999999998,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 523,
          "function_name": "value_iteration",
          "code": "distances.append(distance)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 524,
          "function_name": "value_iteration",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 528,
          "function_name": "value_iteration",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "numpy.float64",
              "contents": -7.72928,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "numpy.float64",
              "contents": -6.491712,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "numpy.float64",
              "contents": -5.3966848,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "numpy.float64",
              "contents": -4.35867392,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "numpy.float64",
              "contents": -3.3434695679999997,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "numpy.int64",
              "contents": -4,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "numpy.int64",
              "contents": -3,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "numpy.int64",
              "contents": -2,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "numpy.int64",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 513,
          "function_name": "value_iteration",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 10,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 514,
          "function_name": "value_iteration",
          "code": "new_values = {}  # state -> V_iter(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 517,
          "function_name": "value_iteration",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 518,
          "function_name": "value_iteration",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 522,
          "function_name": "value_iteration",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "numpy.float64",
          "contents": 0.23756800000000045,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 523,
          "function_name": "value_iteration",
          "code": "distances.append(distance)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 524,
          "function_name": "value_iteration",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 528,
          "function_name": "value_iteration",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "numpy.float64",
              "contents": -7.491712,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "numpy.float64",
              "contents": -6.3966848,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "numpy.float64",
              "contents": -5.35867392,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "numpy.float64",
              "contents": -4.343469568,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "numpy.float64",
              "contents": -3.3373878271999997,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "numpy.int64",
              "contents": -4,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "numpy.int64",
              "contents": -3,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "numpy.int64",
              "contents": -2,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "numpy.int64",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 513,
          "function_name": "value_iteration",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 11,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 514,
          "function_name": "value_iteration",
          "code": "new_values = {}  # state -> V_iter(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 517,
          "function_name": "value_iteration",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 518,
          "function_name": "value_iteration",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 522,
          "function_name": "value_iteration",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "numpy.float64",
          "contents": 0.09502719999999965,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 523,
          "function_name": "value_iteration",
          "code": "distances.append(distance)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 524,
          "function_name": "value_iteration",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 528,
          "function_name": "value_iteration",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "numpy.float64",
              "contents": -7.3966848,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "numpy.float64",
              "contents": -6.35867392,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "numpy.float64",
              "contents": -5.343469568,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "numpy.float64",
              "contents": -4.3373878272,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "numpy.float64",
              "contents": -3.33495513088,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "numpy.int64",
              "contents": -4,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "numpy.int64",
              "contents": -3,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "numpy.int64",
              "contents": -2,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "numpy.int64",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 513,
          "function_name": "value_iteration",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 12,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 514,
          "function_name": "value_iteration",
          "code": "new_values = {}  # state -> V_iter(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 517,
          "function_name": "value_iteration",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 518,
          "function_name": "value_iteration",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 522,
          "function_name": "value_iteration",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "numpy.float64",
          "contents": 0.03801087999999986,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 523,
          "function_name": "value_iteration",
          "code": "distances.append(distance)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 524,
          "function_name": "value_iteration",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 528,
          "function_name": "value_iteration",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "numpy.float64",
              "contents": -7.35867392,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "numpy.float64",
              "contents": -6.343469568,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "numpy.float64",
              "contents": -5.3373878272,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "numpy.float64",
              "contents": -4.33495513088,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "numpy.float64",
              "contents": -3.333982052352,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "numpy.int64",
              "contents": -4,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "numpy.int64",
              "contents": -3,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "numpy.int64",
              "contents": -2,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "numpy.int64",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 513,
          "function_name": "value_iteration",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 13,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 514,
          "function_name": "value_iteration",
          "code": "new_values = {}  # state -> V_iter(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 517,
          "function_name": "value_iteration",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 518,
          "function_name": "value_iteration",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 522,
          "function_name": "value_iteration",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "numpy.float64",
          "contents": 0.015204352000000476,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 523,
          "function_name": "value_iteration",
          "code": "distances.append(distance)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 524,
          "function_name": "value_iteration",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 528,
          "function_name": "value_iteration",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "numpy.float64",
              "contents": -7.343469568,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "numpy.float64",
              "contents": -6.3373878272,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "numpy.float64",
              "contents": -5.33495513088,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "numpy.float64",
              "contents": -4.333982052352,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "numpy.float64",
              "contents": -3.3335928209408,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "numpy.int64",
              "contents": -4,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "numpy.int64",
              "contents": -3,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "numpy.int64",
              "contents": -2,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "numpy.int64",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 513,
          "function_name": "value_iteration",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 14,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 514,
          "function_name": "value_iteration",
          "code": "new_values = {}  # state -> V_iter(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 517,
          "function_name": "value_iteration",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 518,
          "function_name": "value_iteration",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 522,
          "function_name": "value_iteration",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "numpy.float64",
          "contents": 0.006081740800000013,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 523,
          "function_name": "value_iteration",
          "code": "distances.append(distance)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 524,
          "function_name": "value_iteration",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 528,
          "function_name": "value_iteration",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "numpy.float64",
              "contents": -7.3373878272,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "numpy.float64",
              "contents": -6.33495513088,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "numpy.float64",
              "contents": -5.333982052352,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "numpy.float64",
              "contents": -4.3335928209408,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "numpy.float64",
              "contents": -3.3334371283763202,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "numpy.int64",
              "contents": -4,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "numpy.int64",
              "contents": -3,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "numpy.int64",
              "contents": -2,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "numpy.int64",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 513,
          "function_name": "value_iteration",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 15,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 514,
          "function_name": "value_iteration",
          "code": "new_values = {}  # state -> V_iter(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 517,
          "function_name": "value_iteration",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 518,
          "function_name": "value_iteration",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 522,
          "function_name": "value_iteration",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "numpy.float64",
          "contents": 0.00243269631999965,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 523,
          "function_name": "value_iteration",
          "code": "distances.append(distance)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 524,
          "function_name": "value_iteration",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 528,
          "function_name": "value_iteration",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "numpy.float64",
              "contents": -7.33495513088,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "numpy.float64",
              "contents": -6.333982052352,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "numpy.float64",
              "contents": -5.3335928209408,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "numpy.float64",
              "contents": -4.33343712837632,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "numpy.float64",
              "contents": -3.333374851350528,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "numpy.int64",
              "contents": -4,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "numpy.int64",
              "contents": -3,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "numpy.int64",
              "contents": -2,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "numpy.int64",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 513,
          "function_name": "value_iteration",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 16,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 514,
          "function_name": "value_iteration",
          "code": "new_values = {}  # state -> V_iter(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 517,
          "function_name": "value_iteration",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 518,
          "function_name": "value_iteration",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 522,
          "function_name": "value_iteration",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "numpy.float64",
          "contents": 0.0009730785280002152,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 523,
          "function_name": "value_iteration",
          "code": "distances.append(distance)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 524,
          "function_name": "value_iteration",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 528,
          "function_name": "value_iteration",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "numpy.float64",
              "contents": -7.333982052352,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "numpy.float64",
              "contents": -6.3335928209408,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "numpy.float64",
              "contents": -5.33343712837632,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "numpy.float64",
              "contents": -4.333374851350528,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "numpy.float64",
              "contents": -3.333349940540211,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "numpy.int64",
              "contents": -4,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "numpy.int64",
              "contents": -3,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "numpy.int64",
              "contents": -2,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "numpy.int64",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 513,
          "function_name": "value_iteration",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 17,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 514,
          "function_name": "value_iteration",
          "code": "new_values = {}  # state -> V_iter(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 517,
          "function_name": "value_iteration",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 518,
          "function_name": "value_iteration",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 522,
          "function_name": "value_iteration",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "numpy.float64",
          "contents": 0.0003892314111997308,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 523,
          "function_name": "value_iteration",
          "code": "distances.append(distance)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 524,
          "function_name": "value_iteration",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 528,
          "function_name": "value_iteration",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "numpy.float64",
              "contents": -7.3335928209408,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "numpy.float64",
              "contents": -6.33343712837632,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "numpy.float64",
              "contents": -5.333374851350528,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "numpy.float64",
              "contents": -4.333349940540211,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "numpy.float64",
              "contents": -3.3333399762160845,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "numpy.int64",
              "contents": -4,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "numpy.int64",
              "contents": -3,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "numpy.int64",
              "contents": -2,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "numpy.int64",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 513,
          "function_name": "value_iteration",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 18,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 514,
          "function_name": "value_iteration",
          "code": "new_values = {}  # state -> V_iter(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 517,
          "function_name": "value_iteration",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 518,
          "function_name": "value_iteration",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 522,
          "function_name": "value_iteration",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "numpy.float64",
          "contents": 0.00015569256447989233,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 523,
          "function_name": "value_iteration",
          "code": "distances.append(distance)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 524,
          "function_name": "value_iteration",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 528,
          "function_name": "value_iteration",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "numpy.float64",
              "contents": -7.33343712837632,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "numpy.float64",
              "contents": -6.333374851350528,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "numpy.float64",
              "contents": -5.333349940540211,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "numpy.float64",
              "contents": -4.3333399762160845,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "numpy.float64",
              "contents": -3.333335990486434,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "numpy.int64",
              "contents": -4,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "numpy.int64",
              "contents": -3,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "numpy.int64",
              "contents": -2,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "numpy.int64",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 513,
          "function_name": "value_iteration",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 19,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 514,
          "function_name": "value_iteration",
          "code": "new_values = {}  # state -> V_iter(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 517,
          "function_name": "value_iteration",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 518,
          "function_name": "value_iteration",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 522,
          "function_name": "value_iteration",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "numpy.float64",
          "contents": 6.22770257923122e-05,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 523,
          "function_name": "value_iteration",
          "code": "distances.append(distance)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 524,
          "function_name": "value_iteration",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 528,
          "function_name": "value_iteration",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "numpy.float64",
              "contents": -7.333374851350528,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "numpy.float64",
              "contents": -6.333349940540211,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "numpy.float64",
              "contents": -5.3333399762160845,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "numpy.float64",
              "contents": -4.333335990486434,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "numpy.float64",
              "contents": -3.333334396194574,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "numpy.int64",
              "contents": -4,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "numpy.int64",
              "contents": -3,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "numpy.int64",
              "contents": -2,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "numpy.int64",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 513,
          "function_name": "value_iteration",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 20,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 514,
          "function_name": "value_iteration",
          "code": "new_values = {}  # state -> V_iter(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 517,
          "function_name": "value_iteration",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 518,
          "function_name": "value_iteration",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 522,
          "function_name": "value_iteration",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "numpy.float64",
          "contents": 2.4910810316747245e-05,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 523,
          "function_name": "value_iteration",
          "code": "distances.append(distance)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 524,
          "function_name": "value_iteration",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 528,
          "function_name": "value_iteration",
          "code": "values = new_values  # @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "dict",
          "contents": {
            "1": {
              "type": "numpy.float64",
              "contents": -7.333349940540211,
              "dtype": null,
              "shape": null
            },
            "2": {
              "type": "numpy.float64",
              "contents": -6.3333399762160845,
              "dtype": null,
              "shape": null
            },
            "3": {
              "type": "numpy.float64",
              "contents": -5.333335990486434,
              "dtype": null,
              "shape": null
            },
            "4": {
              "type": "numpy.float64",
              "contents": -4.333334396194574,
              "dtype": null,
              "shape": null
            },
            "5": {
              "type": "numpy.float64",
              "contents": -3.3333337584778295,
              "dtype": null,
              "shape": null
            },
            "6": {
              "type": "numpy.int64",
              "contents": -4,
              "dtype": null,
              "shape": null
            },
            "7": {
              "type": "numpy.int64",
              "contents": -3,
              "dtype": null,
              "shape": null
            },
            "8": {
              "type": "numpy.int64",
              "contents": -2,
              "dtype": null,
              "shape": null
            },
            "9": {
              "type": "numpy.int64",
              "contents": -1,
              "dtype": null,
              "shape": null
            },
            "10": {
              "type": "int",
              "contents": 0,
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 513,
          "function_name": "value_iteration",
          "code": "for iter in range(max_iters):  # @inspect iter"
        }
      ],
      "env": {
        "iter": {
          "type": "int",
          "contents": 21,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 514,
          "function_name": "value_iteration",
          "code": "new_values = {}  # state -> V_iter(state)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 519,
          "function_name": "value_iteration",
          "code": "new_values[state], pi[state] = value_iteration_for_state(mdp, state, values)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 516,
          "function_name": "value_iteration",
          "code": "if mdp.is_end(state):  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 517,
          "function_name": "value_iteration",
          "code": "new_values[state] = 0"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 518,
          "function_name": "value_iteration",
          "code": "continue"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 515,
          "function_name": "value_iteration",
          "code": "for state in values:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 522,
          "function_name": "value_iteration",
          "code": "distance = compute_distance(values, new_values)  # @inspect distance @stepover"
        }
      ],
      "env": {
        "distance": {
          "type": "numpy.float64",
          "contents": 9.964324126698898e-06,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 523,
          "function_name": "value_iteration",
          "code": "distances.append(distance)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 524,
          "function_name": "value_iteration",
          "code": "if distance < tolerance:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 525,
          "function_name": "value_iteration",
          "code": "break"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        },
        {
          "path": "mdp.py",
          "line_number": 530,
          "function_name": "value_iteration",
          "code": "return ValueIterationResult(values=values, pi=pi, distances=distances)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 483,
          "function_name": "introduce_value_iteration",
          "code": "result = value_iteration(mdp)  # @inspect result"
        }
      ],
      "env": {
        "result": {
          "type": "mdp.ValueIterationResult",
          "contents": {
            "values": {
              "type": "dict",
              "contents": {
                "1": {
                  "type": "numpy.float64",
                  "contents": -7.333349940540211,
                  "dtype": null,
                  "shape": null
                },
                "2": {
                  "type": "numpy.float64",
                  "contents": -6.3333399762160845,
                  "dtype": null,
                  "shape": null
                },
                "3": {
                  "type": "numpy.float64",
                  "contents": -5.333335990486434,
                  "dtype": null,
                  "shape": null
                },
                "4": {
                  "type": "numpy.float64",
                  "contents": -4.333334396194574,
                  "dtype": null,
                  "shape": null
                },
                "5": {
                  "type": "numpy.float64",
                  "contents": -3.3333337584778295,
                  "dtype": null,
                  "shape": null
                },
                "6": {
                  "type": "numpy.int64",
                  "contents": -4,
                  "dtype": null,
                  "shape": null
                },
                "7": {
                  "type": "numpy.int64",
                  "contents": -3,
                  "dtype": null,
                  "shape": null
                },
                "8": {
                  "type": "numpy.int64",
                  "contents": -2,
                  "dtype": null,
                  "shape": null
                },
                "9": {
                  "type": "numpy.int64",
                  "contents": -1,
                  "dtype": null,
                  "shape": null
                },
                "10": {
                  "type": "int",
                  "contents": 0,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            "pi": {
              "type": "dict",
              "contents": {
                "1": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "2": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "3": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "4": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "5": {
                  "type": "str",
                  "contents": "tram",
                  "dtype": null,
                  "shape": null
                },
                "6": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "7": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "8": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "9": {
                  "type": "str",
                  "contents": "walk",
                  "dtype": null,
                  "shape": null
                },
                "10": {
                  "type": "NoneType",
                  "contents": "None",
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            "distances": {
              "type": "list",
              "contents": [
                {
                  "type": "numpy.int64",
                  "contents": 99,
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "numpy.int64",
                  "contents": 99,
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "numpy.int64",
                  "contents": 99,
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "numpy.int64",
                  "contents": 99,
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "numpy.float64",
                  "contents": 27.28,
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "numpy.float64",
                  "contents": 19.520000000000003,
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "numpy.float64",
                  "contents": 9.280000000000003,
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "numpy.float64",
                  "contents": 3.7120000000000015,
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "numpy.float64",
                  "contents": 1.4848,
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "numpy.float64",
                  "contents": 0.5939199999999998,
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "numpy.float64",
                  "contents": 0.23756800000000045,
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "numpy.float64",
                  "contents": 0.09502719999999965,
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "numpy.float64",
                  "contents": 0.03801087999999986,
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "numpy.float64",
                  "contents": 0.015204352000000476,
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "numpy.float64",
                  "contents": 0.006081740800000013,
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "numpy.float64",
                  "contents": 0.00243269631999965,
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "numpy.float64",
                  "contents": 0.0009730785280002152,
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "numpy.float64",
                  "contents": 0.0003892314111997308,
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "numpy.float64",
                  "contents": 0.00015569256447989233,
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "numpy.float64",
                  "contents": 6.22770257923122e-05,
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "numpy.float64",
                  "contents": 2.4910810316747245e-05,
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "numpy.float64",
                  "contents": 9.964324126698898e-06,
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 484,
          "function_name": "introduce_value_iteration",
          "code": "plot(make_distance_plot(\"value iteration\", result.distances))  # @stepover"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "plot",
          "data": {
            "config": {
              "view": {
                "continuousWidth": 300,
                "continuousHeight": 300
              }
            },
            "data": {
              "values": [
                {
                  "iteration": 0,
                  "distance": 99.0,
                  "color": "blue"
                },
                {
                  "iteration": 1,
                  "distance": 99.0,
                  "color": "blue"
                },
                {
                  "iteration": 2,
                  "distance": 99.0,
                  "color": "blue"
                },
                {
                  "iteration": 3,
                  "distance": 99.0,
                  "color": "blue"
                },
                {
                  "iteration": 4,
                  "distance": 27.28,
                  "color": "blue"
                },
                {
                  "iteration": 5,
                  "distance": 19.520000000000003,
                  "color": "blue"
                },
                {
                  "iteration": 6,
                  "distance": 9.280000000000003,
                  "color": "blue"
                },
                {
                  "iteration": 7,
                  "distance": 3.7120000000000015,
                  "color": "blue"
                },
                {
                  "iteration": 8,
                  "distance": 1.4848,
                  "color": "blue"
                },
                {
                  "iteration": 9,
                  "distance": 0.5939199999999998,
                  "color": "blue"
                },
                {
                  "iteration": 10,
                  "distance": 0.23756800000000045,
                  "color": "blue"
                },
                {
                  "iteration": 11,
                  "distance": 0.09502719999999965,
                  "color": "blue"
                },
                {
                  "iteration": 12,
                  "distance": 0.03801087999999986,
                  "color": "blue"
                },
                {
                  "iteration": 13,
                  "distance": 0.015204352000000476,
                  "color": "blue"
                },
                {
                  "iteration": 14,
                  "distance": 0.006081740800000013,
                  "color": "blue"
                },
                {
                  "iteration": 15,
                  "distance": 0.00243269631999965,
                  "color": "blue"
                },
                {
                  "iteration": 16,
                  "distance": 0.0009730785280002152,
                  "color": "blue"
                },
                {
                  "iteration": 17,
                  "distance": 0.0003892314111997308,
                  "color": "blue"
                },
                {
                  "iteration": 18,
                  "distance": 0.00015569256447989233,
                  "color": "blue"
                },
                {
                  "iteration": 19,
                  "distance": 6.22770257923122e-05,
                  "color": "blue"
                },
                {
                  "iteration": 20,
                  "distance": 2.4910810316747245e-05,
                  "color": "blue"
                },
                {
                  "iteration": 21,
                  "distance": 9.964324126698898e-06,
                  "color": "blue"
                }
              ]
            },
            "mark": {
              "type": "point"
            },
            "encoding": {
              "color": {
                "field": "color",
                "type": "nominal"
              },
              "x": {
                "field": "iteration",
                "type": "quantitative"
              },
              "y": {
                "field": "distance",
                "type": "quantitative"
              }
            },
            "$schema": "https://vega.github.io/schema/vega-lite/v5.20.1.json"
          },
          "style": null,
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 486,
          "function_name": "introduce_value_iteration",
          "code": "text(\"Summary:\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Summary:",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 487,
          "function_name": "introduce_value_iteration",
          "code": "text(\"- Value iteration: computes value of the optimal policy\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Value iteration: computes value of the optimal policy",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 488,
          "function_name": "introduce_value_iteration",
          "code": "text(\"- Takes max over actions compared to policy evaluation, which takes policy action\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Takes max over actions compared to policy evaluation, which takes policy action",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        },
        {
          "path": "mdp.py",
          "line_number": 489,
          "function_name": "introduce_value_iteration",
          "code": "text(\"- Bootstrapping: use values to compute new values using recurrence (same)\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Bootstrapping: use values to compute new values using recurrence (same)",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 34,
          "function_name": "main",
          "code": "introduce_value_iteration()"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 36,
          "function_name": "main",
          "code": "text(\"Summary:\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Summary:",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 37,
          "function_name": "main",
          "code": "text(\"- MDPs: generalize search problems (action result in distribution over next states)\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- MDPs: generalize search problems (action result in distribution over next states)",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 38,
          "function_name": "main",
          "code": "text(\"- Policy (solution): maps state to action\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Policy (solution): maps state to action",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 39,
          "function_name": "main",
          "code": "text(\"- MDP + policy \u2192 rollout \u2192 utility\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- MDP + policy \u2192 rollout \u2192 utility",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 40,
          "function_name": "main",
          "code": "text(\"- Value of policy = expected utility of policy\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Value of policy = expected utility of policy",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 41,
          "function_name": "main",
          "code": "text(\"- Policy evaluation: computes value of a given policy\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Policy evaluation: computes value of a given policy",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "mdp.py",
          "line_number": 42,
          "function_name": "main",
          "code": "text(\"- Value iteration: computes value of the optimal policy\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Value iteration: computes value of the optimal policy",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    }
  ]
}