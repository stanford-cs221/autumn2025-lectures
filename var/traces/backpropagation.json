{
  "files": {
    "backpropagation.py": "from edtrace import text, link, plot, note, image\nfrom dataclasses import dataclass\nimport numpy as np\nfrom altair import Chart, Data\nfrom einops import einsum\n\n\ndef main():\n    text(\"Last unit: **tensors**\")\n    text(\"- Atoms in modern machine learning, used to represent everything (data, parameters, etc.)\")\n    text(\"- einops library to make computations more legible\")\n    einops_review()\n\n    text(\"This unit: **gradients**\")\n    text(\"- Define objective functions by composing tensor operations\")\n    text(\"- Gradients of objective functions tell us how to improve the function\")\n    text(\"- Computation graphs allow us to compute gradients efficiently\")\n\n    motivation()\n    gradients()\n    computation_graphs()\n\n    text(\"Summary:\")\n    text(\"- Reviewed einsum (for each assignment of input axes, multiply/add to corresponding outputs)\")\n    text(\"- Construct computation graphs to create other tensors (future: use einsum!)\")\n    text(\"- Gradients / partial derivatives: how much does the function change if we change the input?\")\n    text(\"- Backpropagation: general algorithm to compute gradients using computation graphs\")\n\n\ndef einops_review():\n    text(\"A tensor has an **order** (also called rank, but clashes with rank of matrix)\")\n    text(\"- Order 0 tensors are scalars\")\n    text(\"- Order 1 tensors are vectors\")\n    text(\"- Order 2 tensors are matrices\")\n\n    text(\"A tensor has an order number of **axes**.\")\n    text(\"For order 2 tensors (matrices):\")\n    text(\"- Axis 0 corresponds to rows\")\n    text(\"- Axis 1 corresponds to columns\")\n\n    text(\"In einops, we name the axes of each tensor\")\n    text(\"- Choose name based on what that axis represents (just like variable names in code)\")\n    text(\"- Example: for a matrix where rows are data points, axes names: example, feature\")\n    text(\"- einsum is a single function that can do a lot of different things\")\n\n    text(\"Now let's play around with some basic einsum examples.\")\n\n    text(\"Start with operations on vectors.\")\n    x = np.array([0, 1, 10])  # @inspect x\n\n    # Identity: y[i] += x[i] for all i\n    y = einsum(x, \"i -> i\")  # @inspect y\n\n    # Sum: y += x[i] for all i\n    y = einsum(x, \"i ->\")  # @inspect y\n\n    # Elementwise product: y[i] += x[i] * x[i] for all i\n    y = einsum(x, x, \"i, i -> i\")  # @inspect y\n\n    # Dot product: y += x[i] * x[i] for all i\n    y = einsum(x, x, \"i, i ->\")  # @inspect y\n\n    # Outer product: y[i][j] += x[i] * x[j] for all i, j\n    y = einsum(x, x, \"i, j -> i j\")  # @inspect y\n\n    # Triple elementwise product: y[i] = x[i] * x[i] * x[i] for all i\n    y = einsum(x, x, x, \"i, i, i -> i\")  # @inspect y\n\n    # Triple outer product: y[i][j][k] += x[i] * x[j] * x[k] for all i, j, k\n    y = einsum(x, x, x, \"i, j, k -> i j k\")  # @inspect y\n\n    text(\"Now let's try operations on matrices.\")  # @clear y\n    m = np.array([[0, 1, 2], [1, 10, 0]])  # @inspect m\n\n    # Sum of all entries: y += m[i][j] for all i, j\n    y = einsum(m, \"i j ->\")  # @inspect y\n\n    # Row sums: y[i] += m[i][j] for all i, j\n    y = einsum(m, \"i j -> i\")  # @inspect y\n\n    # Column sums: y[j] += m[i][j] for all i, j\n    y = einsum(m, \"i j -> j\")  # @inspect y\n\n    # Transpose: y[j][i] += m[i][j] for all i, j\n    y = einsum(m, \"i j -> j i\")  # @inspect y\n\n    # Matrix vector product: y[i] += m[i][j] * x[j] for all i, j\n    y = einsum(m, x, \"i j, j -> i\")  # @inspect y\n\n    # Matrix-matrix product m m^T: y[i][j] += m[i][k] * m[j][k] for all i, j, k\n    y = einsum(m, m, \"i k, j k -> i j\")  # @inspect y\n\n    # Matrix-matrix product m^T m: y[i][j] += m[k][i] * m[k][j] for all i, j, k\n    y = einsum(m, m, \"k i, k j -> i j\")  # @inspect y\n\n    text(\"General setup:\")\n    text(\"- Input: a list of tensors with named input axes (potentially overlapping)\")\n    text(\"- Output: a tensor with a list of named output axes (a subset of the input axes)\")\n    text(\"For each assignment of the input axes (e.g., (i, j, k) = (0, 2, 1)):\")\n    text(\"- Multiply the corresponding element of the tensors (e.g., m[k][i] * m[k][j])\")\n    text(\"- Add this to the corresponding element of the output tensor (e.g., y[i][j])\")\n\n    text(\"It's all just additions and multiplications with bookkeeping!\")\n\n\ndef motivation():\n    text(\"Let us start with linear regression example.\")\n    text(\"For now, focus on the tensor mechanics and don't worry about the machine learning.\")\n\n    x = np.array([[1, 2, 0], [0, -1, 1]])  # n x d matrix @inspect x\n    y = np.array([0, 3])  # n vector of targets @inspect y\n    w = np.array([1, 0, 1])  # d vector of weights @inspect w\n\n    text(\"We can build new tensors by applying various operations:\")\n    predictions = x @ w   # multiplication -> n vector of predictions @inspect predictions\n    residuals = predictions - y   # elementwise subtraction -> n vector of residuals @inspect residuals\n    losses = residuals ** 2  # elementwise power @inspect losses\n    total_loss = np.sum(losses)  # sum all elements @inspect total_loss\n\n    text(\"Define an **objective** function that takes an vector input and returns a scalar output.\") # @clear predictions residuals losses total_loss w\n    def objective(w: np.ndarray) -> float:\n        loss = np.sum((x @ w - y) ** 2)  # @inspect loss\n        return loss\n    text(\"For each value of `w`, we can compute the objective.\")\n    loss = objective(np.array([1, 0, 1]))  # @inspect loss @stepover\n    loss = objective(np.array([1, 0, -1]))  # @inspect loss @stepover\n    \n    text(\"Ultimate goal is to find `w` that minimizes `objective(w)`.\")\n    text(\"For now: given a fixed `w`, how should we tweak `w` to improve `objective(w)`?\")\n    \n\ndef gradients():\n    text(\"Recall from your multivariable calculus course:\")\n    text(\"The **gradient** of a function tell us the direction that decreases the function the most.\")\n\n    text(\"Example use cases:\")\n    text(\"- Optimizing the parameters of a deep learning model\")\n    text(\"- Optimizing the input (an image) that maximizes error (adversarial examples)\")\n    text(\"- Optimizing the relative proportions over datasets\")\n\n    example_1d()\n    example_2d()\n    example_vector()\n\n    text(\"Summary:\")\n    text(\"- Consider functions that take an input tensor and output a scalar.\")\n    text(\"- Partial derivative measures how much the function changes when an element of the tensor changes.\")\n    text(\"- Gradient is the full tensor of partial derivatives (same shape as input).\")\n\n\ndef example_1d():\n    text(\"Consider a simple scalar function:\")\n    def f(x: float) -> float:  # @inspect x\n        return x ** 2\n\n    text(\"Plot the function by passing in a range of inputs.\")\n    values = [{\"x\": x, \"y\": f(x)} for x in np.linspace(-2, 2, 30)]  # @stepover @inspect values\n    plot(Chart(Data(values=values)).mark_line().encode(x=\"x:Q\", y=\"y:Q\").to_dict())  # @clear values\n\n    text(\"If we change `x` slightly, how much does `f(x)` change?\")\n    dx = 1e-4\n    x = 1\n    y = f(x)  # @inspect y\n    new_y = f(x + dx)  # @inspect new_y\n    text(\"For each change dx, we get a change dy.\")\n    dy = (new_y - y) / dx  # @inspect dy\n\n    text(\"As dx -> 0, this is the **derivative**, which we can analytically compute:\")\n    def df(x: float) -> float:\n        return 2 * x  # @inspect df\n    dy = df(x)  # @inspect dy @stepover\n\n    text(\"Graphically, derivative is the slope of the tangent line at `x`.\")\n\n\ndef example_2d():\n    text(\"Consider a function that takes 2 scalar inputs and outputs a scalar:\")\n    def f(x1: float, x2: float) -> float:\n        return (x1 + x2) ** 2   # @inspect f\n    y = f(1, 2)  # @inspect y\n\n    text(\"Analytically compute the **partial derivative** for each input:\")\n    def df_dx1(x1: float, x2: float) -> float:\n        return 2 * (x1 + x2) * 1\n    def df_dx2(x1: float, x2: float) -> float:\n        return 2 * (x1 + x2) * 1\n\n    dy_x1 = df_dx1(1, 2)  # @inspect dy_x1\n    dy_x2 = df_dx2(1, 2)  # @inspect dy_x2\n\n    text(\"From (1, 2), moving in direction of (dy_x1, dy_x2) will increase f the most.\")\n    text(\"From (1, 2), moving in direction of -(dy_x1, dy_x2) will decrease f the most.\")\n\n\ndef example_vector():\n    text(\"Now let's consider a general vector function:\")\n    def f(x: np.ndarray):\n        return np.sum(x) ** 2\n    \n    text(\"Input a 2-dimensional vector, and output a scalar.\")\n    y = f(np.array([1, 2]))  # @inspect y @stepover\n\n    text(\"We have a partial derivative, one for each dimension.\")\n    text(\"- df/dx[0]: how much does f change if we change x[0]?\")\n    text(\"- df/dx[1]: how much does f change if we change x[1]?\")\n    \n    text(\"The **gradient** is the vector of the partial derivatives:\")\n    text(\"- \u2207f = (df/dx[0], df/dx[1])\")\n\n    text(\"Let us analytically compute the gradient:\")\n    def df(x: np.ndarray) -> np.ndarray:\n        return 2 * np.sum(x) * np.ones_like(x)\n    dy = df(np.array([1, 2]))  # @inspect dy @stepover\n\n    text(\"These functions work for any number of dimensions:\") # @clear y dy\n    y = f(np.array([1, 3, 0, -1]))  # @inspect y @stepover\n    dy = df(np.array([1, 3, 0, -1]))  # @inspect dy @stepover\n\n\ndef computation_graphs():\n    text(\"For any function, we can compute the gradient manually.\")\n    text(\"This is tedious and error-prone.\")\n\n    text(\"At the end of the day, even the most complex functions are composed out of basic operations.\")\n    text(\"- addition, multiplication, exp, log, etc.\")\n\n    text(\"Autodiff (specifically, reverse mode automatic differentation) \"), link(\"https://gwern.net/doc/ai/nn/1974-werbos.pdf\", title=\"Werbos 1974\")\n    text(\"- Build an explicit computation graph of the function\")\n    text(\"- Compute partial derivatives recursively by traversing the graph\")\n\n    text(\"Today, there are many libraries (PyTorch, JAX).\")\n    text(\"We will implement a mini-PyTorch today.\")\n\n    computation_graphs_example()\n    computation_graphs_general()\n\n    text(\"Summary:\")\n    text(\"- Computation graphs represent complex functions in terms of primitive operations.\")\n    text(\"- We are interested in computing the function value but also gradients with respect to inputs.\")\n    text(\"- Key mathematical property: chain rule\")\n    text(\"- Backpropagation is a general algorithm to organize the computation of gradients (and values).\")\n    text(\"- Can deepen your understanding of calculus too!\")\n\n\ndef computation_graphs_example():\n    text(\"Let us build a computation graph for the following function:\")\n    def f(x1: float, x2: float) -> float:\n        return (x1 + x2) ** 2\n\n    x1 = Input(\"x1\", np.array(2.0))  # @inspect x1\n    x2 = Input(\"x2\", np.array(3.0))  # @inspect x2 @stepover\n    sum = Add(\"sum\", x1, x2)  # @inspect sum  @stepover\n    sum.forward()  # @inspect sum\n    y = Squared(\"y\", sum)  # @inspect y @stepover @clear sum\n    y.forward()  # @inspect y\n\n    text(\"Summary so far:\")  # @clear y\n    text(\"- Each input (leaf) node represents some fixed value (e.g., `x1`).\")\n    text(\"- Each non-input node represents a primitive computation performed on its dependencies.\")\n    text(\"- `forward()` computes the `value` of a node.\")\n    text(\"- The result of the computation is at the root node (e.g., `y`)\")\n\n    text(\"Now we want to compute partial derivatives (e.g., `dy/dx1`).\")\n\n    text(\"Chain rule (from multivariable calculus):\")\n    image(\"images/chain_rule.png\", width=400)\n    link(\"https://stanford-cs221.github.io/autumn2023/modules/module.html#include=machine-learning%2Fbackpropagation.js&mode=print6pp\", title=\"Reference: Autumn 2023 slides\")\n\n    text(\"Let us compute dy/dx1.\")\n    y.grad = np.ones_like(y.value)  # @inspect y\n    sum.grad = np.zeros_like(sum.value)  # @inspect y\n    x1.grad = np.zeros_like(x1.value)  # @inspect y\n    x2.grad = np.zeros_like(x2.value)  # @inspect y\n    y.backward()  # @inspect y\n    sum.backward()  # @inspect y\n\n    text(\"In general:\")\n    text(\"- `node.backward()` updates the partial derivatives of the dependencies of `node`.\")\n    text(\"- Assumes `node.grad` is computed and all `value`s are computed.\")\n\n\ndef computation_graphs_general():\n    text(\"Now let's define the **backpropagation** algorithm in full generality.\")\n    text(\"- Traverse the graph from inputs (leaves) to the root and call `forward`\")\n    text(\"- Traverse the graph from root to inputs (leaves) and call `backward`.\")\n\n    text(\"Let's redo the same function from before.\")\n    x1 = Input(\"x1\", np.array(2.0))  # @stepover\n    x2 = Input(\"x2\", np.array(3.0))  # @stepover\n    sum = Add(\"sum\", x1, x2)  # @stepover\n    y = Squared(\"y\", sum)  # @inspect y @stepover\n    backpropagation(y)  # @inspect y\n\n    text(\"Let's look at the original motivating example from linear regression.\") # @clear x1 x2 sum y\n    x = Input(\"x\", np.array([[1., 2, 0], [0, -1, 1]]))  # @inspect x @stepover\n    y = Input(\"y\", np.array([[0.], [3]]))  # @inspect y @stepover\n    w = Input(\"w\", np.array([[1.], [0], [1]]))  # @inspect w @stepover\n    predictions = Multiply(\"predictions\", x, w)  # @inspect predictions @stepover @clear x w\n    residuals = Subtract(\"residuals\", predictions, y)  # @inspect residuals @stepover @clear predictions y\n    losses = Squared(\"losses\", residuals)  # @inspect losses @stepover @clear residuals\n    ones = Input(\"ones\", np.ones((1, 2)))  # @inspect ones @stepover\n    total_loss = Multiply(\"total_loss\", ones, losses)  # @inspect total_loss @stepover @clear ones losses\n    backpropagation(total_loss)  # @inspect total_loss\n\n\nclass Node:\n    \"\"\"\n    A node in the computation graph, which represents some computation of its dependencies.\n    Each node has the following:\n    - name (just for displaying)\n    - dependencies (the nodes that this node depends on)\n    - value (computed during the forward pass)\n    - grad (computed during the backward pass)\n    \"\"\"\n    def __init__(self, name: str, *dependencies):\n        self.name = name\n        self.dependencies = dependencies\n        self.value = None\n        self.grad = None\n\n    def forward(self):\n        raise NotImplementedError\n\n    def backward(self):\n        raise NotImplementedError\n\n    def asdict(self) -> dict:\n        result = {\n            \"name\": self.name,\n            \"value\": self.value,\n            \"grad\": self.grad,\n        }\n        if self.dependencies:\n            result[\"dependencies\"] = [dep.asdict() for dep in self.dependencies]\n        return result\n\n    \nclass Input(Node):\n    \"\"\"Represents an input (leaf node) in the computation graph.\"\"\"\n    def __init__(self, name: str, value: float):\n        super().__init__(name)\n        self.value = value\n\n    def forward(self):\n        # Value is already set\n        pass\n    \n    def backward(self):\n        # No dependencies\n        pass\n\n\nclass Add(Node):\n    \"\"\"Add the dependencies.\"\"\"\n    def forward(self):  # @inspect self\n        x, y = self.dependencies  # @inspect x.value y.value\n        self.value = x.value + y.value  # @inspect self\n    \n    def backward(self):  # @inspect self\n        x, y = self.dependencies\n        x.grad += self.grad  # @inspect self\n        y.grad += self.grad  # @inspect self\n\n\nclass Subtract(Node):\n    \"\"\"Add the dependencies.\"\"\"\n    def forward(self):  # @inspect self\n        x, y = self.dependencies  # @inspect x.value y.value\n        self.value = x.value - y.value  # @inspect self\n    \n    def backward(self):  # @inspect self\n        x, y = self.dependencies\n        x.grad += self.grad  # @inspect self\n        y.grad -= self.grad  # @inspect self\n\n\nclass Multiply(Node):\n    \"\"\"Multiply the two dependencies.\"\"\"\n    def forward(self):\n        x, y = self.dependencies  # @inspect x.value y.value\n        self.value = x.value @ y.value  # @inspect self.value\n    \n    def backward(self):  # @inspect self\n        x, y = self.dependencies\n        x.grad += self.grad @ y.value.T  # @inspect self\n        y.grad += x.value.T @ self.grad  # @inspect self\n\n\nclass Squared(Node):\n    \"\"\"Raise the first dependency to the power of the second dependency.\"\"\"\n    def forward(self):\n        x, = self.dependencies  # @inspect x.value\n        self.value = x.value ** 2  # @inspect self.value\n    \n    def backward(self):  # @inspect self\n        x, = self.dependencies\n        x.grad += 2 * x.value * self.grad  # @inspect self\n\n\ndef topological_sort(node: Node) -> list[Node]:\n    \"\"\"\n    Return node, the dependencies of node, their dependencies, etc. in topological order.\n    where a node follows its dependencies.\n    \"\"\"\n    visited: set[int] = set()\n    result: list[Node] = []\n\n    def traverse(node: Node):\n        if id(node) in visited:\n            return\n        visited.add(id(node))\n        for dep in node.dependencies:\n            traverse(dep)\n        result.append(node)\n\n    traverse(node)\n    return result\n\n\ndef backpropagation(root: Node):\n    # Gather all the recursive dependencies of root in order for traversal.\n    nodes = topological_sort(root)  # @stepover\n    order = [node.name for node in nodes]  # @inspect order @stepover\n\n    # Forward pass\n    for node in nodes:  # @inspect node.name\n        node.forward()  # @inspect root\n\n    # Initialize all gradients to 0\n    for node in nodes:  # @inspect node.name\n        node.grad = np.zeros_like(node.value)  # @inspect root @stepover\n    # ...except root\n    root.grad = np.ones_like(root.value)  # @inspect root\n\n    # Backward pass\n    for node in reversed(nodes):  # @inspect node.name\n        node.backward()  # @inspect root\n\n\nif __name__ == \"__main__\":\n    main()\n\n"
  },
  "hidden_line_numbers": {
    "backpropagation.py": []
  },
  "steps": [
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 8,
          "function_name": "main",
          "code": "def main():"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 9,
          "function_name": "main",
          "code": "text(\"Last unit: **tensors**\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Last unit: **tensors**",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 10,
          "function_name": "main",
          "code": "text(\"- Atoms in modern machine learning, used to represent everything (data, parameters, etc.)\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Atoms in modern machine learning, used to represent everything (data, parameters, etc.)",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 11,
          "function_name": "main",
          "code": "text(\"- einops library to make computations more legible\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- einops library to make computations more legible",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 12,
          "function_name": "main",
          "code": "einops_review()"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 12,
          "function_name": "main",
          "code": "einops_review()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 30,
          "function_name": "einops_review",
          "code": "def einops_review():"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 12,
          "function_name": "main",
          "code": "einops_review()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 31,
          "function_name": "einops_review",
          "code": "text(\"A tensor has an **order** (also called rank, but clashes with rank of matrix)\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "A tensor has an **order** (also called rank, but clashes with rank of matrix)",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 12,
          "function_name": "main",
          "code": "einops_review()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 32,
          "function_name": "einops_review",
          "code": "text(\"- Order 0 tensors are scalars\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Order 0 tensors are scalars",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 12,
          "function_name": "main",
          "code": "einops_review()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 33,
          "function_name": "einops_review",
          "code": "text(\"- Order 1 tensors are vectors\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Order 1 tensors are vectors",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 12,
          "function_name": "main",
          "code": "einops_review()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 34,
          "function_name": "einops_review",
          "code": "text(\"- Order 2 tensors are matrices\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Order 2 tensors are matrices",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 12,
          "function_name": "main",
          "code": "einops_review()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 36,
          "function_name": "einops_review",
          "code": "text(\"A tensor has an order number of **axes**.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "A tensor has an order number of **axes**.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 12,
          "function_name": "main",
          "code": "einops_review()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 37,
          "function_name": "einops_review",
          "code": "text(\"For order 2 tensors (matrices):\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "For order 2 tensors (matrices):",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 12,
          "function_name": "main",
          "code": "einops_review()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 38,
          "function_name": "einops_review",
          "code": "text(\"- Axis 0 corresponds to rows\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Axis 0 corresponds to rows",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 12,
          "function_name": "main",
          "code": "einops_review()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 39,
          "function_name": "einops_review",
          "code": "text(\"- Axis 1 corresponds to columns\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Axis 1 corresponds to columns",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 12,
          "function_name": "main",
          "code": "einops_review()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 41,
          "function_name": "einops_review",
          "code": "text(\"In einops, we name the axes of each tensor\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "In einops, we name the axes of each tensor",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 12,
          "function_name": "main",
          "code": "einops_review()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 42,
          "function_name": "einops_review",
          "code": "text(\"- Choose name based on what that axis represents (just like variable names in code)\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Choose name based on what that axis represents (just like variable names in code)",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 12,
          "function_name": "main",
          "code": "einops_review()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 43,
          "function_name": "einops_review",
          "code": "text(\"- Example: for a matrix where rows are data points, axes names: example, feature\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Example: for a matrix where rows are data points, axes names: example, feature",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 12,
          "function_name": "main",
          "code": "einops_review()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 44,
          "function_name": "einops_review",
          "code": "text(\"- einsum is a single function that can do a lot of different things\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- einsum is a single function that can do a lot of different things",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 12,
          "function_name": "main",
          "code": "einops_review()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 46,
          "function_name": "einops_review",
          "code": "text(\"Now let's play around with some basic einsum examples.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Now let's play around with some basic einsum examples.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 12,
          "function_name": "main",
          "code": "einops_review()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 48,
          "function_name": "einops_review",
          "code": "text(\"Start with operations on vectors.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Start with operations on vectors.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 12,
          "function_name": "main",
          "code": "einops_review()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 49,
          "function_name": "einops_review",
          "code": "x = np.array([0, 1, 10])  # @inspect x"
        }
      ],
      "env": {
        "x": {
          "type": "numpy.ndarray",
          "contents": [
            0,
            1,
            10
          ],
          "dtype": "int64",
          "shape": [
            3
          ]
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 12,
          "function_name": "main",
          "code": "einops_review()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 52,
          "function_name": "einops_review",
          "code": "y = einsum(x, \"i -> i\")  # @inspect y"
        }
      ],
      "env": {
        "y": {
          "type": "numpy.ndarray",
          "contents": [
            0,
            1,
            10
          ],
          "dtype": "int64",
          "shape": [
            3
          ]
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 12,
          "function_name": "main",
          "code": "einops_review()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 55,
          "function_name": "einops_review",
          "code": "y = einsum(x, \"i ->\")  # @inspect y"
        }
      ],
      "env": {
        "y": {
          "type": "numpy.int64",
          "contents": 11,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 12,
          "function_name": "main",
          "code": "einops_review()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 58,
          "function_name": "einops_review",
          "code": "y = einsum(x, x, \"i, i -> i\")  # @inspect y"
        }
      ],
      "env": {
        "y": {
          "type": "numpy.ndarray",
          "contents": [
            0,
            1,
            100
          ],
          "dtype": "int64",
          "shape": [
            3
          ]
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 12,
          "function_name": "main",
          "code": "einops_review()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 61,
          "function_name": "einops_review",
          "code": "y = einsum(x, x, \"i, i ->\")  # @inspect y"
        }
      ],
      "env": {
        "y": {
          "type": "numpy.int64",
          "contents": 101,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 12,
          "function_name": "main",
          "code": "einops_review()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 64,
          "function_name": "einops_review",
          "code": "y = einsum(x, x, \"i, j -> i j\")  # @inspect y"
        }
      ],
      "env": {
        "y": {
          "type": "numpy.ndarray",
          "contents": [
            [
              0,
              0,
              0
            ],
            [
              0,
              1,
              10
            ],
            [
              0,
              10,
              100
            ]
          ],
          "dtype": "int64",
          "shape": [
            3,
            3
          ]
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 12,
          "function_name": "main",
          "code": "einops_review()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 67,
          "function_name": "einops_review",
          "code": "y = einsum(x, x, x, \"i, i, i -> i\")  # @inspect y"
        }
      ],
      "env": {
        "y": {
          "type": "numpy.ndarray",
          "contents": [
            0,
            1,
            1000
          ],
          "dtype": "int64",
          "shape": [
            3
          ]
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 12,
          "function_name": "main",
          "code": "einops_review()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 70,
          "function_name": "einops_review",
          "code": "y = einsum(x, x, x, \"i, j, k -> i j k\")  # @inspect y"
        }
      ],
      "env": {
        "y": {
          "type": "numpy.ndarray",
          "contents": [
            [
              [
                0,
                0,
                0
              ],
              [
                0,
                0,
                0
              ],
              [
                0,
                0,
                0
              ]
            ],
            [
              [
                0,
                0,
                0
              ],
              [
                0,
                1,
                10
              ],
              [
                0,
                10,
                100
              ]
            ],
            [
              [
                0,
                0,
                0
              ],
              [
                0,
                10,
                100
              ],
              [
                0,
                100,
                1000
              ]
            ]
          ],
          "dtype": "int64",
          "shape": [
            3,
            3,
            3
          ]
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 12,
          "function_name": "main",
          "code": "einops_review()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 72,
          "function_name": "einops_review",
          "code": "text(\"Now let's try operations on matrices.\")  # @clear y"
        }
      ],
      "env": {
        "y": null
      },
      "renderings": [
        {
          "type": "markdown",
          "data": "Now let's try operations on matrices.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 12,
          "function_name": "main",
          "code": "einops_review()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 73,
          "function_name": "einops_review",
          "code": "m = np.array([[0, 1, 2], [1, 10, 0]])  # @inspect m"
        }
      ],
      "env": {
        "m": {
          "type": "numpy.ndarray",
          "contents": [
            [
              0,
              1,
              2
            ],
            [
              1,
              10,
              0
            ]
          ],
          "dtype": "int64",
          "shape": [
            2,
            3
          ]
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 12,
          "function_name": "main",
          "code": "einops_review()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 76,
          "function_name": "einops_review",
          "code": "y = einsum(m, \"i j ->\")  # @inspect y"
        }
      ],
      "env": {
        "y": {
          "type": "numpy.int64",
          "contents": 14,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 12,
          "function_name": "main",
          "code": "einops_review()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 79,
          "function_name": "einops_review",
          "code": "y = einsum(m, \"i j -> i\")  # @inspect y"
        }
      ],
      "env": {
        "y": {
          "type": "numpy.ndarray",
          "contents": [
            3,
            11
          ],
          "dtype": "int64",
          "shape": [
            2
          ]
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 12,
          "function_name": "main",
          "code": "einops_review()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 82,
          "function_name": "einops_review",
          "code": "y = einsum(m, \"i j -> j\")  # @inspect y"
        }
      ],
      "env": {
        "y": {
          "type": "numpy.ndarray",
          "contents": [
            1,
            11,
            2
          ],
          "dtype": "int64",
          "shape": [
            3
          ]
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 12,
          "function_name": "main",
          "code": "einops_review()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 85,
          "function_name": "einops_review",
          "code": "y = einsum(m, \"i j -> j i\")  # @inspect y"
        }
      ],
      "env": {
        "y": {
          "type": "numpy.ndarray",
          "contents": [
            [
              0,
              1
            ],
            [
              1,
              10
            ],
            [
              2,
              0
            ]
          ],
          "dtype": "int64",
          "shape": [
            3,
            2
          ]
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 12,
          "function_name": "main",
          "code": "einops_review()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 88,
          "function_name": "einops_review",
          "code": "y = einsum(m, x, \"i j, j -> i\")  # @inspect y"
        }
      ],
      "env": {
        "y": {
          "type": "numpy.ndarray",
          "contents": [
            21,
            10
          ],
          "dtype": "int64",
          "shape": [
            2
          ]
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 12,
          "function_name": "main",
          "code": "einops_review()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 91,
          "function_name": "einops_review",
          "code": "y = einsum(m, m, \"i k, j k -> i j\")  # @inspect y"
        }
      ],
      "env": {
        "y": {
          "type": "numpy.ndarray",
          "contents": [
            [
              5,
              10
            ],
            [
              10,
              101
            ]
          ],
          "dtype": "int64",
          "shape": [
            2,
            2
          ]
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 12,
          "function_name": "main",
          "code": "einops_review()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 94,
          "function_name": "einops_review",
          "code": "y = einsum(m, m, \"k i, k j -> i j\")  # @inspect y"
        }
      ],
      "env": {
        "y": {
          "type": "numpy.ndarray",
          "contents": [
            [
              1,
              10,
              0
            ],
            [
              10,
              101,
              2
            ],
            [
              0,
              2,
              4
            ]
          ],
          "dtype": "int64",
          "shape": [
            3,
            3
          ]
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 12,
          "function_name": "main",
          "code": "einops_review()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 96,
          "function_name": "einops_review",
          "code": "text(\"General setup:\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "General setup:",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 12,
          "function_name": "main",
          "code": "einops_review()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 97,
          "function_name": "einops_review",
          "code": "text(\"- Input: a list of tensors with named input axes (potentially overlapping)\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Input: a list of tensors with named input axes (potentially overlapping)",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 12,
          "function_name": "main",
          "code": "einops_review()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 98,
          "function_name": "einops_review",
          "code": "text(\"- Output: a tensor with a list of named output axes (a subset of the input axes)\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Output: a tensor with a list of named output axes (a subset of the input axes)",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 12,
          "function_name": "main",
          "code": "einops_review()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 99,
          "function_name": "einops_review",
          "code": "text(\"For each assignment of the input axes (e.g., (i, j, k) = (0, 2, 1)):\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "For each assignment of the input axes (e.g., (i, j, k) = (0, 2, 1)):",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 12,
          "function_name": "main",
          "code": "einops_review()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 100,
          "function_name": "einops_review",
          "code": "text(\"- Multiply the corresponding element of the tensors (e.g., m[k][i] * m[k][j])\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Multiply the corresponding element of the tensors (e.g., m[k][i] * m[k][j])",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 12,
          "function_name": "main",
          "code": "einops_review()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 101,
          "function_name": "einops_review",
          "code": "text(\"- Add this to the corresponding element of the output tensor (e.g., y[i][j])\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Add this to the corresponding element of the output tensor (e.g., y[i][j])",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 12,
          "function_name": "main",
          "code": "einops_review()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 103,
          "function_name": "einops_review",
          "code": "text(\"It's all just additions and multiplications with bookkeeping!\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "It's all just additions and multiplications with bookkeeping!",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 12,
          "function_name": "main",
          "code": "einops_review()"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 14,
          "function_name": "main",
          "code": "text(\"This unit: **gradients**\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "This unit: **gradients**",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 15,
          "function_name": "main",
          "code": "text(\"- Define objective functions by composing tensor operations\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Define objective functions by composing tensor operations",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 16,
          "function_name": "main",
          "code": "text(\"- Gradients of objective functions tell us how to improve the function\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Gradients of objective functions tell us how to improve the function",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 17,
          "function_name": "main",
          "code": "text(\"- Computation graphs allow us to compute gradients efficiently\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Computation graphs allow us to compute gradients efficiently",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 19,
          "function_name": "main",
          "code": "motivation()"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 19,
          "function_name": "main",
          "code": "motivation()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 106,
          "function_name": "motivation",
          "code": "def motivation():"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 19,
          "function_name": "main",
          "code": "motivation()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 107,
          "function_name": "motivation",
          "code": "text(\"Let us start with linear regression example.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Let us start with linear regression example.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 19,
          "function_name": "main",
          "code": "motivation()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 108,
          "function_name": "motivation",
          "code": "text(\"For now, focus on the tensor mechanics and don't worry about the machine learning.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "For now, focus on the tensor mechanics and don't worry about the machine learning.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 19,
          "function_name": "main",
          "code": "motivation()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 110,
          "function_name": "motivation",
          "code": "x = np.array([[1, 2, 0], [0, -1, 1]])  # n x d matrix @inspect x"
        }
      ],
      "env": {
        "x": {
          "type": "numpy.ndarray",
          "contents": [
            [
              1,
              2,
              0
            ],
            [
              0,
              -1,
              1
            ]
          ],
          "dtype": "int64",
          "shape": [
            2,
            3
          ]
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 19,
          "function_name": "main",
          "code": "motivation()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 111,
          "function_name": "motivation",
          "code": "y = np.array([0, 3])  # n vector of targets @inspect y"
        }
      ],
      "env": {
        "y": {
          "type": "numpy.ndarray",
          "contents": [
            0,
            3
          ],
          "dtype": "int64",
          "shape": [
            2
          ]
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 19,
          "function_name": "main",
          "code": "motivation()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 112,
          "function_name": "motivation",
          "code": "w = np.array([1, 0, 1])  # d vector of weights @inspect w"
        }
      ],
      "env": {
        "w": {
          "type": "numpy.ndarray",
          "contents": [
            1,
            0,
            1
          ],
          "dtype": "int64",
          "shape": [
            3
          ]
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 19,
          "function_name": "main",
          "code": "motivation()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 114,
          "function_name": "motivation",
          "code": "text(\"We can build new tensors by applying various operations:\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "We can build new tensors by applying various operations:",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 19,
          "function_name": "main",
          "code": "motivation()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 115,
          "function_name": "motivation",
          "code": "predictions = x @ w   # multiplication -> n vector of predictions @inspect predictions"
        }
      ],
      "env": {
        "predictions": {
          "type": "numpy.ndarray",
          "contents": [
            1,
            1
          ],
          "dtype": "int64",
          "shape": [
            2
          ]
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 19,
          "function_name": "main",
          "code": "motivation()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 116,
          "function_name": "motivation",
          "code": "residuals = predictions - y   # elementwise subtraction -> n vector of residuals @inspect residuals"
        }
      ],
      "env": {
        "residuals": {
          "type": "numpy.ndarray",
          "contents": [
            1,
            -2
          ],
          "dtype": "int64",
          "shape": [
            2
          ]
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 19,
          "function_name": "main",
          "code": "motivation()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 117,
          "function_name": "motivation",
          "code": "losses = residuals ** 2  # elementwise power @inspect losses"
        }
      ],
      "env": {
        "losses": {
          "type": "numpy.ndarray",
          "contents": [
            1,
            4
          ],
          "dtype": "int64",
          "shape": [
            2
          ]
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 19,
          "function_name": "main",
          "code": "motivation()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 118,
          "function_name": "motivation",
          "code": "total_loss = np.sum(losses)  # sum all elements @inspect total_loss"
        }
      ],
      "env": {
        "total_loss": {
          "type": "numpy.int64",
          "contents": 5,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 19,
          "function_name": "main",
          "code": "motivation()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 120,
          "function_name": "motivation",
          "code": "text(\"Define an **objective** function that takes an vector input and returns a scalar output.\") # @clear predictions residuals losses total_loss w"
        }
      ],
      "env": {
        "predictions": null,
        "residuals": null,
        "losses": null,
        "total_loss": null,
        "w": null
      },
      "renderings": [
        {
          "type": "markdown",
          "data": "Define an **objective** function that takes an vector input and returns a scalar output.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 19,
          "function_name": "main",
          "code": "motivation()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 121,
          "function_name": "motivation",
          "code": "def objective(w: np.ndarray) -> float:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 19,
          "function_name": "main",
          "code": "motivation()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 124,
          "function_name": "motivation",
          "code": "text(\"For each value of `w`, we can compute the objective.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "For each value of `w`, we can compute the objective.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 19,
          "function_name": "main",
          "code": "motivation()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 125,
          "function_name": "motivation",
          "code": "loss = objective(np.array([1, 0, 1]))  # @inspect loss @stepover"
        }
      ],
      "env": {
        "loss": {
          "type": "numpy.int64",
          "contents": 5,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 19,
          "function_name": "main",
          "code": "motivation()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 126,
          "function_name": "motivation",
          "code": "loss = objective(np.array([1, 0, -1]))  # @inspect loss @stepover"
        }
      ],
      "env": {
        "loss": {
          "type": "numpy.int64",
          "contents": 17,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 19,
          "function_name": "main",
          "code": "motivation()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 128,
          "function_name": "motivation",
          "code": "text(\"Ultimate goal is to find `w` that minimizes `objective(w)`.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Ultimate goal is to find `w` that minimizes `objective(w)`.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 19,
          "function_name": "main",
          "code": "motivation()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 129,
          "function_name": "motivation",
          "code": "text(\"For now: given a fixed `w`, how should we tweak `w` to improve `objective(w)`?\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "For now: given a fixed `w`, how should we tweak `w` to improve `objective(w)`?",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 19,
          "function_name": "main",
          "code": "motivation()"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 132,
          "function_name": "gradients",
          "code": "def gradients():"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 133,
          "function_name": "gradients",
          "code": "text(\"Recall from your multivariable calculus course:\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Recall from your multivariable calculus course:",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 134,
          "function_name": "gradients",
          "code": "text(\"The **gradient** of a function tell us the direction that decreases the function the most.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "The **gradient** of a function tell us the direction that decreases the function the most.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 136,
          "function_name": "gradients",
          "code": "text(\"Example use cases:\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Example use cases:",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 137,
          "function_name": "gradients",
          "code": "text(\"- Optimizing the parameters of a deep learning model\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Optimizing the parameters of a deep learning model",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 138,
          "function_name": "gradients",
          "code": "text(\"- Optimizing the input (an image) that maximizes error (adversarial examples)\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Optimizing the input (an image) that maximizes error (adversarial examples)",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 139,
          "function_name": "gradients",
          "code": "text(\"- Optimizing the relative proportions over datasets\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Optimizing the relative proportions over datasets",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 141,
          "function_name": "gradients",
          "code": "example_1d()"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 141,
          "function_name": "gradients",
          "code": "example_1d()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 151,
          "function_name": "example_1d",
          "code": "def example_1d():"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 141,
          "function_name": "gradients",
          "code": "example_1d()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 152,
          "function_name": "example_1d",
          "code": "text(\"Consider a simple scalar function:\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Consider a simple scalar function:",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 141,
          "function_name": "gradients",
          "code": "example_1d()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 153,
          "function_name": "example_1d",
          "code": "def f(x: float) -> float:  # @inspect x"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 141,
          "function_name": "gradients",
          "code": "example_1d()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 156,
          "function_name": "example_1d",
          "code": "text(\"Plot the function by passing in a range of inputs.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Plot the function by passing in a range of inputs.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 141,
          "function_name": "gradients",
          "code": "example_1d()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 157,
          "function_name": "example_1d",
          "code": "values = [{\"x\": x, \"y\": f(x)} for x in np.linspace(-2, 2, 30)]  # @stepover @inspect values"
        }
      ],
      "env": {
        "values": {
          "type": "list",
          "contents": [
            {
              "type": "dict",
              "contents": {
                "x": {
                  "type": "numpy.float64",
                  "contents": -2.0,
                  "dtype": null,
                  "shape": null
                },
                "y": {
                  "type": "numpy.float64",
                  "contents": 4.0,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "dict",
              "contents": {
                "x": {
                  "type": "numpy.float64",
                  "contents": -1.8620689655172413,
                  "dtype": null,
                  "shape": null
                },
                "y": {
                  "type": "numpy.float64",
                  "contents": 3.4673008323424495,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "dict",
              "contents": {
                "x": {
                  "type": "numpy.float64",
                  "contents": -1.7241379310344827,
                  "dtype": null,
                  "shape": null
                },
                "y": {
                  "type": "numpy.float64",
                  "contents": 2.9726516052318663,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "dict",
              "contents": {
                "x": {
                  "type": "numpy.float64",
                  "contents": -1.5862068965517242,
                  "dtype": null,
                  "shape": null
                },
                "y": {
                  "type": "numpy.float64",
                  "contents": 2.5160523186682524,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "dict",
              "contents": {
                "x": {
                  "type": "numpy.float64",
                  "contents": -1.4482758620689655,
                  "dtype": null,
                  "shape": null
                },
                "y": {
                  "type": "numpy.float64",
                  "contents": 2.0975029726516055,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "dict",
              "contents": {
                "x": {
                  "type": "numpy.float64",
                  "contents": -1.3103448275862069,
                  "dtype": null,
                  "shape": null
                },
                "y": {
                  "type": "numpy.float64",
                  "contents": 1.7170035671819261,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "dict",
              "contents": {
                "x": {
                  "type": "numpy.float64",
                  "contents": -1.1724137931034484,
                  "dtype": null,
                  "shape": null
                },
                "y": {
                  "type": "numpy.float64",
                  "contents": 1.3745541022592156,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "dict",
              "contents": {
                "x": {
                  "type": "numpy.float64",
                  "contents": -1.0344827586206897,
                  "dtype": null,
                  "shape": null
                },
                "y": {
                  "type": "numpy.float64",
                  "contents": 1.0701545778834722,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "dict",
              "contents": {
                "x": {
                  "type": "numpy.float64",
                  "contents": -0.896551724137931,
                  "dtype": null,
                  "shape": null
                },
                "y": {
                  "type": "numpy.float64",
                  "contents": 0.8038049940546969,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "dict",
              "contents": {
                "x": {
                  "type": "numpy.float64",
                  "contents": -0.7586206896551724,
                  "dtype": null,
                  "shape": null
                },
                "y": {
                  "type": "numpy.float64",
                  "contents": 0.5755053507728893,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "dict",
              "contents": {
                "x": {
                  "type": "numpy.float64",
                  "contents": -0.6206896551724137,
                  "dtype": null,
                  "shape": null
                },
                "y": {
                  "type": "numpy.float64",
                  "contents": 0.38525564803804985,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "dict",
              "contents": {
                "x": {
                  "type": "numpy.float64",
                  "contents": -0.48275862068965525,
                  "dtype": null,
                  "shape": null
                },
                "y": {
                  "type": "numpy.float64",
                  "contents": 0.23305588585017845,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "dict",
              "contents": {
                "x": {
                  "type": "numpy.float64",
                  "contents": -0.3448275862068966,
                  "dtype": null,
                  "shape": null
                },
                "y": {
                  "type": "numpy.float64",
                  "contents": 0.11890606420927469,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "dict",
              "contents": {
                "x": {
                  "type": "numpy.float64",
                  "contents": -0.2068965517241379,
                  "dtype": null,
                  "shape": null
                },
                "y": {
                  "type": "numpy.float64",
                  "contents": 0.04280618311533887,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "dict",
              "contents": {
                "x": {
                  "type": "numpy.float64",
                  "contents": -0.06896551724137945,
                  "dtype": null,
                  "shape": null
                },
                "y": {
                  "type": "numpy.float64",
                  "contents": 0.004756242568371006,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "dict",
              "contents": {
                "x": {
                  "type": "numpy.float64",
                  "contents": 0.06896551724137945,
                  "dtype": null,
                  "shape": null
                },
                "y": {
                  "type": "numpy.float64",
                  "contents": 0.004756242568371006,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "dict",
              "contents": {
                "x": {
                  "type": "numpy.float64",
                  "contents": 0.2068965517241379,
                  "dtype": null,
                  "shape": null
                },
                "y": {
                  "type": "numpy.float64",
                  "contents": 0.04280618311533887,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "dict",
              "contents": {
                "x": {
                  "type": "numpy.float64",
                  "contents": 0.34482758620689635,
                  "dtype": null,
                  "shape": null
                },
                "y": {
                  "type": "numpy.float64",
                  "contents": 0.11890606420927453,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "dict",
              "contents": {
                "x": {
                  "type": "numpy.float64",
                  "contents": 0.48275862068965525,
                  "dtype": null,
                  "shape": null
                },
                "y": {
                  "type": "numpy.float64",
                  "contents": 0.23305588585017845,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "dict",
              "contents": {
                "x": {
                  "type": "numpy.float64",
                  "contents": 0.6206896551724137,
                  "dtype": null,
                  "shape": null
                },
                "y": {
                  "type": "numpy.float64",
                  "contents": 0.38525564803804985,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "dict",
              "contents": {
                "x": {
                  "type": "numpy.float64",
                  "contents": 0.7586206896551726,
                  "dtype": null,
                  "shape": null
                },
                "y": {
                  "type": "numpy.float64",
                  "contents": 0.5755053507728897,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "dict",
              "contents": {
                "x": {
                  "type": "numpy.float64",
                  "contents": 0.896551724137931,
                  "dtype": null,
                  "shape": null
                },
                "y": {
                  "type": "numpy.float64",
                  "contents": 0.8038049940546969,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "dict",
              "contents": {
                "x": {
                  "type": "numpy.float64",
                  "contents": 1.0344827586206895,
                  "dtype": null,
                  "shape": null
                },
                "y": {
                  "type": "numpy.float64",
                  "contents": 1.0701545778834718,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "dict",
              "contents": {
                "x": {
                  "type": "numpy.float64",
                  "contents": 1.1724137931034484,
                  "dtype": null,
                  "shape": null
                },
                "y": {
                  "type": "numpy.float64",
                  "contents": 1.3745541022592156,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "dict",
              "contents": {
                "x": {
                  "type": "numpy.float64",
                  "contents": 1.3103448275862069,
                  "dtype": null,
                  "shape": null
                },
                "y": {
                  "type": "numpy.float64",
                  "contents": 1.7170035671819261,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "dict",
              "contents": {
                "x": {
                  "type": "numpy.float64",
                  "contents": 1.4482758620689653,
                  "dtype": null,
                  "shape": null
                },
                "y": {
                  "type": "numpy.float64",
                  "contents": 2.0975029726516046,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "dict",
              "contents": {
                "x": {
                  "type": "numpy.float64",
                  "contents": 1.5862068965517242,
                  "dtype": null,
                  "shape": null
                },
                "y": {
                  "type": "numpy.float64",
                  "contents": 2.5160523186682524,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "dict",
              "contents": {
                "x": {
                  "type": "numpy.float64",
                  "contents": 1.7241379310344827,
                  "dtype": null,
                  "shape": null
                },
                "y": {
                  "type": "numpy.float64",
                  "contents": 2.9726516052318663,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "dict",
              "contents": {
                "x": {
                  "type": "numpy.float64",
                  "contents": 1.862068965517241,
                  "dtype": null,
                  "shape": null
                },
                "y": {
                  "type": "numpy.float64",
                  "contents": 3.4673008323424486,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            },
            {
              "type": "dict",
              "contents": {
                "x": {
                  "type": "numpy.float64",
                  "contents": 2.0,
                  "dtype": null,
                  "shape": null
                },
                "y": {
                  "type": "numpy.float64",
                  "contents": 4.0,
                  "dtype": null,
                  "shape": null
                }
              },
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 141,
          "function_name": "gradients",
          "code": "example_1d()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 158,
          "function_name": "example_1d",
          "code": "plot(Chart(Data(values=values)).mark_line().encode(x=\"x:Q\", y=\"y:Q\").to_dict())  # @clear values"
        }
      ],
      "env": {
        "values": null
      },
      "renderings": [
        {
          "type": "plot",
          "data": {
            "config": {
              "view": {
                "continuousWidth": 300,
                "continuousHeight": 300
              }
            },
            "data": {
              "values": [
                {
                  "x": -2.0,
                  "y": 4.0
                },
                {
                  "x": -1.8620689655172413,
                  "y": 3.4673008323424495
                },
                {
                  "x": -1.7241379310344827,
                  "y": 2.9726516052318663
                },
                {
                  "x": -1.5862068965517242,
                  "y": 2.5160523186682524
                },
                {
                  "x": -1.4482758620689655,
                  "y": 2.0975029726516055
                },
                {
                  "x": -1.3103448275862069,
                  "y": 1.7170035671819261
                },
                {
                  "x": -1.1724137931034484,
                  "y": 1.3745541022592156
                },
                {
                  "x": -1.0344827586206897,
                  "y": 1.0701545778834722
                },
                {
                  "x": -0.896551724137931,
                  "y": 0.8038049940546969
                },
                {
                  "x": -0.7586206896551724,
                  "y": 0.5755053507728893
                },
                {
                  "x": -0.6206896551724137,
                  "y": 0.38525564803804985
                },
                {
                  "x": -0.48275862068965525,
                  "y": 0.23305588585017845
                },
                {
                  "x": -0.3448275862068966,
                  "y": 0.11890606420927469
                },
                {
                  "x": -0.2068965517241379,
                  "y": 0.04280618311533887
                },
                {
                  "x": -0.06896551724137945,
                  "y": 0.004756242568371006
                },
                {
                  "x": 0.06896551724137945,
                  "y": 0.004756242568371006
                },
                {
                  "x": 0.2068965517241379,
                  "y": 0.04280618311533887
                },
                {
                  "x": 0.34482758620689635,
                  "y": 0.11890606420927453
                },
                {
                  "x": 0.48275862068965525,
                  "y": 0.23305588585017845
                },
                {
                  "x": 0.6206896551724137,
                  "y": 0.38525564803804985
                },
                {
                  "x": 0.7586206896551726,
                  "y": 0.5755053507728897
                },
                {
                  "x": 0.896551724137931,
                  "y": 0.8038049940546969
                },
                {
                  "x": 1.0344827586206895,
                  "y": 1.0701545778834718
                },
                {
                  "x": 1.1724137931034484,
                  "y": 1.3745541022592156
                },
                {
                  "x": 1.3103448275862069,
                  "y": 1.7170035671819261
                },
                {
                  "x": 1.4482758620689653,
                  "y": 2.0975029726516046
                },
                {
                  "x": 1.5862068965517242,
                  "y": 2.5160523186682524
                },
                {
                  "x": 1.7241379310344827,
                  "y": 2.9726516052318663
                },
                {
                  "x": 1.862068965517241,
                  "y": 3.4673008323424486
                },
                {
                  "x": 2.0,
                  "y": 4.0
                }
              ]
            },
            "mark": {
              "type": "line"
            },
            "encoding": {
              "x": {
                "field": "x",
                "type": "quantitative"
              },
              "y": {
                "field": "y",
                "type": "quantitative"
              }
            },
            "$schema": "https://vega.github.io/schema/vega-lite/v5.20.1.json"
          },
          "style": null,
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 141,
          "function_name": "gradients",
          "code": "example_1d()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 160,
          "function_name": "example_1d",
          "code": "text(\"If we change `x` slightly, how much does `f(x)` change?\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "If we change `x` slightly, how much does `f(x)` change?",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 141,
          "function_name": "gradients",
          "code": "example_1d()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 161,
          "function_name": "example_1d",
          "code": "dx = 1e-4"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 141,
          "function_name": "gradients",
          "code": "example_1d()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 162,
          "function_name": "example_1d",
          "code": "x = 1"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 141,
          "function_name": "gradients",
          "code": "example_1d()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 163,
          "function_name": "example_1d",
          "code": "y = f(x)  # @inspect y"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 141,
          "function_name": "gradients",
          "code": "example_1d()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 163,
          "function_name": "example_1d",
          "code": "y = f(x)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 153,
          "function_name": "f",
          "code": "def f(x: float) -> float:  # @inspect x"
        }
      ],
      "env": {
        "x": {
          "type": "int",
          "contents": 1,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 141,
          "function_name": "gradients",
          "code": "example_1d()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 163,
          "function_name": "example_1d",
          "code": "y = f(x)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 154,
          "function_name": "f",
          "code": "return x ** 2"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 141,
          "function_name": "gradients",
          "code": "example_1d()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 163,
          "function_name": "example_1d",
          "code": "y = f(x)  # @inspect y"
        }
      ],
      "env": {
        "y": {
          "type": "int",
          "contents": 1,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 141,
          "function_name": "gradients",
          "code": "example_1d()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 164,
          "function_name": "example_1d",
          "code": "new_y = f(x + dx)  # @inspect new_y"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 141,
          "function_name": "gradients",
          "code": "example_1d()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 164,
          "function_name": "example_1d",
          "code": "new_y = f(x + dx)  # @inspect new_y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 153,
          "function_name": "f",
          "code": "def f(x: float) -> float:  # @inspect x"
        }
      ],
      "env": {
        "x": {
          "type": "float",
          "contents": 1.0001,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 141,
          "function_name": "gradients",
          "code": "example_1d()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 164,
          "function_name": "example_1d",
          "code": "new_y = f(x + dx)  # @inspect new_y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 154,
          "function_name": "f",
          "code": "return x ** 2"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 141,
          "function_name": "gradients",
          "code": "example_1d()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 164,
          "function_name": "example_1d",
          "code": "new_y = f(x + dx)  # @inspect new_y"
        }
      ],
      "env": {
        "new_y": {
          "type": "float",
          "contents": 1.00020001,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 141,
          "function_name": "gradients",
          "code": "example_1d()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 165,
          "function_name": "example_1d",
          "code": "text(\"For each change dx, we get a change dy.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "For each change dx, we get a change dy.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 141,
          "function_name": "gradients",
          "code": "example_1d()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 166,
          "function_name": "example_1d",
          "code": "dy = (new_y - y) / dx  # @inspect dy"
        }
      ],
      "env": {
        "dy": {
          "type": "float",
          "contents": 2.000099999999172,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 141,
          "function_name": "gradients",
          "code": "example_1d()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 168,
          "function_name": "example_1d",
          "code": "text(\"As dx -> 0, this is the **derivative**, which we can analytically compute:\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "As dx -> 0, this is the **derivative**, which we can analytically compute:",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 141,
          "function_name": "gradients",
          "code": "example_1d()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 169,
          "function_name": "example_1d",
          "code": "def df(x: float) -> float:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 141,
          "function_name": "gradients",
          "code": "example_1d()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 171,
          "function_name": "example_1d",
          "code": "dy = df(x)  # @inspect dy @stepover"
        }
      ],
      "env": {
        "dy": {
          "type": "int",
          "contents": 2,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 141,
          "function_name": "gradients",
          "code": "example_1d()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 173,
          "function_name": "example_1d",
          "code": "text(\"Graphically, derivative is the slope of the tangent line at `x`.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Graphically, derivative is the slope of the tangent line at `x`.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 141,
          "function_name": "gradients",
          "code": "example_1d()"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 142,
          "function_name": "gradients",
          "code": "example_2d()"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 142,
          "function_name": "gradients",
          "code": "example_2d()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 176,
          "function_name": "example_2d",
          "code": "def example_2d():"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 142,
          "function_name": "gradients",
          "code": "example_2d()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 177,
          "function_name": "example_2d",
          "code": "text(\"Consider a function that takes 2 scalar inputs and outputs a scalar:\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Consider a function that takes 2 scalar inputs and outputs a scalar:",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 142,
          "function_name": "gradients",
          "code": "example_2d()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 178,
          "function_name": "example_2d",
          "code": "def f(x1: float, x2: float) -> float:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 142,
          "function_name": "gradients",
          "code": "example_2d()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 180,
          "function_name": "example_2d",
          "code": "y = f(1, 2)  # @inspect y"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 142,
          "function_name": "gradients",
          "code": "example_2d()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 180,
          "function_name": "example_2d",
          "code": "y = f(1, 2)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 178,
          "function_name": "f",
          "code": "def f(x1: float, x2: float) -> float:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 142,
          "function_name": "gradients",
          "code": "example_2d()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 180,
          "function_name": "example_2d",
          "code": "y = f(1, 2)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 179,
          "function_name": "f",
          "code": "return (x1 + x2) ** 2   # @inspect f"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 142,
          "function_name": "gradients",
          "code": "example_2d()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 180,
          "function_name": "example_2d",
          "code": "y = f(1, 2)  # @inspect y"
        }
      ],
      "env": {
        "y": {
          "type": "int",
          "contents": 9,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 142,
          "function_name": "gradients",
          "code": "example_2d()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 182,
          "function_name": "example_2d",
          "code": "text(\"Analytically compute the **partial derivative** for each input:\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Analytically compute the **partial derivative** for each input:",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 142,
          "function_name": "gradients",
          "code": "example_2d()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 183,
          "function_name": "example_2d",
          "code": "def df_dx1(x1: float, x2: float) -> float:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 142,
          "function_name": "gradients",
          "code": "example_2d()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 185,
          "function_name": "example_2d",
          "code": "def df_dx2(x1: float, x2: float) -> float:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 142,
          "function_name": "gradients",
          "code": "example_2d()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 188,
          "function_name": "example_2d",
          "code": "dy_x1 = df_dx1(1, 2)  # @inspect dy_x1"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 142,
          "function_name": "gradients",
          "code": "example_2d()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 188,
          "function_name": "example_2d",
          "code": "dy_x1 = df_dx1(1, 2)  # @inspect dy_x1"
        },
        {
          "path": "backpropagation.py",
          "line_number": 183,
          "function_name": "df_dx1",
          "code": "def df_dx1(x1: float, x2: float) -> float:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 142,
          "function_name": "gradients",
          "code": "example_2d()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 188,
          "function_name": "example_2d",
          "code": "dy_x1 = df_dx1(1, 2)  # @inspect dy_x1"
        },
        {
          "path": "backpropagation.py",
          "line_number": 184,
          "function_name": "df_dx1",
          "code": "return 2 * (x1 + x2) * 1"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 142,
          "function_name": "gradients",
          "code": "example_2d()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 188,
          "function_name": "example_2d",
          "code": "dy_x1 = df_dx1(1, 2)  # @inspect dy_x1"
        }
      ],
      "env": {
        "dy_x1": {
          "type": "int",
          "contents": 6,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 142,
          "function_name": "gradients",
          "code": "example_2d()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 189,
          "function_name": "example_2d",
          "code": "dy_x2 = df_dx2(1, 2)  # @inspect dy_x2"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 142,
          "function_name": "gradients",
          "code": "example_2d()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 189,
          "function_name": "example_2d",
          "code": "dy_x2 = df_dx2(1, 2)  # @inspect dy_x2"
        },
        {
          "path": "backpropagation.py",
          "line_number": 185,
          "function_name": "df_dx2",
          "code": "def df_dx2(x1: float, x2: float) -> float:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 142,
          "function_name": "gradients",
          "code": "example_2d()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 189,
          "function_name": "example_2d",
          "code": "dy_x2 = df_dx2(1, 2)  # @inspect dy_x2"
        },
        {
          "path": "backpropagation.py",
          "line_number": 186,
          "function_name": "df_dx2",
          "code": "return 2 * (x1 + x2) * 1"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 142,
          "function_name": "gradients",
          "code": "example_2d()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 189,
          "function_name": "example_2d",
          "code": "dy_x2 = df_dx2(1, 2)  # @inspect dy_x2"
        }
      ],
      "env": {
        "dy_x2": {
          "type": "int",
          "contents": 6,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 142,
          "function_name": "gradients",
          "code": "example_2d()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 191,
          "function_name": "example_2d",
          "code": "text(\"From (1, 2), moving in direction of (dy_x1, dy_x2) will increase f the most.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "From (1, 2), moving in direction of (dy_x1, dy_x2) will increase f the most.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 142,
          "function_name": "gradients",
          "code": "example_2d()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 192,
          "function_name": "example_2d",
          "code": "text(\"From (1, 2), moving in direction of -(dy_x1, dy_x2) will decrease f the most.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "From (1, 2), moving in direction of -(dy_x1, dy_x2) will decrease f the most.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 142,
          "function_name": "gradients",
          "code": "example_2d()"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 143,
          "function_name": "gradients",
          "code": "example_vector()"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 143,
          "function_name": "gradients",
          "code": "example_vector()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 195,
          "function_name": "example_vector",
          "code": "def example_vector():"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 143,
          "function_name": "gradients",
          "code": "example_vector()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 196,
          "function_name": "example_vector",
          "code": "text(\"Now let's consider a general vector function:\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Now let's consider a general vector function:",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 143,
          "function_name": "gradients",
          "code": "example_vector()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 197,
          "function_name": "example_vector",
          "code": "def f(x: np.ndarray):"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 143,
          "function_name": "gradients",
          "code": "example_vector()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 200,
          "function_name": "example_vector",
          "code": "text(\"Input a 2-dimensional vector, and output a scalar.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Input a 2-dimensional vector, and output a scalar.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 143,
          "function_name": "gradients",
          "code": "example_vector()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 201,
          "function_name": "example_vector",
          "code": "y = f(np.array([1, 2]))  # @inspect y @stepover"
        }
      ],
      "env": {
        "y": {
          "type": "numpy.int64",
          "contents": 9,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 143,
          "function_name": "gradients",
          "code": "example_vector()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 203,
          "function_name": "example_vector",
          "code": "text(\"We have a partial derivative, one for each dimension.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "We have a partial derivative, one for each dimension.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 143,
          "function_name": "gradients",
          "code": "example_vector()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 204,
          "function_name": "example_vector",
          "code": "text(\"- df/dx[0]: how much does f change if we change x[0]?\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- df/dx[0]: how much does f change if we change x[0]?",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 143,
          "function_name": "gradients",
          "code": "example_vector()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 205,
          "function_name": "example_vector",
          "code": "text(\"- df/dx[1]: how much does f change if we change x[1]?\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- df/dx[1]: how much does f change if we change x[1]?",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 143,
          "function_name": "gradients",
          "code": "example_vector()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 207,
          "function_name": "example_vector",
          "code": "text(\"The **gradient** is the vector of the partial derivatives:\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "The **gradient** is the vector of the partial derivatives:",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 143,
          "function_name": "gradients",
          "code": "example_vector()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 208,
          "function_name": "example_vector",
          "code": "text(\"- \u2207f = (df/dx[0], df/dx[1])\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- \u2207f = (df/dx[0], df/dx[1])",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 143,
          "function_name": "gradients",
          "code": "example_vector()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 210,
          "function_name": "example_vector",
          "code": "text(\"Let us analytically compute the gradient:\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Let us analytically compute the gradient:",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 143,
          "function_name": "gradients",
          "code": "example_vector()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 211,
          "function_name": "example_vector",
          "code": "def df(x: np.ndarray) -> np.ndarray:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 143,
          "function_name": "gradients",
          "code": "example_vector()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 213,
          "function_name": "example_vector",
          "code": "dy = df(np.array([1, 2]))  # @inspect dy @stepover"
        }
      ],
      "env": {
        "dy": {
          "type": "numpy.ndarray",
          "contents": [
            6,
            6
          ],
          "dtype": "int64",
          "shape": [
            2
          ]
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 143,
          "function_name": "gradients",
          "code": "example_vector()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 215,
          "function_name": "example_vector",
          "code": "text(\"These functions work for any number of dimensions:\") # @clear y dy"
        }
      ],
      "env": {
        "y": null,
        "dy": null
      },
      "renderings": [
        {
          "type": "markdown",
          "data": "These functions work for any number of dimensions:",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 143,
          "function_name": "gradients",
          "code": "example_vector()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 216,
          "function_name": "example_vector",
          "code": "y = f(np.array([1, 3, 0, -1]))  # @inspect y @stepover"
        }
      ],
      "env": {
        "y": {
          "type": "numpy.int64",
          "contents": 9,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 143,
          "function_name": "gradients",
          "code": "example_vector()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 217,
          "function_name": "example_vector",
          "code": "dy = df(np.array([1, 3, 0, -1]))  # @inspect dy @stepover"
        }
      ],
      "env": {
        "dy": {
          "type": "numpy.ndarray",
          "contents": [
            6,
            6,
            6,
            6
          ],
          "dtype": "int64",
          "shape": [
            4
          ]
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 143,
          "function_name": "gradients",
          "code": "example_vector()"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 145,
          "function_name": "gradients",
          "code": "text(\"Summary:\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Summary:",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 146,
          "function_name": "gradients",
          "code": "text(\"- Consider functions that take an input tensor and output a scalar.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Consider functions that take an input tensor and output a scalar.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 147,
          "function_name": "gradients",
          "code": "text(\"- Partial derivative measures how much the function changes when an element of the tensor changes.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Partial derivative measures how much the function changes when an element of the tensor changes.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 148,
          "function_name": "gradients",
          "code": "text(\"- Gradient is the full tensor of partial derivatives (same shape as input).\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Gradient is the full tensor of partial derivatives (same shape as input).",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 20,
          "function_name": "main",
          "code": "gradients()"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 220,
          "function_name": "computation_graphs",
          "code": "def computation_graphs():"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 221,
          "function_name": "computation_graphs",
          "code": "text(\"For any function, we can compute the gradient manually.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "For any function, we can compute the gradient manually.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 222,
          "function_name": "computation_graphs",
          "code": "text(\"This is tedious and error-prone.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "This is tedious and error-prone.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 224,
          "function_name": "computation_graphs",
          "code": "text(\"At the end of the day, even the most complex functions are composed out of basic operations.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "At the end of the day, even the most complex functions are composed out of basic operations.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 225,
          "function_name": "computation_graphs",
          "code": "text(\"- addition, multiplication, exp, log, etc.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- addition, multiplication, exp, log, etc.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 227,
          "function_name": "computation_graphs",
          "code": "text(\"Autodiff (specifically, reverse mode automatic differentation) \"), link(\"https://gwern.net/doc/ai/nn/1974-werbos.pdf\", title=\"Werbos 1974\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Autodiff (specifically, reverse mode automatic differentation) ",
          "style": {},
          "external_link": null,
          "internal_link": null
        },
        {
          "type": "link",
          "data": null,
          "style": {},
          "external_link": {
            "title": "Werbos 1974",
            "authors": null,
            "organization": null,
            "date": null,
            "url": "https://gwern.net/doc/ai/nn/1974-werbos.pdf",
            "description": null,
            "notes": null
          },
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 228,
          "function_name": "computation_graphs",
          "code": "text(\"- Build an explicit computation graph of the function\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Build an explicit computation graph of the function",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 229,
          "function_name": "computation_graphs",
          "code": "text(\"- Compute partial derivatives recursively by traversing the graph\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Compute partial derivatives recursively by traversing the graph",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 231,
          "function_name": "computation_graphs",
          "code": "text(\"Today, there are many libraries (PyTorch, JAX).\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Today, there are many libraries (PyTorch, JAX).",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 232,
          "function_name": "computation_graphs",
          "code": "text(\"We will implement a mini-PyTorch today.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "We will implement a mini-PyTorch today.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 245,
          "function_name": "computation_graphs_example",
          "code": "def computation_graphs_example():"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 246,
          "function_name": "computation_graphs_example",
          "code": "text(\"Let us build a computation graph for the following function:\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Let us build a computation graph for the following function:",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 247,
          "function_name": "computation_graphs_example",
          "code": "def f(x1: float, x2: float) -> float:"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 250,
          "function_name": "computation_graphs_example",
          "code": "x1 = Input(\"x1\", np.array(2.0))  # @inspect x1"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 250,
          "function_name": "computation_graphs_example",
          "code": "x1 = Input(\"x1\", np.array(2.0))  # @inspect x1"
        },
        {
          "path": "backpropagation.py",
          "line_number": 340,
          "function_name": "__init__",
          "code": "def __init__(self, name: str, value: float):"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 250,
          "function_name": "computation_graphs_example",
          "code": "x1 = Input(\"x1\", np.array(2.0))  # @inspect x1"
        },
        {
          "path": "backpropagation.py",
          "line_number": 341,
          "function_name": "__init__",
          "code": "super().__init__(name)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 250,
          "function_name": "computation_graphs_example",
          "code": "x1 = Input(\"x1\", np.array(2.0))  # @inspect x1"
        },
        {
          "path": "backpropagation.py",
          "line_number": 341,
          "function_name": "__init__",
          "code": "super().__init__(name)"
        },
        {
          "path": "backpropagation.py",
          "line_number": 315,
          "function_name": "__init__",
          "code": "def __init__(self, name: str, *dependencies):"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 250,
          "function_name": "computation_graphs_example",
          "code": "x1 = Input(\"x1\", np.array(2.0))  # @inspect x1"
        },
        {
          "path": "backpropagation.py",
          "line_number": 341,
          "function_name": "__init__",
          "code": "super().__init__(name)"
        },
        {
          "path": "backpropagation.py",
          "line_number": 316,
          "function_name": "__init__",
          "code": "self.name = name"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 250,
          "function_name": "computation_graphs_example",
          "code": "x1 = Input(\"x1\", np.array(2.0))  # @inspect x1"
        },
        {
          "path": "backpropagation.py",
          "line_number": 341,
          "function_name": "__init__",
          "code": "super().__init__(name)"
        },
        {
          "path": "backpropagation.py",
          "line_number": 317,
          "function_name": "__init__",
          "code": "self.dependencies = dependencies"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 250,
          "function_name": "computation_graphs_example",
          "code": "x1 = Input(\"x1\", np.array(2.0))  # @inspect x1"
        },
        {
          "path": "backpropagation.py",
          "line_number": 341,
          "function_name": "__init__",
          "code": "super().__init__(name)"
        },
        {
          "path": "backpropagation.py",
          "line_number": 318,
          "function_name": "__init__",
          "code": "self.value = None"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 250,
          "function_name": "computation_graphs_example",
          "code": "x1 = Input(\"x1\", np.array(2.0))  # @inspect x1"
        },
        {
          "path": "backpropagation.py",
          "line_number": 341,
          "function_name": "__init__",
          "code": "super().__init__(name)"
        },
        {
          "path": "backpropagation.py",
          "line_number": 319,
          "function_name": "__init__",
          "code": "self.grad = None"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 250,
          "function_name": "computation_graphs_example",
          "code": "x1 = Input(\"x1\", np.array(2.0))  # @inspect x1"
        },
        {
          "path": "backpropagation.py",
          "line_number": 341,
          "function_name": "__init__",
          "code": "super().__init__(name)"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 250,
          "function_name": "computation_graphs_example",
          "code": "x1 = Input(\"x1\", np.array(2.0))  # @inspect x1"
        },
        {
          "path": "backpropagation.py",
          "line_number": 342,
          "function_name": "__init__",
          "code": "self.value = value"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 250,
          "function_name": "computation_graphs_example",
          "code": "x1 = Input(\"x1\", np.array(2.0))  # @inspect x1"
        }
      ],
      "env": {
        "x1": {
          "type": "backpropagation.Input",
          "contents": {
            "name": {
              "type": "str",
              "contents": "x1",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.ndarray",
              "contents": 2.0,
              "dtype": "float64",
              "shape": []
            },
            "grad": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 251,
          "function_name": "computation_graphs_example",
          "code": "x2 = Input(\"x2\", np.array(3.0))  # @inspect x2 @stepover"
        }
      ],
      "env": {
        "x2": {
          "type": "backpropagation.Input",
          "contents": {
            "name": {
              "type": "str",
              "contents": "x2",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.ndarray",
              "contents": 3.0,
              "dtype": "float64",
              "shape": []
            },
            "grad": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 252,
          "function_name": "computation_graphs_example",
          "code": "sum = Add(\"sum\", x1, x2)  # @inspect sum  @stepover"
        }
      ],
      "env": {
        "sum": {
          "type": "backpropagation.Add",
          "contents": {
            "name": {
              "type": "str",
              "contents": "sum",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "x1",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": 2.0,
                      "dtype": "float64",
                      "shape": []
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "x2",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": 3.0,
                      "dtype": "float64",
                      "shape": []
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 253,
          "function_name": "computation_graphs_example",
          "code": "sum.forward()  # @inspect sum"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 253,
          "function_name": "computation_graphs_example",
          "code": "sum.forward()  # @inspect sum"
        },
        {
          "path": "backpropagation.py",
          "line_number": 355,
          "function_name": "forward",
          "code": "def forward(self):  # @inspect self"
        }
      ],
      "env": {
        "self": {
          "type": "backpropagation.Add",
          "contents": {
            "name": {
              "type": "str",
              "contents": "sum",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "x1",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": 2.0,
                      "dtype": "float64",
                      "shape": []
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "x2",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": 3.0,
                      "dtype": "float64",
                      "shape": []
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 253,
          "function_name": "computation_graphs_example",
          "code": "sum.forward()  # @inspect sum"
        },
        {
          "path": "backpropagation.py",
          "line_number": 356,
          "function_name": "forward",
          "code": "x, y = self.dependencies  # @inspect x.value y.value"
        }
      ],
      "env": {
        "x.value": {
          "type": "numpy.ndarray",
          "contents": 2.0,
          "dtype": "float64",
          "shape": []
        },
        "y.value": {
          "type": "numpy.ndarray",
          "contents": 3.0,
          "dtype": "float64",
          "shape": []
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 253,
          "function_name": "computation_graphs_example",
          "code": "sum.forward()  # @inspect sum"
        },
        {
          "path": "backpropagation.py",
          "line_number": 357,
          "function_name": "forward",
          "code": "self.value = x.value + y.value  # @inspect self"
        }
      ],
      "env": {
        "self": {
          "type": "backpropagation.Add",
          "contents": {
            "name": {
              "type": "str",
              "contents": "sum",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.float64",
              "contents": 5.0,
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "x1",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": 2.0,
                      "dtype": "float64",
                      "shape": []
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "x2",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": 3.0,
                      "dtype": "float64",
                      "shape": []
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 253,
          "function_name": "computation_graphs_example",
          "code": "sum.forward()  # @inspect sum"
        }
      ],
      "env": {
        "sum": {
          "type": "backpropagation.Add",
          "contents": {
            "name": {
              "type": "str",
              "contents": "sum",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.float64",
              "contents": 5.0,
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "x1",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": 2.0,
                      "dtype": "float64",
                      "shape": []
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "x2",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": 3.0,
                      "dtype": "float64",
                      "shape": []
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 254,
          "function_name": "computation_graphs_example",
          "code": "y = Squared(\"y\", sum)  # @inspect y @stepover @clear sum"
        }
      ],
      "env": {
        "y": {
          "type": "backpropagation.Squared",
          "contents": {
            "name": {
              "type": "str",
              "contents": "y",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "sum",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.float64",
                      "contents": 5.0,
                      "dtype": null,
                      "shape": null
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x1",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 2.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        },
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x2",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 3.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        },
        "sum": null
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 255,
          "function_name": "computation_graphs_example",
          "code": "y.forward()  # @inspect y"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 255,
          "function_name": "computation_graphs_example",
          "code": "y.forward()  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 391,
          "function_name": "forward",
          "code": "def forward(self):"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 255,
          "function_name": "computation_graphs_example",
          "code": "y.forward()  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 392,
          "function_name": "forward",
          "code": "x, = self.dependencies  # @inspect x.value"
        }
      ],
      "env": {
        "x.value": {
          "type": "numpy.float64",
          "contents": 5.0,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 255,
          "function_name": "computation_graphs_example",
          "code": "y.forward()  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 393,
          "function_name": "forward",
          "code": "self.value = x.value ** 2  # @inspect self.value"
        }
      ],
      "env": {
        "self.value": {
          "type": "numpy.float64",
          "contents": 25.0,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 255,
          "function_name": "computation_graphs_example",
          "code": "y.forward()  # @inspect y"
        }
      ],
      "env": {
        "y": {
          "type": "backpropagation.Squared",
          "contents": {
            "name": {
              "type": "str",
              "contents": "y",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.float64",
              "contents": 25.0,
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "sum",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.float64",
                      "contents": 5.0,
                      "dtype": null,
                      "shape": null
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x1",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 2.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        },
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x2",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 3.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 257,
          "function_name": "computation_graphs_example",
          "code": "text(\"Summary so far:\")  # @clear y"
        }
      ],
      "env": {
        "y": null
      },
      "renderings": [
        {
          "type": "markdown",
          "data": "Summary so far:",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 258,
          "function_name": "computation_graphs_example",
          "code": "text(\"- Each input (leaf) node represents some fixed value (e.g., `x1`).\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Each input (leaf) node represents some fixed value (e.g., `x1`).",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 259,
          "function_name": "computation_graphs_example",
          "code": "text(\"- Each non-input node represents a primitive computation performed on its dependencies.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Each non-input node represents a primitive computation performed on its dependencies.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 260,
          "function_name": "computation_graphs_example",
          "code": "text(\"- `forward()` computes the `value` of a node.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- `forward()` computes the `value` of a node.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 261,
          "function_name": "computation_graphs_example",
          "code": "text(\"- The result of the computation is at the root node (e.g., `y`)\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- The result of the computation is at the root node (e.g., `y`)",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 263,
          "function_name": "computation_graphs_example",
          "code": "text(\"Now we want to compute partial derivatives (e.g., `dy/dx1`).\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Now we want to compute partial derivatives (e.g., `dy/dx1`).",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 265,
          "function_name": "computation_graphs_example",
          "code": "text(\"Chain rule (from multivariable calculus):\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Chain rule (from multivariable calculus):",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 266,
          "function_name": "computation_graphs_example",
          "code": "image(\"images/chain_rule.png\", width=400)"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "image",
          "data": "images/chain_rule.png",
          "style": {
            "width": 400
          },
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 267,
          "function_name": "computation_graphs_example",
          "code": "link(\"https://stanford-cs221.github.io/autumn2023/modules/module.html#include=machine-learning%2Fbackpropagation.js&mode=print6pp\", title=\"Reference: Autumn 2023 slides\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "link",
          "data": null,
          "style": {},
          "external_link": {
            "title": "Reference: Autumn 2023 slides",
            "authors": null,
            "organization": null,
            "date": null,
            "url": "https://stanford-cs221.github.io/autumn2023/modules/module.html#include=machine-learning%2Fbackpropagation.js&mode=print6pp",
            "description": null,
            "notes": null
          },
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 269,
          "function_name": "computation_graphs_example",
          "code": "text(\"Let us compute dy/dx1.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Let us compute dy/dx1.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 270,
          "function_name": "computation_graphs_example",
          "code": "y.grad = np.ones_like(y.value)  # @inspect y"
        }
      ],
      "env": {
        "y": {
          "type": "backpropagation.Squared",
          "contents": {
            "name": {
              "type": "str",
              "contents": "y",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.float64",
              "contents": 25.0,
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "numpy.ndarray",
              "contents": 1.0,
              "dtype": "float64",
              "shape": []
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "sum",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.float64",
                      "contents": 5.0,
                      "dtype": null,
                      "shape": null
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x1",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 2.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        },
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x2",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 3.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 271,
          "function_name": "computation_graphs_example",
          "code": "sum.grad = np.zeros_like(sum.value)  # @inspect y"
        }
      ],
      "env": {
        "y": {
          "type": "backpropagation.Squared",
          "contents": {
            "name": {
              "type": "str",
              "contents": "y",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.float64",
              "contents": 25.0,
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "numpy.ndarray",
              "contents": 1.0,
              "dtype": "float64",
              "shape": []
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "sum",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.float64",
                      "contents": 5.0,
                      "dtype": null,
                      "shape": null
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": 0.0,
                      "dtype": "float64",
                      "shape": []
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x1",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 2.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        },
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x2",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 3.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 272,
          "function_name": "computation_graphs_example",
          "code": "x1.grad = np.zeros_like(x1.value)  # @inspect y"
        }
      ],
      "env": {
        "y": {
          "type": "backpropagation.Squared",
          "contents": {
            "name": {
              "type": "str",
              "contents": "y",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.float64",
              "contents": 25.0,
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "numpy.ndarray",
              "contents": 1.0,
              "dtype": "float64",
              "shape": []
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "sum",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.float64",
                      "contents": 5.0,
                      "dtype": null,
                      "shape": null
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": 0.0,
                      "dtype": "float64",
                      "shape": []
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x1",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 2.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": 0.0,
                              "dtype": "float64",
                              "shape": []
                            }
                          },
                          "dtype": null,
                          "shape": null
                        },
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x2",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 3.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 273,
          "function_name": "computation_graphs_example",
          "code": "x2.grad = np.zeros_like(x2.value)  # @inspect y"
        }
      ],
      "env": {
        "y": {
          "type": "backpropagation.Squared",
          "contents": {
            "name": {
              "type": "str",
              "contents": "y",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.float64",
              "contents": 25.0,
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "numpy.ndarray",
              "contents": 1.0,
              "dtype": "float64",
              "shape": []
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "sum",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.float64",
                      "contents": 5.0,
                      "dtype": null,
                      "shape": null
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": 0.0,
                      "dtype": "float64",
                      "shape": []
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x1",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 2.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": 0.0,
                              "dtype": "float64",
                              "shape": []
                            }
                          },
                          "dtype": null,
                          "shape": null
                        },
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x2",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 3.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": 0.0,
                              "dtype": "float64",
                              "shape": []
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 274,
          "function_name": "computation_graphs_example",
          "code": "y.backward()  # @inspect y"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 274,
          "function_name": "computation_graphs_example",
          "code": "y.backward()  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 395,
          "function_name": "backward",
          "code": "def backward(self):  # @inspect self"
        }
      ],
      "env": {
        "self": {
          "type": "backpropagation.Squared",
          "contents": {
            "name": {
              "type": "str",
              "contents": "y",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.float64",
              "contents": 25.0,
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "numpy.ndarray",
              "contents": 1.0,
              "dtype": "float64",
              "shape": []
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "sum",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.float64",
                      "contents": 5.0,
                      "dtype": null,
                      "shape": null
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": 0.0,
                      "dtype": "float64",
                      "shape": []
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x1",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 2.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": 0.0,
                              "dtype": "float64",
                              "shape": []
                            }
                          },
                          "dtype": null,
                          "shape": null
                        },
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x2",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 3.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": 0.0,
                              "dtype": "float64",
                              "shape": []
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 274,
          "function_name": "computation_graphs_example",
          "code": "y.backward()  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 396,
          "function_name": "backward",
          "code": "x, = self.dependencies"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 274,
          "function_name": "computation_graphs_example",
          "code": "y.backward()  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 397,
          "function_name": "backward",
          "code": "x.grad += 2 * x.value * self.grad  # @inspect self"
        }
      ],
      "env": {
        "self": {
          "type": "backpropagation.Squared",
          "contents": {
            "name": {
              "type": "str",
              "contents": "y",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.float64",
              "contents": 25.0,
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "numpy.ndarray",
              "contents": 1.0,
              "dtype": "float64",
              "shape": []
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "sum",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.float64",
                      "contents": 5.0,
                      "dtype": null,
                      "shape": null
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": 10.0,
                      "dtype": "float64",
                      "shape": []
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x1",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 2.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": 0.0,
                              "dtype": "float64",
                              "shape": []
                            }
                          },
                          "dtype": null,
                          "shape": null
                        },
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x2",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 3.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": 0.0,
                              "dtype": "float64",
                              "shape": []
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 274,
          "function_name": "computation_graphs_example",
          "code": "y.backward()  # @inspect y"
        }
      ],
      "env": {
        "y": {
          "type": "backpropagation.Squared",
          "contents": {
            "name": {
              "type": "str",
              "contents": "y",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.float64",
              "contents": 25.0,
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "numpy.ndarray",
              "contents": 1.0,
              "dtype": "float64",
              "shape": []
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "sum",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.float64",
                      "contents": 5.0,
                      "dtype": null,
                      "shape": null
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": 10.0,
                      "dtype": "float64",
                      "shape": []
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x1",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 2.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": 0.0,
                              "dtype": "float64",
                              "shape": []
                            }
                          },
                          "dtype": null,
                          "shape": null
                        },
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x2",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 3.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": 0.0,
                              "dtype": "float64",
                              "shape": []
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 275,
          "function_name": "computation_graphs_example",
          "code": "sum.backward()  # @inspect y"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 275,
          "function_name": "computation_graphs_example",
          "code": "sum.backward()  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 359,
          "function_name": "backward",
          "code": "def backward(self):  # @inspect self"
        }
      ],
      "env": {
        "self": {
          "type": "backpropagation.Add",
          "contents": {
            "name": {
              "type": "str",
              "contents": "sum",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.float64",
              "contents": 5.0,
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "numpy.ndarray",
              "contents": 10.0,
              "dtype": "float64",
              "shape": []
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "x1",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": 2.0,
                      "dtype": "float64",
                      "shape": []
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": 0.0,
                      "dtype": "float64",
                      "shape": []
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "x2",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": 3.0,
                      "dtype": "float64",
                      "shape": []
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": 0.0,
                      "dtype": "float64",
                      "shape": []
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 275,
          "function_name": "computation_graphs_example",
          "code": "sum.backward()  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 360,
          "function_name": "backward",
          "code": "x, y = self.dependencies"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 275,
          "function_name": "computation_graphs_example",
          "code": "sum.backward()  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 361,
          "function_name": "backward",
          "code": "x.grad += self.grad  # @inspect self"
        }
      ],
      "env": {
        "self": {
          "type": "backpropagation.Add",
          "contents": {
            "name": {
              "type": "str",
              "contents": "sum",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.float64",
              "contents": 5.0,
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "numpy.ndarray",
              "contents": 10.0,
              "dtype": "float64",
              "shape": []
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "x1",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": 2.0,
                      "dtype": "float64",
                      "shape": []
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": 10.0,
                      "dtype": "float64",
                      "shape": []
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "x2",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": 3.0,
                      "dtype": "float64",
                      "shape": []
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": 0.0,
                      "dtype": "float64",
                      "shape": []
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 275,
          "function_name": "computation_graphs_example",
          "code": "sum.backward()  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 362,
          "function_name": "backward",
          "code": "y.grad += self.grad  # @inspect self"
        }
      ],
      "env": {
        "self": {
          "type": "backpropagation.Add",
          "contents": {
            "name": {
              "type": "str",
              "contents": "sum",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.float64",
              "contents": 5.0,
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "numpy.ndarray",
              "contents": 10.0,
              "dtype": "float64",
              "shape": []
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "x1",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": 2.0,
                      "dtype": "float64",
                      "shape": []
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": 10.0,
                      "dtype": "float64",
                      "shape": []
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "x2",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": 3.0,
                      "dtype": "float64",
                      "shape": []
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": 10.0,
                      "dtype": "float64",
                      "shape": []
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 275,
          "function_name": "computation_graphs_example",
          "code": "sum.backward()  # @inspect y"
        }
      ],
      "env": {
        "y": {
          "type": "backpropagation.Squared",
          "contents": {
            "name": {
              "type": "str",
              "contents": "y",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.float64",
              "contents": 25.0,
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "numpy.ndarray",
              "contents": 1.0,
              "dtype": "float64",
              "shape": []
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "sum",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.float64",
                      "contents": 5.0,
                      "dtype": null,
                      "shape": null
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": 10.0,
                      "dtype": "float64",
                      "shape": []
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x1",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 2.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": 10.0,
                              "dtype": "float64",
                              "shape": []
                            }
                          },
                          "dtype": null,
                          "shape": null
                        },
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x2",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 3.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": 10.0,
                              "dtype": "float64",
                              "shape": []
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 277,
          "function_name": "computation_graphs_example",
          "code": "text(\"In general:\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "In general:",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 278,
          "function_name": "computation_graphs_example",
          "code": "text(\"- `node.backward()` updates the partial derivatives of the dependencies of `node`.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- `node.backward()` updates the partial derivatives of the dependencies of `node`.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 279,
          "function_name": "computation_graphs_example",
          "code": "text(\"- Assumes `node.grad` is computed and all `value`s are computed.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Assumes `node.grad` is computed and all `value`s are computed.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 234,
          "function_name": "computation_graphs",
          "code": "computation_graphs_example()"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 282,
          "function_name": "computation_graphs_general",
          "code": "def computation_graphs_general():"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 283,
          "function_name": "computation_graphs_general",
          "code": "text(\"Now let's define the **backpropagation** algorithm in full generality.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Now let's define the **backpropagation** algorithm in full generality.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 284,
          "function_name": "computation_graphs_general",
          "code": "text(\"- Traverse the graph from inputs (leaves) to the root and call `forward`\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Traverse the graph from inputs (leaves) to the root and call `forward`",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 285,
          "function_name": "computation_graphs_general",
          "code": "text(\"- Traverse the graph from root to inputs (leaves) and call `backward`.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Traverse the graph from root to inputs (leaves) and call `backward`.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 287,
          "function_name": "computation_graphs_general",
          "code": "text(\"Let's redo the same function from before.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Let's redo the same function from before.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 288,
          "function_name": "computation_graphs_general",
          "code": "x1 = Input(\"x1\", np.array(2.0))  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 289,
          "function_name": "computation_graphs_general",
          "code": "x2 = Input(\"x2\", np.array(3.0))  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 290,
          "function_name": "computation_graphs_general",
          "code": "sum = Add(\"sum\", x1, x2)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 291,
          "function_name": "computation_graphs_general",
          "code": "y = Squared(\"y\", sum)  # @inspect y @stepover"
        }
      ],
      "env": {
        "y": {
          "type": "backpropagation.Squared",
          "contents": {
            "name": {
              "type": "str",
              "contents": "y",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "sum",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x1",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 2.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        },
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x2",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 3.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 420,
          "function_name": "backpropagation",
          "code": "def backpropagation(root: Node):"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 422,
          "function_name": "backpropagation",
          "code": "nodes = topological_sort(root)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 423,
          "function_name": "backpropagation",
          "code": "order = [node.name for node in nodes]  # @inspect order @stepover"
        }
      ],
      "env": {
        "order": {
          "type": "list",
          "contents": [
            {
              "type": "str",
              "contents": "x1",
              "dtype": null,
              "shape": null
            },
            {
              "type": "str",
              "contents": "x2",
              "dtype": null,
              "shape": null
            },
            {
              "type": "str",
              "contents": "sum",
              "dtype": null,
              "shape": null
            },
            {
              "type": "str",
              "contents": "y",
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 426,
          "function_name": "backpropagation",
          "code": "for node in nodes:  # @inspect node.name"
        }
      ],
      "env": {
        "node.name": {
          "type": "str",
          "contents": "x1",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 344,
          "function_name": "forward",
          "code": "def forward(self):"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 346,
          "function_name": "forward",
          "code": "pass"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        }
      ],
      "env": {
        "root": {
          "type": "backpropagation.Squared",
          "contents": {
            "name": {
              "type": "str",
              "contents": "y",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "sum",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x1",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 2.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        },
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x2",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 3.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 426,
          "function_name": "backpropagation",
          "code": "for node in nodes:  # @inspect node.name"
        }
      ],
      "env": {
        "node.name": {
          "type": "str",
          "contents": "x2",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 344,
          "function_name": "forward",
          "code": "def forward(self):"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 346,
          "function_name": "forward",
          "code": "pass"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        }
      ],
      "env": {
        "root": {
          "type": "backpropagation.Squared",
          "contents": {
            "name": {
              "type": "str",
              "contents": "y",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "sum",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x1",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 2.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        },
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x2",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 3.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 426,
          "function_name": "backpropagation",
          "code": "for node in nodes:  # @inspect node.name"
        }
      ],
      "env": {
        "node.name": {
          "type": "str",
          "contents": "sum",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 355,
          "function_name": "forward",
          "code": "def forward(self):  # @inspect self"
        }
      ],
      "env": {
        "self": {
          "type": "backpropagation.Add",
          "contents": {
            "name": {
              "type": "str",
              "contents": "sum",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "x1",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": 2.0,
                      "dtype": "float64",
                      "shape": []
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "x2",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": 3.0,
                      "dtype": "float64",
                      "shape": []
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 356,
          "function_name": "forward",
          "code": "x, y = self.dependencies  # @inspect x.value y.value"
        }
      ],
      "env": {
        "x.value": {
          "type": "numpy.ndarray",
          "contents": 2.0,
          "dtype": "float64",
          "shape": []
        },
        "y.value": {
          "type": "numpy.ndarray",
          "contents": 3.0,
          "dtype": "float64",
          "shape": []
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 357,
          "function_name": "forward",
          "code": "self.value = x.value + y.value  # @inspect self"
        }
      ],
      "env": {
        "self": {
          "type": "backpropagation.Add",
          "contents": {
            "name": {
              "type": "str",
              "contents": "sum",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.float64",
              "contents": 5.0,
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "x1",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": 2.0,
                      "dtype": "float64",
                      "shape": []
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "x2",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": 3.0,
                      "dtype": "float64",
                      "shape": []
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        }
      ],
      "env": {
        "root": {
          "type": "backpropagation.Squared",
          "contents": {
            "name": {
              "type": "str",
              "contents": "y",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "sum",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.float64",
                      "contents": 5.0,
                      "dtype": null,
                      "shape": null
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x1",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 2.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        },
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x2",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 3.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 426,
          "function_name": "backpropagation",
          "code": "for node in nodes:  # @inspect node.name"
        }
      ],
      "env": {
        "node.name": {
          "type": "str",
          "contents": "y",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 391,
          "function_name": "forward",
          "code": "def forward(self):"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 392,
          "function_name": "forward",
          "code": "x, = self.dependencies  # @inspect x.value"
        }
      ],
      "env": {
        "x.value": {
          "type": "numpy.float64",
          "contents": 5.0,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 393,
          "function_name": "forward",
          "code": "self.value = x.value ** 2  # @inspect self.value"
        }
      ],
      "env": {
        "self.value": {
          "type": "numpy.float64",
          "contents": 25.0,
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        }
      ],
      "env": {
        "root": {
          "type": "backpropagation.Squared",
          "contents": {
            "name": {
              "type": "str",
              "contents": "y",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.float64",
              "contents": 25.0,
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "sum",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.float64",
                      "contents": 5.0,
                      "dtype": null,
                      "shape": null
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x1",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 2.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        },
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x2",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 3.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 426,
          "function_name": "backpropagation",
          "code": "for node in nodes:  # @inspect node.name"
        }
      ],
      "env": {
        "node.name": {
          "type": "str",
          "contents": "y",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 430,
          "function_name": "backpropagation",
          "code": "for node in nodes:  # @inspect node.name"
        }
      ],
      "env": {
        "node.name": {
          "type": "str",
          "contents": "x1",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 431,
          "function_name": "backpropagation",
          "code": "node.grad = np.zeros_like(node.value)  # @inspect root @stepover"
        }
      ],
      "env": {
        "root": {
          "type": "backpropagation.Squared",
          "contents": {
            "name": {
              "type": "str",
              "contents": "y",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.float64",
              "contents": 25.0,
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "sum",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.float64",
                      "contents": 5.0,
                      "dtype": null,
                      "shape": null
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x1",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 2.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": 0.0,
                              "dtype": "float64",
                              "shape": []
                            }
                          },
                          "dtype": null,
                          "shape": null
                        },
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x2",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 3.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 430,
          "function_name": "backpropagation",
          "code": "for node in nodes:  # @inspect node.name"
        }
      ],
      "env": {
        "node.name": {
          "type": "str",
          "contents": "x2",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 431,
          "function_name": "backpropagation",
          "code": "node.grad = np.zeros_like(node.value)  # @inspect root @stepover"
        }
      ],
      "env": {
        "root": {
          "type": "backpropagation.Squared",
          "contents": {
            "name": {
              "type": "str",
              "contents": "y",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.float64",
              "contents": 25.0,
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "sum",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.float64",
                      "contents": 5.0,
                      "dtype": null,
                      "shape": null
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x1",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 2.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": 0.0,
                              "dtype": "float64",
                              "shape": []
                            }
                          },
                          "dtype": null,
                          "shape": null
                        },
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x2",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 3.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": 0.0,
                              "dtype": "float64",
                              "shape": []
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 430,
          "function_name": "backpropagation",
          "code": "for node in nodes:  # @inspect node.name"
        }
      ],
      "env": {
        "node.name": {
          "type": "str",
          "contents": "sum",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 431,
          "function_name": "backpropagation",
          "code": "node.grad = np.zeros_like(node.value)  # @inspect root @stepover"
        }
      ],
      "env": {
        "root": {
          "type": "backpropagation.Squared",
          "contents": {
            "name": {
              "type": "str",
              "contents": "y",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.float64",
              "contents": 25.0,
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "sum",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.float64",
                      "contents": 5.0,
                      "dtype": null,
                      "shape": null
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": 0.0,
                      "dtype": "float64",
                      "shape": []
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x1",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 2.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": 0.0,
                              "dtype": "float64",
                              "shape": []
                            }
                          },
                          "dtype": null,
                          "shape": null
                        },
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x2",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 3.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": 0.0,
                              "dtype": "float64",
                              "shape": []
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 430,
          "function_name": "backpropagation",
          "code": "for node in nodes:  # @inspect node.name"
        }
      ],
      "env": {
        "node.name": {
          "type": "str",
          "contents": "y",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 431,
          "function_name": "backpropagation",
          "code": "node.grad = np.zeros_like(node.value)  # @inspect root @stepover"
        }
      ],
      "env": {
        "root": {
          "type": "backpropagation.Squared",
          "contents": {
            "name": {
              "type": "str",
              "contents": "y",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.float64",
              "contents": 25.0,
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "numpy.ndarray",
              "contents": 0.0,
              "dtype": "float64",
              "shape": []
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "sum",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.float64",
                      "contents": 5.0,
                      "dtype": null,
                      "shape": null
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": 0.0,
                      "dtype": "float64",
                      "shape": []
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x1",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 2.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": 0.0,
                              "dtype": "float64",
                              "shape": []
                            }
                          },
                          "dtype": null,
                          "shape": null
                        },
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x2",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 3.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": 0.0,
                              "dtype": "float64",
                              "shape": []
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 430,
          "function_name": "backpropagation",
          "code": "for node in nodes:  # @inspect node.name"
        }
      ],
      "env": {
        "node.name": {
          "type": "str",
          "contents": "y",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 433,
          "function_name": "backpropagation",
          "code": "root.grad = np.ones_like(root.value)  # @inspect root"
        }
      ],
      "env": {
        "root": {
          "type": "backpropagation.Squared",
          "contents": {
            "name": {
              "type": "str",
              "contents": "y",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.float64",
              "contents": 25.0,
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "numpy.ndarray",
              "contents": 1.0,
              "dtype": "float64",
              "shape": []
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "sum",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.float64",
                      "contents": 5.0,
                      "dtype": null,
                      "shape": null
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": 0.0,
                      "dtype": "float64",
                      "shape": []
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x1",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 2.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": 0.0,
                              "dtype": "float64",
                              "shape": []
                            }
                          },
                          "dtype": null,
                          "shape": null
                        },
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x2",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 3.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": 0.0,
                              "dtype": "float64",
                              "shape": []
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 436,
          "function_name": "backpropagation",
          "code": "for node in reversed(nodes):  # @inspect node.name"
        }
      ],
      "env": {
        "node.name": {
          "type": "str",
          "contents": "y",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 395,
          "function_name": "backward",
          "code": "def backward(self):  # @inspect self"
        }
      ],
      "env": {
        "self": {
          "type": "backpropagation.Squared",
          "contents": {
            "name": {
              "type": "str",
              "contents": "y",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.float64",
              "contents": 25.0,
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "numpy.ndarray",
              "contents": 1.0,
              "dtype": "float64",
              "shape": []
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "sum",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.float64",
                      "contents": 5.0,
                      "dtype": null,
                      "shape": null
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": 0.0,
                      "dtype": "float64",
                      "shape": []
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x1",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 2.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": 0.0,
                              "dtype": "float64",
                              "shape": []
                            }
                          },
                          "dtype": null,
                          "shape": null
                        },
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x2",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 3.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": 0.0,
                              "dtype": "float64",
                              "shape": []
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 396,
          "function_name": "backward",
          "code": "x, = self.dependencies"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 397,
          "function_name": "backward",
          "code": "x.grad += 2 * x.value * self.grad  # @inspect self"
        }
      ],
      "env": {
        "self": {
          "type": "backpropagation.Squared",
          "contents": {
            "name": {
              "type": "str",
              "contents": "y",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.float64",
              "contents": 25.0,
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "numpy.ndarray",
              "contents": 1.0,
              "dtype": "float64",
              "shape": []
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "sum",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.float64",
                      "contents": 5.0,
                      "dtype": null,
                      "shape": null
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": 10.0,
                      "dtype": "float64",
                      "shape": []
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x1",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 2.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": 0.0,
                              "dtype": "float64",
                              "shape": []
                            }
                          },
                          "dtype": null,
                          "shape": null
                        },
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x2",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 3.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": 0.0,
                              "dtype": "float64",
                              "shape": []
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        }
      ],
      "env": {
        "root": {
          "type": "backpropagation.Squared",
          "contents": {
            "name": {
              "type": "str",
              "contents": "y",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.float64",
              "contents": 25.0,
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "numpy.ndarray",
              "contents": 1.0,
              "dtype": "float64",
              "shape": []
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "sum",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.float64",
                      "contents": 5.0,
                      "dtype": null,
                      "shape": null
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": 10.0,
                      "dtype": "float64",
                      "shape": []
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x1",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 2.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": 0.0,
                              "dtype": "float64",
                              "shape": []
                            }
                          },
                          "dtype": null,
                          "shape": null
                        },
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x2",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 3.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": 0.0,
                              "dtype": "float64",
                              "shape": []
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 436,
          "function_name": "backpropagation",
          "code": "for node in reversed(nodes):  # @inspect node.name"
        }
      ],
      "env": {
        "node.name": {
          "type": "str",
          "contents": "sum",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 359,
          "function_name": "backward",
          "code": "def backward(self):  # @inspect self"
        }
      ],
      "env": {
        "self": {
          "type": "backpropagation.Add",
          "contents": {
            "name": {
              "type": "str",
              "contents": "sum",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.float64",
              "contents": 5.0,
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "numpy.ndarray",
              "contents": 10.0,
              "dtype": "float64",
              "shape": []
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "x1",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": 2.0,
                      "dtype": "float64",
                      "shape": []
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": 0.0,
                      "dtype": "float64",
                      "shape": []
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "x2",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": 3.0,
                      "dtype": "float64",
                      "shape": []
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": 0.0,
                      "dtype": "float64",
                      "shape": []
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 360,
          "function_name": "backward",
          "code": "x, y = self.dependencies"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 361,
          "function_name": "backward",
          "code": "x.grad += self.grad  # @inspect self"
        }
      ],
      "env": {
        "self": {
          "type": "backpropagation.Add",
          "contents": {
            "name": {
              "type": "str",
              "contents": "sum",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.float64",
              "contents": 5.0,
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "numpy.ndarray",
              "contents": 10.0,
              "dtype": "float64",
              "shape": []
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "x1",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": 2.0,
                      "dtype": "float64",
                      "shape": []
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": 10.0,
                      "dtype": "float64",
                      "shape": []
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "x2",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": 3.0,
                      "dtype": "float64",
                      "shape": []
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": 0.0,
                      "dtype": "float64",
                      "shape": []
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 362,
          "function_name": "backward",
          "code": "y.grad += self.grad  # @inspect self"
        }
      ],
      "env": {
        "self": {
          "type": "backpropagation.Add",
          "contents": {
            "name": {
              "type": "str",
              "contents": "sum",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.float64",
              "contents": 5.0,
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "numpy.ndarray",
              "contents": 10.0,
              "dtype": "float64",
              "shape": []
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "x1",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": 2.0,
                      "dtype": "float64",
                      "shape": []
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": 10.0,
                      "dtype": "float64",
                      "shape": []
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "x2",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": 3.0,
                      "dtype": "float64",
                      "shape": []
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": 10.0,
                      "dtype": "float64",
                      "shape": []
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        }
      ],
      "env": {
        "root": {
          "type": "backpropagation.Squared",
          "contents": {
            "name": {
              "type": "str",
              "contents": "y",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.float64",
              "contents": 25.0,
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "numpy.ndarray",
              "contents": 1.0,
              "dtype": "float64",
              "shape": []
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "sum",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.float64",
                      "contents": 5.0,
                      "dtype": null,
                      "shape": null
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": 10.0,
                      "dtype": "float64",
                      "shape": []
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x1",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 2.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": 10.0,
                              "dtype": "float64",
                              "shape": []
                            }
                          },
                          "dtype": null,
                          "shape": null
                        },
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x2",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 3.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": 10.0,
                              "dtype": "float64",
                              "shape": []
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 436,
          "function_name": "backpropagation",
          "code": "for node in reversed(nodes):  # @inspect node.name"
        }
      ],
      "env": {
        "node.name": {
          "type": "str",
          "contents": "x2",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 348,
          "function_name": "backward",
          "code": "def backward(self):"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 350,
          "function_name": "backward",
          "code": "pass"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        }
      ],
      "env": {
        "root": {
          "type": "backpropagation.Squared",
          "contents": {
            "name": {
              "type": "str",
              "contents": "y",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.float64",
              "contents": 25.0,
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "numpy.ndarray",
              "contents": 1.0,
              "dtype": "float64",
              "shape": []
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "sum",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.float64",
                      "contents": 5.0,
                      "dtype": null,
                      "shape": null
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": 10.0,
                      "dtype": "float64",
                      "shape": []
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x1",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 2.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": 10.0,
                              "dtype": "float64",
                              "shape": []
                            }
                          },
                          "dtype": null,
                          "shape": null
                        },
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x2",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 3.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": 10.0,
                              "dtype": "float64",
                              "shape": []
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 436,
          "function_name": "backpropagation",
          "code": "for node in reversed(nodes):  # @inspect node.name"
        }
      ],
      "env": {
        "node.name": {
          "type": "str",
          "contents": "x1",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 348,
          "function_name": "backward",
          "code": "def backward(self):"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 350,
          "function_name": "backward",
          "code": "pass"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        }
      ],
      "env": {
        "root": {
          "type": "backpropagation.Squared",
          "contents": {
            "name": {
              "type": "str",
              "contents": "y",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.float64",
              "contents": 25.0,
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "numpy.ndarray",
              "contents": 1.0,
              "dtype": "float64",
              "shape": []
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "sum",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.float64",
                      "contents": 5.0,
                      "dtype": null,
                      "shape": null
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": 10.0,
                      "dtype": "float64",
                      "shape": []
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x1",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 2.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": 10.0,
                              "dtype": "float64",
                              "shape": []
                            }
                          },
                          "dtype": null,
                          "shape": null
                        },
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x2",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 3.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": 10.0,
                              "dtype": "float64",
                              "shape": []
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        },
        {
          "path": "backpropagation.py",
          "line_number": 436,
          "function_name": "backpropagation",
          "code": "for node in reversed(nodes):  # @inspect node.name"
        }
      ],
      "env": {
        "node.name": {
          "type": "str",
          "contents": "x1",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 292,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(y)  # @inspect y"
        }
      ],
      "env": {
        "y": {
          "type": "backpropagation.Squared",
          "contents": {
            "name": {
              "type": "str",
              "contents": "y",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.float64",
              "contents": 25.0,
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "numpy.ndarray",
              "contents": 1.0,
              "dtype": "float64",
              "shape": []
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "sum",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.float64",
                      "contents": 5.0,
                      "dtype": null,
                      "shape": null
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": 10.0,
                      "dtype": "float64",
                      "shape": []
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x1",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 2.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": 10.0,
                              "dtype": "float64",
                              "shape": []
                            }
                          },
                          "dtype": null,
                          "shape": null
                        },
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x2",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": 3.0,
                              "dtype": "float64",
                              "shape": []
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": 10.0,
                              "dtype": "float64",
                              "shape": []
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 294,
          "function_name": "computation_graphs_general",
          "code": "text(\"Let's look at the original motivating example from linear regression.\") # @clear x1 x2 sum y"
        }
      ],
      "env": {
        "x1": null,
        "x2": null,
        "sum": null,
        "y": null
      },
      "renderings": [
        {
          "type": "markdown",
          "data": "Let's look at the original motivating example from linear regression.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 295,
          "function_name": "computation_graphs_general",
          "code": "x = Input(\"x\", np.array([[1., 2, 0], [0, -1, 1]]))  # @inspect x @stepover"
        }
      ],
      "env": {
        "x": {
          "type": "backpropagation.Input",
          "contents": {
            "name": {
              "type": "str",
              "contents": "x",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  1.0,
                  2.0,
                  0.0
                ],
                [
                  0.0,
                  -1.0,
                  1.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                2,
                3
              ]
            },
            "grad": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 296,
          "function_name": "computation_graphs_general",
          "code": "y = Input(\"y\", np.array([[0.], [3]]))  # @inspect y @stepover"
        }
      ],
      "env": {
        "y": {
          "type": "backpropagation.Input",
          "contents": {
            "name": {
              "type": "str",
              "contents": "y",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  0.0
                ],
                [
                  3.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                2,
                1
              ]
            },
            "grad": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 297,
          "function_name": "computation_graphs_general",
          "code": "w = Input(\"w\", np.array([[1.], [0], [1]]))  # @inspect w @stepover"
        }
      ],
      "env": {
        "w": {
          "type": "backpropagation.Input",
          "contents": {
            "name": {
              "type": "str",
              "contents": "w",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  1.0
                ],
                [
                  0.0
                ],
                [
                  1.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                3,
                1
              ]
            },
            "grad": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 298,
          "function_name": "computation_graphs_general",
          "code": "predictions = Multiply(\"predictions\", x, w)  # @inspect predictions @stepover @clear x w"
        }
      ],
      "env": {
        "predictions": {
          "type": "backpropagation.Multiply",
          "contents": {
            "name": {
              "type": "str",
              "contents": "predictions",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "x",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0,
                          2.0,
                          0.0
                        ],
                        [
                          0.0,
                          -1.0,
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        3
                      ]
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "w",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0
                        ],
                        [
                          0.0
                        ],
                        [
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        3,
                        1
                      ]
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        },
        "x": null,
        "w": null
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 299,
          "function_name": "computation_graphs_general",
          "code": "residuals = Subtract(\"residuals\", predictions, y)  # @inspect residuals @stepover @clear predictions y"
        }
      ],
      "env": {
        "residuals": {
          "type": "backpropagation.Subtract",
          "contents": {
            "name": {
              "type": "str",
              "contents": "residuals",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "predictions",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  1.0,
                                  2.0,
                                  0.0
                                ],
                                [
                                  0.0,
                                  -1.0,
                                  1.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                3
                              ]
                            },
                            "grad": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        },
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "w",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  1.0
                                ],
                                [
                                  0.0
                                ],
                                [
                                  1.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                3,
                                1
                              ]
                            },
                            "grad": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "y",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          0.0
                        ],
                        [
                          3.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        },
        "predictions": null,
        "y": null
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 300,
          "function_name": "computation_graphs_general",
          "code": "losses = Squared(\"losses\", residuals)  # @inspect losses @stepover @clear residuals"
        }
      ],
      "env": {
        "losses": {
          "type": "backpropagation.Squared",
          "contents": {
            "name": {
              "type": "str",
              "contents": "losses",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "residuals",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "predictions",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            },
                            "grad": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            },
                            "dependencies": {
                              "type": "list",
                              "contents": [
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "x",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          1.0,
                                          2.0,
                                          0.0
                                        ],
                                        [
                                          0.0,
                                          -1.0,
                                          1.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        3
                                      ]
                                    },
                                    "grad": {
                                      "type": "NoneType",
                                      "contents": "None",
                                      "dtype": null,
                                      "shape": null
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                },
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "w",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          1.0
                                        ],
                                        [
                                          0.0
                                        ],
                                        [
                                          1.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        3,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "NoneType",
                                      "contents": "None",
                                      "dtype": null,
                                      "shape": null
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                }
                              ],
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        },
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "y",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  0.0
                                ],
                                [
                                  3.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            },
                            "grad": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        },
        "residuals": null
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 301,
          "function_name": "computation_graphs_general",
          "code": "ones = Input(\"ones\", np.ones((1, 2)))  # @inspect ones @stepover"
        }
      ],
      "env": {
        "ones": {
          "type": "backpropagation.Input",
          "contents": {
            "name": {
              "type": "str",
              "contents": "ones",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  1.0,
                  1.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                1,
                2
              ]
            },
            "grad": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 302,
          "function_name": "computation_graphs_general",
          "code": "total_loss = Multiply(\"total_loss\", ones, losses)  # @inspect total_loss @stepover @clear ones losses"
        }
      ],
      "env": {
        "total_loss": {
          "type": "backpropagation.Multiply",
          "contents": {
            "name": {
              "type": "str",
              "contents": "total_loss",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "ones",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0,
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "losses",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "residuals",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            },
                            "grad": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            },
                            "dependencies": {
                              "type": "list",
                              "contents": [
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "predictions",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "NoneType",
                                      "contents": "None",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "grad": {
                                      "type": "NoneType",
                                      "contents": "None",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "dependencies": {
                                      "type": "list",
                                      "contents": [
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "x",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0,
                                                  2.0,
                                                  0.0
                                                ],
                                                [
                                                  0.0,
                                                  -1.0,
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            },
                                            "grad": {
                                              "type": "NoneType",
                                              "contents": "None",
                                              "dtype": null,
                                              "shape": null
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        },
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "w",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0
                                                ],
                                                [
                                                  0.0
                                                ],
                                                [
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            },
                                            "grad": {
                                              "type": "NoneType",
                                              "contents": "None",
                                              "dtype": null,
                                              "shape": null
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        }
                                      ],
                                      "dtype": null,
                                      "shape": null
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                },
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "y",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          3.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "NoneType",
                                      "contents": "None",
                                      "dtype": null,
                                      "shape": null
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                }
                              ],
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        },
        "ones": null,
        "losses": null
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 420,
          "function_name": "backpropagation",
          "code": "def backpropagation(root: Node):"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 422,
          "function_name": "backpropagation",
          "code": "nodes = topological_sort(root)  # @stepover"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 423,
          "function_name": "backpropagation",
          "code": "order = [node.name for node in nodes]  # @inspect order @stepover"
        }
      ],
      "env": {
        "order": {
          "type": "list",
          "contents": [
            {
              "type": "str",
              "contents": "ones",
              "dtype": null,
              "shape": null
            },
            {
              "type": "str",
              "contents": "x",
              "dtype": null,
              "shape": null
            },
            {
              "type": "str",
              "contents": "w",
              "dtype": null,
              "shape": null
            },
            {
              "type": "str",
              "contents": "predictions",
              "dtype": null,
              "shape": null
            },
            {
              "type": "str",
              "contents": "y",
              "dtype": null,
              "shape": null
            },
            {
              "type": "str",
              "contents": "residuals",
              "dtype": null,
              "shape": null
            },
            {
              "type": "str",
              "contents": "losses",
              "dtype": null,
              "shape": null
            },
            {
              "type": "str",
              "contents": "total_loss",
              "dtype": null,
              "shape": null
            }
          ],
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 426,
          "function_name": "backpropagation",
          "code": "for node in nodes:  # @inspect node.name"
        }
      ],
      "env": {
        "node.name": {
          "type": "str",
          "contents": "ones",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 344,
          "function_name": "forward",
          "code": "def forward(self):"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 346,
          "function_name": "forward",
          "code": "pass"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        }
      ],
      "env": {
        "root": {
          "type": "backpropagation.Multiply",
          "contents": {
            "name": {
              "type": "str",
              "contents": "total_loss",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "ones",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0,
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "losses",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "residuals",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            },
                            "grad": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            },
                            "dependencies": {
                              "type": "list",
                              "contents": [
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "predictions",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "NoneType",
                                      "contents": "None",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "grad": {
                                      "type": "NoneType",
                                      "contents": "None",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "dependencies": {
                                      "type": "list",
                                      "contents": [
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "x",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0,
                                                  2.0,
                                                  0.0
                                                ],
                                                [
                                                  0.0,
                                                  -1.0,
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            },
                                            "grad": {
                                              "type": "NoneType",
                                              "contents": "None",
                                              "dtype": null,
                                              "shape": null
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        },
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "w",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0
                                                ],
                                                [
                                                  0.0
                                                ],
                                                [
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            },
                                            "grad": {
                                              "type": "NoneType",
                                              "contents": "None",
                                              "dtype": null,
                                              "shape": null
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        }
                                      ],
                                      "dtype": null,
                                      "shape": null
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                },
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "y",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          3.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "NoneType",
                                      "contents": "None",
                                      "dtype": null,
                                      "shape": null
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                }
                              ],
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 426,
          "function_name": "backpropagation",
          "code": "for node in nodes:  # @inspect node.name"
        }
      ],
      "env": {
        "node.name": {
          "type": "str",
          "contents": "x",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 344,
          "function_name": "forward",
          "code": "def forward(self):"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 346,
          "function_name": "forward",
          "code": "pass"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        }
      ],
      "env": {
        "root": {
          "type": "backpropagation.Multiply",
          "contents": {
            "name": {
              "type": "str",
              "contents": "total_loss",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "ones",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0,
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "losses",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "residuals",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            },
                            "grad": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            },
                            "dependencies": {
                              "type": "list",
                              "contents": [
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "predictions",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "NoneType",
                                      "contents": "None",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "grad": {
                                      "type": "NoneType",
                                      "contents": "None",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "dependencies": {
                                      "type": "list",
                                      "contents": [
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "x",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0,
                                                  2.0,
                                                  0.0
                                                ],
                                                [
                                                  0.0,
                                                  -1.0,
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            },
                                            "grad": {
                                              "type": "NoneType",
                                              "contents": "None",
                                              "dtype": null,
                                              "shape": null
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        },
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "w",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0
                                                ],
                                                [
                                                  0.0
                                                ],
                                                [
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            },
                                            "grad": {
                                              "type": "NoneType",
                                              "contents": "None",
                                              "dtype": null,
                                              "shape": null
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        }
                                      ],
                                      "dtype": null,
                                      "shape": null
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                },
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "y",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          3.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "NoneType",
                                      "contents": "None",
                                      "dtype": null,
                                      "shape": null
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                }
                              ],
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 426,
          "function_name": "backpropagation",
          "code": "for node in nodes:  # @inspect node.name"
        }
      ],
      "env": {
        "node.name": {
          "type": "str",
          "contents": "w",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 344,
          "function_name": "forward",
          "code": "def forward(self):"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 346,
          "function_name": "forward",
          "code": "pass"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        }
      ],
      "env": {
        "root": {
          "type": "backpropagation.Multiply",
          "contents": {
            "name": {
              "type": "str",
              "contents": "total_loss",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "ones",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0,
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "losses",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "residuals",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            },
                            "grad": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            },
                            "dependencies": {
                              "type": "list",
                              "contents": [
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "predictions",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "NoneType",
                                      "contents": "None",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "grad": {
                                      "type": "NoneType",
                                      "contents": "None",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "dependencies": {
                                      "type": "list",
                                      "contents": [
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "x",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0,
                                                  2.0,
                                                  0.0
                                                ],
                                                [
                                                  0.0,
                                                  -1.0,
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            },
                                            "grad": {
                                              "type": "NoneType",
                                              "contents": "None",
                                              "dtype": null,
                                              "shape": null
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        },
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "w",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0
                                                ],
                                                [
                                                  0.0
                                                ],
                                                [
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            },
                                            "grad": {
                                              "type": "NoneType",
                                              "contents": "None",
                                              "dtype": null,
                                              "shape": null
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        }
                                      ],
                                      "dtype": null,
                                      "shape": null
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                },
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "y",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          3.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "NoneType",
                                      "contents": "None",
                                      "dtype": null,
                                      "shape": null
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                }
                              ],
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 426,
          "function_name": "backpropagation",
          "code": "for node in nodes:  # @inspect node.name"
        }
      ],
      "env": {
        "node.name": {
          "type": "str",
          "contents": "predictions",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 379,
          "function_name": "forward",
          "code": "def forward(self):"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 380,
          "function_name": "forward",
          "code": "x, y = self.dependencies  # @inspect x.value y.value"
        }
      ],
      "env": {
        "x.value": {
          "type": "numpy.ndarray",
          "contents": [
            [
              1.0,
              2.0,
              0.0
            ],
            [
              0.0,
              -1.0,
              1.0
            ]
          ],
          "dtype": "float64",
          "shape": [
            2,
            3
          ]
        },
        "y.value": {
          "type": "numpy.ndarray",
          "contents": [
            [
              1.0
            ],
            [
              0.0
            ],
            [
              1.0
            ]
          ],
          "dtype": "float64",
          "shape": [
            3,
            1
          ]
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 381,
          "function_name": "forward",
          "code": "self.value = x.value @ y.value  # @inspect self.value"
        }
      ],
      "env": {
        "self.value": {
          "type": "numpy.ndarray",
          "contents": [
            [
              1.0
            ],
            [
              1.0
            ]
          ],
          "dtype": "float64",
          "shape": [
            2,
            1
          ]
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        }
      ],
      "env": {
        "root": {
          "type": "backpropagation.Multiply",
          "contents": {
            "name": {
              "type": "str",
              "contents": "total_loss",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "ones",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0,
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "losses",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "residuals",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            },
                            "grad": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            },
                            "dependencies": {
                              "type": "list",
                              "contents": [
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "predictions",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          1.0
                                        ],
                                        [
                                          1.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "NoneType",
                                      "contents": "None",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "dependencies": {
                                      "type": "list",
                                      "contents": [
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "x",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0,
                                                  2.0,
                                                  0.0
                                                ],
                                                [
                                                  0.0,
                                                  -1.0,
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            },
                                            "grad": {
                                              "type": "NoneType",
                                              "contents": "None",
                                              "dtype": null,
                                              "shape": null
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        },
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "w",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0
                                                ],
                                                [
                                                  0.0
                                                ],
                                                [
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            },
                                            "grad": {
                                              "type": "NoneType",
                                              "contents": "None",
                                              "dtype": null,
                                              "shape": null
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        }
                                      ],
                                      "dtype": null,
                                      "shape": null
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                },
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "y",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          3.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "NoneType",
                                      "contents": "None",
                                      "dtype": null,
                                      "shape": null
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                }
                              ],
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 426,
          "function_name": "backpropagation",
          "code": "for node in nodes:  # @inspect node.name"
        }
      ],
      "env": {
        "node.name": {
          "type": "str",
          "contents": "y",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 344,
          "function_name": "forward",
          "code": "def forward(self):"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 346,
          "function_name": "forward",
          "code": "pass"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        }
      ],
      "env": {
        "root": {
          "type": "backpropagation.Multiply",
          "contents": {
            "name": {
              "type": "str",
              "contents": "total_loss",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "ones",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0,
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "losses",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "residuals",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            },
                            "grad": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            },
                            "dependencies": {
                              "type": "list",
                              "contents": [
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "predictions",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          1.0
                                        ],
                                        [
                                          1.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "NoneType",
                                      "contents": "None",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "dependencies": {
                                      "type": "list",
                                      "contents": [
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "x",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0,
                                                  2.0,
                                                  0.0
                                                ],
                                                [
                                                  0.0,
                                                  -1.0,
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            },
                                            "grad": {
                                              "type": "NoneType",
                                              "contents": "None",
                                              "dtype": null,
                                              "shape": null
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        },
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "w",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0
                                                ],
                                                [
                                                  0.0
                                                ],
                                                [
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            },
                                            "grad": {
                                              "type": "NoneType",
                                              "contents": "None",
                                              "dtype": null,
                                              "shape": null
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        }
                                      ],
                                      "dtype": null,
                                      "shape": null
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                },
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "y",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          3.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "NoneType",
                                      "contents": "None",
                                      "dtype": null,
                                      "shape": null
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                }
                              ],
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 426,
          "function_name": "backpropagation",
          "code": "for node in nodes:  # @inspect node.name"
        }
      ],
      "env": {
        "node.name": {
          "type": "str",
          "contents": "residuals",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 367,
          "function_name": "forward",
          "code": "def forward(self):  # @inspect self"
        }
      ],
      "env": {
        "self": {
          "type": "backpropagation.Subtract",
          "contents": {
            "name": {
              "type": "str",
              "contents": "residuals",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "predictions",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0
                        ],
                        [
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  1.0,
                                  2.0,
                                  0.0
                                ],
                                [
                                  0.0,
                                  -1.0,
                                  1.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                3
                              ]
                            },
                            "grad": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        },
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "w",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  1.0
                                ],
                                [
                                  0.0
                                ],
                                [
                                  1.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                3,
                                1
                              ]
                            },
                            "grad": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "y",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          0.0
                        ],
                        [
                          3.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 368,
          "function_name": "forward",
          "code": "x, y = self.dependencies  # @inspect x.value y.value"
        }
      ],
      "env": {
        "x.value": {
          "type": "numpy.ndarray",
          "contents": [
            [
              1.0
            ],
            [
              1.0
            ]
          ],
          "dtype": "float64",
          "shape": [
            2,
            1
          ]
        },
        "y.value": {
          "type": "numpy.ndarray",
          "contents": [
            [
              0.0
            ],
            [
              3.0
            ]
          ],
          "dtype": "float64",
          "shape": [
            2,
            1
          ]
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 369,
          "function_name": "forward",
          "code": "self.value = x.value - y.value  # @inspect self"
        }
      ],
      "env": {
        "self": {
          "type": "backpropagation.Subtract",
          "contents": {
            "name": {
              "type": "str",
              "contents": "residuals",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  1.0
                ],
                [
                  -2.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                2,
                1
              ]
            },
            "grad": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "predictions",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0
                        ],
                        [
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  1.0,
                                  2.0,
                                  0.0
                                ],
                                [
                                  0.0,
                                  -1.0,
                                  1.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                3
                              ]
                            },
                            "grad": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        },
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "w",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  1.0
                                ],
                                [
                                  0.0
                                ],
                                [
                                  1.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                3,
                                1
                              ]
                            },
                            "grad": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "y",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          0.0
                        ],
                        [
                          3.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        }
      ],
      "env": {
        "root": {
          "type": "backpropagation.Multiply",
          "contents": {
            "name": {
              "type": "str",
              "contents": "total_loss",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "ones",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0,
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "losses",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "residuals",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  1.0
                                ],
                                [
                                  -2.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            },
                            "grad": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            },
                            "dependencies": {
                              "type": "list",
                              "contents": [
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "predictions",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          1.0
                                        ],
                                        [
                                          1.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "NoneType",
                                      "contents": "None",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "dependencies": {
                                      "type": "list",
                                      "contents": [
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "x",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0,
                                                  2.0,
                                                  0.0
                                                ],
                                                [
                                                  0.0,
                                                  -1.0,
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            },
                                            "grad": {
                                              "type": "NoneType",
                                              "contents": "None",
                                              "dtype": null,
                                              "shape": null
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        },
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "w",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0
                                                ],
                                                [
                                                  0.0
                                                ],
                                                [
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            },
                                            "grad": {
                                              "type": "NoneType",
                                              "contents": "None",
                                              "dtype": null,
                                              "shape": null
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        }
                                      ],
                                      "dtype": null,
                                      "shape": null
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                },
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "y",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          3.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "NoneType",
                                      "contents": "None",
                                      "dtype": null,
                                      "shape": null
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                }
                              ],
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 426,
          "function_name": "backpropagation",
          "code": "for node in nodes:  # @inspect node.name"
        }
      ],
      "env": {
        "node.name": {
          "type": "str",
          "contents": "losses",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 391,
          "function_name": "forward",
          "code": "def forward(self):"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 392,
          "function_name": "forward",
          "code": "x, = self.dependencies  # @inspect x.value"
        }
      ],
      "env": {
        "x.value": {
          "type": "numpy.ndarray",
          "contents": [
            [
              1.0
            ],
            [
              -2.0
            ]
          ],
          "dtype": "float64",
          "shape": [
            2,
            1
          ]
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 393,
          "function_name": "forward",
          "code": "self.value = x.value ** 2  # @inspect self.value"
        }
      ],
      "env": {
        "self.value": {
          "type": "numpy.ndarray",
          "contents": [
            [
              1.0
            ],
            [
              4.0
            ]
          ],
          "dtype": "float64",
          "shape": [
            2,
            1
          ]
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        }
      ],
      "env": {
        "root": {
          "type": "backpropagation.Multiply",
          "contents": {
            "name": {
              "type": "str",
              "contents": "total_loss",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "grad": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "ones",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0,
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "losses",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0
                        ],
                        [
                          4.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "residuals",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  1.0
                                ],
                                [
                                  -2.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            },
                            "grad": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            },
                            "dependencies": {
                              "type": "list",
                              "contents": [
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "predictions",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          1.0
                                        ],
                                        [
                                          1.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "NoneType",
                                      "contents": "None",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "dependencies": {
                                      "type": "list",
                                      "contents": [
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "x",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0,
                                                  2.0,
                                                  0.0
                                                ],
                                                [
                                                  0.0,
                                                  -1.0,
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            },
                                            "grad": {
                                              "type": "NoneType",
                                              "contents": "None",
                                              "dtype": null,
                                              "shape": null
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        },
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "w",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0
                                                ],
                                                [
                                                  0.0
                                                ],
                                                [
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            },
                                            "grad": {
                                              "type": "NoneType",
                                              "contents": "None",
                                              "dtype": null,
                                              "shape": null
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        }
                                      ],
                                      "dtype": null,
                                      "shape": null
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                },
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "y",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          3.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "NoneType",
                                      "contents": "None",
                                      "dtype": null,
                                      "shape": null
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                }
                              ],
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 426,
          "function_name": "backpropagation",
          "code": "for node in nodes:  # @inspect node.name"
        }
      ],
      "env": {
        "node.name": {
          "type": "str",
          "contents": "total_loss",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 379,
          "function_name": "forward",
          "code": "def forward(self):"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 380,
          "function_name": "forward",
          "code": "x, y = self.dependencies  # @inspect x.value y.value"
        }
      ],
      "env": {
        "x.value": {
          "type": "numpy.ndarray",
          "contents": [
            [
              1.0,
              1.0
            ]
          ],
          "dtype": "float64",
          "shape": [
            1,
            2
          ]
        },
        "y.value": {
          "type": "numpy.ndarray",
          "contents": [
            [
              1.0
            ],
            [
              4.0
            ]
          ],
          "dtype": "float64",
          "shape": [
            2,
            1
          ]
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 381,
          "function_name": "forward",
          "code": "self.value = x.value @ y.value  # @inspect self.value"
        }
      ],
      "env": {
        "self.value": {
          "type": "numpy.ndarray",
          "contents": [
            [
              5.0
            ]
          ],
          "dtype": "float64",
          "shape": [
            1,
            1
          ]
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 427,
          "function_name": "backpropagation",
          "code": "node.forward()  # @inspect root"
        }
      ],
      "env": {
        "root": {
          "type": "backpropagation.Multiply",
          "contents": {
            "name": {
              "type": "str",
              "contents": "total_loss",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  5.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                1,
                1
              ]
            },
            "grad": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "ones",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0,
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "losses",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0
                        ],
                        [
                          4.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "residuals",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  1.0
                                ],
                                [
                                  -2.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            },
                            "grad": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            },
                            "dependencies": {
                              "type": "list",
                              "contents": [
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "predictions",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          1.0
                                        ],
                                        [
                                          1.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "NoneType",
                                      "contents": "None",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "dependencies": {
                                      "type": "list",
                                      "contents": [
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "x",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0,
                                                  2.0,
                                                  0.0
                                                ],
                                                [
                                                  0.0,
                                                  -1.0,
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            },
                                            "grad": {
                                              "type": "NoneType",
                                              "contents": "None",
                                              "dtype": null,
                                              "shape": null
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        },
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "w",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0
                                                ],
                                                [
                                                  0.0
                                                ],
                                                [
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            },
                                            "grad": {
                                              "type": "NoneType",
                                              "contents": "None",
                                              "dtype": null,
                                              "shape": null
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        }
                                      ],
                                      "dtype": null,
                                      "shape": null
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                },
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "y",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          3.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "NoneType",
                                      "contents": "None",
                                      "dtype": null,
                                      "shape": null
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                }
                              ],
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 426,
          "function_name": "backpropagation",
          "code": "for node in nodes:  # @inspect node.name"
        }
      ],
      "env": {
        "node.name": {
          "type": "str",
          "contents": "total_loss",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 430,
          "function_name": "backpropagation",
          "code": "for node in nodes:  # @inspect node.name"
        }
      ],
      "env": {
        "node.name": {
          "type": "str",
          "contents": "ones",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 431,
          "function_name": "backpropagation",
          "code": "node.grad = np.zeros_like(node.value)  # @inspect root @stepover"
        }
      ],
      "env": {
        "root": {
          "type": "backpropagation.Multiply",
          "contents": {
            "name": {
              "type": "str",
              "contents": "total_loss",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  5.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                1,
                1
              ]
            },
            "grad": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "ones",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0,
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          0.0,
                          0.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "losses",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0
                        ],
                        [
                          4.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "residuals",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  1.0
                                ],
                                [
                                  -2.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            },
                            "grad": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            },
                            "dependencies": {
                              "type": "list",
                              "contents": [
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "predictions",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          1.0
                                        ],
                                        [
                                          1.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "NoneType",
                                      "contents": "None",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "dependencies": {
                                      "type": "list",
                                      "contents": [
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "x",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0,
                                                  2.0,
                                                  0.0
                                                ],
                                                [
                                                  0.0,
                                                  -1.0,
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            },
                                            "grad": {
                                              "type": "NoneType",
                                              "contents": "None",
                                              "dtype": null,
                                              "shape": null
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        },
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "w",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0
                                                ],
                                                [
                                                  0.0
                                                ],
                                                [
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            },
                                            "grad": {
                                              "type": "NoneType",
                                              "contents": "None",
                                              "dtype": null,
                                              "shape": null
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        }
                                      ],
                                      "dtype": null,
                                      "shape": null
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                },
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "y",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          3.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "NoneType",
                                      "contents": "None",
                                      "dtype": null,
                                      "shape": null
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                }
                              ],
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 430,
          "function_name": "backpropagation",
          "code": "for node in nodes:  # @inspect node.name"
        }
      ],
      "env": {
        "node.name": {
          "type": "str",
          "contents": "x",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 431,
          "function_name": "backpropagation",
          "code": "node.grad = np.zeros_like(node.value)  # @inspect root @stepover"
        }
      ],
      "env": {
        "root": {
          "type": "backpropagation.Multiply",
          "contents": {
            "name": {
              "type": "str",
              "contents": "total_loss",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  5.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                1,
                1
              ]
            },
            "grad": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "ones",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0,
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          0.0,
                          0.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "losses",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0
                        ],
                        [
                          4.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "residuals",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  1.0
                                ],
                                [
                                  -2.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            },
                            "grad": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            },
                            "dependencies": {
                              "type": "list",
                              "contents": [
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "predictions",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          1.0
                                        ],
                                        [
                                          1.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "NoneType",
                                      "contents": "None",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "dependencies": {
                                      "type": "list",
                                      "contents": [
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "x",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0,
                                                  2.0,
                                                  0.0
                                                ],
                                                [
                                                  0.0,
                                                  -1.0,
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            },
                                            "grad": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  0.0,
                                                  0.0,
                                                  0.0
                                                ],
                                                [
                                                  0.0,
                                                  0.0,
                                                  0.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        },
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "w",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0
                                                ],
                                                [
                                                  0.0
                                                ],
                                                [
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            },
                                            "grad": {
                                              "type": "NoneType",
                                              "contents": "None",
                                              "dtype": null,
                                              "shape": null
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        }
                                      ],
                                      "dtype": null,
                                      "shape": null
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                },
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "y",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          3.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "NoneType",
                                      "contents": "None",
                                      "dtype": null,
                                      "shape": null
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                }
                              ],
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 430,
          "function_name": "backpropagation",
          "code": "for node in nodes:  # @inspect node.name"
        }
      ],
      "env": {
        "node.name": {
          "type": "str",
          "contents": "w",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 431,
          "function_name": "backpropagation",
          "code": "node.grad = np.zeros_like(node.value)  # @inspect root @stepover"
        }
      ],
      "env": {
        "root": {
          "type": "backpropagation.Multiply",
          "contents": {
            "name": {
              "type": "str",
              "contents": "total_loss",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  5.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                1,
                1
              ]
            },
            "grad": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "ones",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0,
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          0.0,
                          0.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "losses",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0
                        ],
                        [
                          4.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "residuals",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  1.0
                                ],
                                [
                                  -2.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            },
                            "grad": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            },
                            "dependencies": {
                              "type": "list",
                              "contents": [
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "predictions",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          1.0
                                        ],
                                        [
                                          1.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "NoneType",
                                      "contents": "None",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "dependencies": {
                                      "type": "list",
                                      "contents": [
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "x",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0,
                                                  2.0,
                                                  0.0
                                                ],
                                                [
                                                  0.0,
                                                  -1.0,
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            },
                                            "grad": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  0.0,
                                                  0.0,
                                                  0.0
                                                ],
                                                [
                                                  0.0,
                                                  0.0,
                                                  0.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        },
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "w",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0
                                                ],
                                                [
                                                  0.0
                                                ],
                                                [
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            },
                                            "grad": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  0.0
                                                ],
                                                [
                                                  0.0
                                                ],
                                                [
                                                  0.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        }
                                      ],
                                      "dtype": null,
                                      "shape": null
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                },
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "y",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          3.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "NoneType",
                                      "contents": "None",
                                      "dtype": null,
                                      "shape": null
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                }
                              ],
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 430,
          "function_name": "backpropagation",
          "code": "for node in nodes:  # @inspect node.name"
        }
      ],
      "env": {
        "node.name": {
          "type": "str",
          "contents": "predictions",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 431,
          "function_name": "backpropagation",
          "code": "node.grad = np.zeros_like(node.value)  # @inspect root @stepover"
        }
      ],
      "env": {
        "root": {
          "type": "backpropagation.Multiply",
          "contents": {
            "name": {
              "type": "str",
              "contents": "total_loss",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  5.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                1,
                1
              ]
            },
            "grad": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "ones",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0,
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          0.0,
                          0.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "losses",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0
                        ],
                        [
                          4.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "residuals",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  1.0
                                ],
                                [
                                  -2.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            },
                            "grad": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            },
                            "dependencies": {
                              "type": "list",
                              "contents": [
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "predictions",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          1.0
                                        ],
                                        [
                                          1.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          0.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "dependencies": {
                                      "type": "list",
                                      "contents": [
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "x",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0,
                                                  2.0,
                                                  0.0
                                                ],
                                                [
                                                  0.0,
                                                  -1.0,
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            },
                                            "grad": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  0.0,
                                                  0.0,
                                                  0.0
                                                ],
                                                [
                                                  0.0,
                                                  0.0,
                                                  0.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        },
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "w",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0
                                                ],
                                                [
                                                  0.0
                                                ],
                                                [
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            },
                                            "grad": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  0.0
                                                ],
                                                [
                                                  0.0
                                                ],
                                                [
                                                  0.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        }
                                      ],
                                      "dtype": null,
                                      "shape": null
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                },
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "y",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          3.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "NoneType",
                                      "contents": "None",
                                      "dtype": null,
                                      "shape": null
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                }
                              ],
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 430,
          "function_name": "backpropagation",
          "code": "for node in nodes:  # @inspect node.name"
        }
      ],
      "env": {
        "node.name": {
          "type": "str",
          "contents": "y",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 431,
          "function_name": "backpropagation",
          "code": "node.grad = np.zeros_like(node.value)  # @inspect root @stepover"
        }
      ],
      "env": {
        "root": {
          "type": "backpropagation.Multiply",
          "contents": {
            "name": {
              "type": "str",
              "contents": "total_loss",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  5.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                1,
                1
              ]
            },
            "grad": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "ones",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0,
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          0.0,
                          0.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "losses",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0
                        ],
                        [
                          4.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "residuals",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  1.0
                                ],
                                [
                                  -2.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            },
                            "grad": {
                              "type": "NoneType",
                              "contents": "None",
                              "dtype": null,
                              "shape": null
                            },
                            "dependencies": {
                              "type": "list",
                              "contents": [
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "predictions",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          1.0
                                        ],
                                        [
                                          1.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          0.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "dependencies": {
                                      "type": "list",
                                      "contents": [
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "x",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0,
                                                  2.0,
                                                  0.0
                                                ],
                                                [
                                                  0.0,
                                                  -1.0,
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            },
                                            "grad": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  0.0,
                                                  0.0,
                                                  0.0
                                                ],
                                                [
                                                  0.0,
                                                  0.0,
                                                  0.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        },
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "w",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0
                                                ],
                                                [
                                                  0.0
                                                ],
                                                [
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            },
                                            "grad": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  0.0
                                                ],
                                                [
                                                  0.0
                                                ],
                                                [
                                                  0.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        }
                                      ],
                                      "dtype": null,
                                      "shape": null
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                },
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "y",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          3.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          0.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                }
                              ],
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 430,
          "function_name": "backpropagation",
          "code": "for node in nodes:  # @inspect node.name"
        }
      ],
      "env": {
        "node.name": {
          "type": "str",
          "contents": "residuals",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 431,
          "function_name": "backpropagation",
          "code": "node.grad = np.zeros_like(node.value)  # @inspect root @stepover"
        }
      ],
      "env": {
        "root": {
          "type": "backpropagation.Multiply",
          "contents": {
            "name": {
              "type": "str",
              "contents": "total_loss",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  5.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                1,
                1
              ]
            },
            "grad": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "ones",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0,
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          0.0,
                          0.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "losses",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0
                        ],
                        [
                          4.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "grad": {
                      "type": "NoneType",
                      "contents": "None",
                      "dtype": null,
                      "shape": null
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "residuals",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  1.0
                                ],
                                [
                                  -2.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  0.0
                                ],
                                [
                                  0.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            },
                            "dependencies": {
                              "type": "list",
                              "contents": [
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "predictions",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          1.0
                                        ],
                                        [
                                          1.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          0.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "dependencies": {
                                      "type": "list",
                                      "contents": [
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "x",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0,
                                                  2.0,
                                                  0.0
                                                ],
                                                [
                                                  0.0,
                                                  -1.0,
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            },
                                            "grad": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  0.0,
                                                  0.0,
                                                  0.0
                                                ],
                                                [
                                                  0.0,
                                                  0.0,
                                                  0.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        },
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "w",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0
                                                ],
                                                [
                                                  0.0
                                                ],
                                                [
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            },
                                            "grad": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  0.0
                                                ],
                                                [
                                                  0.0
                                                ],
                                                [
                                                  0.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        }
                                      ],
                                      "dtype": null,
                                      "shape": null
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                },
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "y",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          3.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          0.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                }
                              ],
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 430,
          "function_name": "backpropagation",
          "code": "for node in nodes:  # @inspect node.name"
        }
      ],
      "env": {
        "node.name": {
          "type": "str",
          "contents": "losses",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 431,
          "function_name": "backpropagation",
          "code": "node.grad = np.zeros_like(node.value)  # @inspect root @stepover"
        }
      ],
      "env": {
        "root": {
          "type": "backpropagation.Multiply",
          "contents": {
            "name": {
              "type": "str",
              "contents": "total_loss",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  5.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                1,
                1
              ]
            },
            "grad": {
              "type": "NoneType",
              "contents": "None",
              "dtype": null,
              "shape": null
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "ones",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0,
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          0.0,
                          0.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "losses",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0
                        ],
                        [
                          4.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          0.0
                        ],
                        [
                          0.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "residuals",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  1.0
                                ],
                                [
                                  -2.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  0.0
                                ],
                                [
                                  0.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            },
                            "dependencies": {
                              "type": "list",
                              "contents": [
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "predictions",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          1.0
                                        ],
                                        [
                                          1.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          0.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "dependencies": {
                                      "type": "list",
                                      "contents": [
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "x",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0,
                                                  2.0,
                                                  0.0
                                                ],
                                                [
                                                  0.0,
                                                  -1.0,
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            },
                                            "grad": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  0.0,
                                                  0.0,
                                                  0.0
                                                ],
                                                [
                                                  0.0,
                                                  0.0,
                                                  0.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        },
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "w",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0
                                                ],
                                                [
                                                  0.0
                                                ],
                                                [
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            },
                                            "grad": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  0.0
                                                ],
                                                [
                                                  0.0
                                                ],
                                                [
                                                  0.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        }
                                      ],
                                      "dtype": null,
                                      "shape": null
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                },
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "y",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          3.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          0.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                }
                              ],
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 430,
          "function_name": "backpropagation",
          "code": "for node in nodes:  # @inspect node.name"
        }
      ],
      "env": {
        "node.name": {
          "type": "str",
          "contents": "total_loss",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 431,
          "function_name": "backpropagation",
          "code": "node.grad = np.zeros_like(node.value)  # @inspect root @stepover"
        }
      ],
      "env": {
        "root": {
          "type": "backpropagation.Multiply",
          "contents": {
            "name": {
              "type": "str",
              "contents": "total_loss",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  5.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                1,
                1
              ]
            },
            "grad": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  0.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                1,
                1
              ]
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "ones",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0,
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          0.0,
                          0.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "losses",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0
                        ],
                        [
                          4.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          0.0
                        ],
                        [
                          0.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "residuals",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  1.0
                                ],
                                [
                                  -2.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  0.0
                                ],
                                [
                                  0.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            },
                            "dependencies": {
                              "type": "list",
                              "contents": [
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "predictions",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          1.0
                                        ],
                                        [
                                          1.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          0.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "dependencies": {
                                      "type": "list",
                                      "contents": [
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "x",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0,
                                                  2.0,
                                                  0.0
                                                ],
                                                [
                                                  0.0,
                                                  -1.0,
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            },
                                            "grad": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  0.0,
                                                  0.0,
                                                  0.0
                                                ],
                                                [
                                                  0.0,
                                                  0.0,
                                                  0.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        },
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "w",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0
                                                ],
                                                [
                                                  0.0
                                                ],
                                                [
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            },
                                            "grad": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  0.0
                                                ],
                                                [
                                                  0.0
                                                ],
                                                [
                                                  0.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        }
                                      ],
                                      "dtype": null,
                                      "shape": null
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                },
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "y",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          3.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          0.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                }
                              ],
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 430,
          "function_name": "backpropagation",
          "code": "for node in nodes:  # @inspect node.name"
        }
      ],
      "env": {
        "node.name": {
          "type": "str",
          "contents": "total_loss",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 433,
          "function_name": "backpropagation",
          "code": "root.grad = np.ones_like(root.value)  # @inspect root"
        }
      ],
      "env": {
        "root": {
          "type": "backpropagation.Multiply",
          "contents": {
            "name": {
              "type": "str",
              "contents": "total_loss",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  5.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                1,
                1
              ]
            },
            "grad": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  1.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                1,
                1
              ]
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "ones",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0,
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          0.0,
                          0.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "losses",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0
                        ],
                        [
                          4.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          0.0
                        ],
                        [
                          0.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "residuals",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  1.0
                                ],
                                [
                                  -2.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  0.0
                                ],
                                [
                                  0.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            },
                            "dependencies": {
                              "type": "list",
                              "contents": [
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "predictions",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          1.0
                                        ],
                                        [
                                          1.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          0.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "dependencies": {
                                      "type": "list",
                                      "contents": [
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "x",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0,
                                                  2.0,
                                                  0.0
                                                ],
                                                [
                                                  0.0,
                                                  -1.0,
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            },
                                            "grad": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  0.0,
                                                  0.0,
                                                  0.0
                                                ],
                                                [
                                                  0.0,
                                                  0.0,
                                                  0.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        },
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "w",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0
                                                ],
                                                [
                                                  0.0
                                                ],
                                                [
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            },
                                            "grad": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  0.0
                                                ],
                                                [
                                                  0.0
                                                ],
                                                [
                                                  0.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        }
                                      ],
                                      "dtype": null,
                                      "shape": null
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                },
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "y",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          3.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          0.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                }
                              ],
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 436,
          "function_name": "backpropagation",
          "code": "for node in reversed(nodes):  # @inspect node.name"
        }
      ],
      "env": {
        "node.name": {
          "type": "str",
          "contents": "total_loss",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 383,
          "function_name": "backward",
          "code": "def backward(self):  # @inspect self"
        }
      ],
      "env": {
        "self": {
          "type": "backpropagation.Multiply",
          "contents": {
            "name": {
              "type": "str",
              "contents": "total_loss",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  5.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                1,
                1
              ]
            },
            "grad": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  1.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                1,
                1
              ]
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "ones",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0,
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          0.0,
                          0.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "losses",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0
                        ],
                        [
                          4.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          0.0
                        ],
                        [
                          0.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "residuals",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  1.0
                                ],
                                [
                                  -2.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  0.0
                                ],
                                [
                                  0.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            },
                            "dependencies": {
                              "type": "list",
                              "contents": [
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "predictions",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          1.0
                                        ],
                                        [
                                          1.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          0.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "dependencies": {
                                      "type": "list",
                                      "contents": [
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "x",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0,
                                                  2.0,
                                                  0.0
                                                ],
                                                [
                                                  0.0,
                                                  -1.0,
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            },
                                            "grad": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  0.0,
                                                  0.0,
                                                  0.0
                                                ],
                                                [
                                                  0.0,
                                                  0.0,
                                                  0.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        },
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "w",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0
                                                ],
                                                [
                                                  0.0
                                                ],
                                                [
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            },
                                            "grad": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  0.0
                                                ],
                                                [
                                                  0.0
                                                ],
                                                [
                                                  0.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        }
                                      ],
                                      "dtype": null,
                                      "shape": null
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                },
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "y",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          3.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          0.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                }
                              ],
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 384,
          "function_name": "backward",
          "code": "x, y = self.dependencies"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 385,
          "function_name": "backward",
          "code": "x.grad += self.grad @ y.value.T  # @inspect self"
        }
      ],
      "env": {
        "self": {
          "type": "backpropagation.Multiply",
          "contents": {
            "name": {
              "type": "str",
              "contents": "total_loss",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  5.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                1,
                1
              ]
            },
            "grad": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  1.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                1,
                1
              ]
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "ones",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0,
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0,
                          4.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "losses",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0
                        ],
                        [
                          4.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          0.0
                        ],
                        [
                          0.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "residuals",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  1.0
                                ],
                                [
                                  -2.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  0.0
                                ],
                                [
                                  0.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            },
                            "dependencies": {
                              "type": "list",
                              "contents": [
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "predictions",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          1.0
                                        ],
                                        [
                                          1.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          0.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "dependencies": {
                                      "type": "list",
                                      "contents": [
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "x",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0,
                                                  2.0,
                                                  0.0
                                                ],
                                                [
                                                  0.0,
                                                  -1.0,
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            },
                                            "grad": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  0.0,
                                                  0.0,
                                                  0.0
                                                ],
                                                [
                                                  0.0,
                                                  0.0,
                                                  0.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        },
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "w",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0
                                                ],
                                                [
                                                  0.0
                                                ],
                                                [
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            },
                                            "grad": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  0.0
                                                ],
                                                [
                                                  0.0
                                                ],
                                                [
                                                  0.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        }
                                      ],
                                      "dtype": null,
                                      "shape": null
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                },
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "y",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          3.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          0.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                }
                              ],
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 386,
          "function_name": "backward",
          "code": "y.grad += x.value.T @ self.grad  # @inspect self"
        }
      ],
      "env": {
        "self": {
          "type": "backpropagation.Multiply",
          "contents": {
            "name": {
              "type": "str",
              "contents": "total_loss",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  5.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                1,
                1
              ]
            },
            "grad": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  1.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                1,
                1
              ]
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "ones",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0,
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0,
                          4.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "losses",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0
                        ],
                        [
                          4.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0
                        ],
                        [
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "residuals",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  1.0
                                ],
                                [
                                  -2.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  0.0
                                ],
                                [
                                  0.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            },
                            "dependencies": {
                              "type": "list",
                              "contents": [
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "predictions",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          1.0
                                        ],
                                        [
                                          1.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          0.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "dependencies": {
                                      "type": "list",
                                      "contents": [
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "x",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0,
                                                  2.0,
                                                  0.0
                                                ],
                                                [
                                                  0.0,
                                                  -1.0,
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            },
                                            "grad": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  0.0,
                                                  0.0,
                                                  0.0
                                                ],
                                                [
                                                  0.0,
                                                  0.0,
                                                  0.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        },
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "w",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0
                                                ],
                                                [
                                                  0.0
                                                ],
                                                [
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            },
                                            "grad": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  0.0
                                                ],
                                                [
                                                  0.0
                                                ],
                                                [
                                                  0.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        }
                                      ],
                                      "dtype": null,
                                      "shape": null
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                },
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "y",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          3.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          0.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                }
                              ],
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        }
      ],
      "env": {
        "root": {
          "type": "backpropagation.Multiply",
          "contents": {
            "name": {
              "type": "str",
              "contents": "total_loss",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  5.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                1,
                1
              ]
            },
            "grad": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  1.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                1,
                1
              ]
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "ones",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0,
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0,
                          4.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "losses",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0
                        ],
                        [
                          4.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0
                        ],
                        [
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "residuals",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  1.0
                                ],
                                [
                                  -2.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  0.0
                                ],
                                [
                                  0.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            },
                            "dependencies": {
                              "type": "list",
                              "contents": [
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "predictions",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          1.0
                                        ],
                                        [
                                          1.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          0.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "dependencies": {
                                      "type": "list",
                                      "contents": [
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "x",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0,
                                                  2.0,
                                                  0.0
                                                ],
                                                [
                                                  0.0,
                                                  -1.0,
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            },
                                            "grad": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  0.0,
                                                  0.0,
                                                  0.0
                                                ],
                                                [
                                                  0.0,
                                                  0.0,
                                                  0.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        },
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "w",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0
                                                ],
                                                [
                                                  0.0
                                                ],
                                                [
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            },
                                            "grad": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  0.0
                                                ],
                                                [
                                                  0.0
                                                ],
                                                [
                                                  0.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        }
                                      ],
                                      "dtype": null,
                                      "shape": null
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                },
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "y",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          3.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          0.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                }
                              ],
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 436,
          "function_name": "backpropagation",
          "code": "for node in reversed(nodes):  # @inspect node.name"
        }
      ],
      "env": {
        "node.name": {
          "type": "str",
          "contents": "losses",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 395,
          "function_name": "backward",
          "code": "def backward(self):  # @inspect self"
        }
      ],
      "env": {
        "self": {
          "type": "backpropagation.Squared",
          "contents": {
            "name": {
              "type": "str",
              "contents": "losses",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  1.0
                ],
                [
                  4.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                2,
                1
              ]
            },
            "grad": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  1.0
                ],
                [
                  1.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                2,
                1
              ]
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "residuals",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0
                        ],
                        [
                          -2.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          0.0
                        ],
                        [
                          0.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "predictions",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  1.0
                                ],
                                [
                                  1.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  0.0
                                ],
                                [
                                  0.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            },
                            "dependencies": {
                              "type": "list",
                              "contents": [
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "x",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          1.0,
                                          2.0,
                                          0.0
                                        ],
                                        [
                                          0.0,
                                          -1.0,
                                          1.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        3
                                      ]
                                    },
                                    "grad": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0,
                                          0.0,
                                          0.0
                                        ],
                                        [
                                          0.0,
                                          0.0,
                                          0.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        3
                                      ]
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                },
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "w",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          1.0
                                        ],
                                        [
                                          0.0
                                        ],
                                        [
                                          1.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        3,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          0.0
                                        ],
                                        [
                                          0.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        3,
                                        1
                                      ]
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                }
                              ],
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        },
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "y",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  0.0
                                ],
                                [
                                  3.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  0.0
                                ],
                                [
                                  0.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 396,
          "function_name": "backward",
          "code": "x, = self.dependencies"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 397,
          "function_name": "backward",
          "code": "x.grad += 2 * x.value * self.grad  # @inspect self"
        }
      ],
      "env": {
        "self": {
          "type": "backpropagation.Squared",
          "contents": {
            "name": {
              "type": "str",
              "contents": "losses",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  1.0
                ],
                [
                  4.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                2,
                1
              ]
            },
            "grad": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  1.0
                ],
                [
                  1.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                2,
                1
              ]
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "residuals",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0
                        ],
                        [
                          -2.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          2.0
                        ],
                        [
                          -4.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "predictions",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  1.0
                                ],
                                [
                                  1.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  0.0
                                ],
                                [
                                  0.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            },
                            "dependencies": {
                              "type": "list",
                              "contents": [
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "x",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          1.0,
                                          2.0,
                                          0.0
                                        ],
                                        [
                                          0.0,
                                          -1.0,
                                          1.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        3
                                      ]
                                    },
                                    "grad": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0,
                                          0.0,
                                          0.0
                                        ],
                                        [
                                          0.0,
                                          0.0,
                                          0.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        3
                                      ]
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                },
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "w",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          1.0
                                        ],
                                        [
                                          0.0
                                        ],
                                        [
                                          1.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        3,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          0.0
                                        ],
                                        [
                                          0.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        3,
                                        1
                                      ]
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                }
                              ],
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        },
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "y",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  0.0
                                ],
                                [
                                  3.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  0.0
                                ],
                                [
                                  0.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        }
      ],
      "env": {
        "root": {
          "type": "backpropagation.Multiply",
          "contents": {
            "name": {
              "type": "str",
              "contents": "total_loss",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  5.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                1,
                1
              ]
            },
            "grad": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  1.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                1,
                1
              ]
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "ones",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0,
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0,
                          4.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "losses",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0
                        ],
                        [
                          4.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0
                        ],
                        [
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "residuals",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  1.0
                                ],
                                [
                                  -2.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  2.0
                                ],
                                [
                                  -4.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            },
                            "dependencies": {
                              "type": "list",
                              "contents": [
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "predictions",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          1.0
                                        ],
                                        [
                                          1.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          0.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "dependencies": {
                                      "type": "list",
                                      "contents": [
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "x",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0,
                                                  2.0,
                                                  0.0
                                                ],
                                                [
                                                  0.0,
                                                  -1.0,
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            },
                                            "grad": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  0.0,
                                                  0.0,
                                                  0.0
                                                ],
                                                [
                                                  0.0,
                                                  0.0,
                                                  0.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        },
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "w",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0
                                                ],
                                                [
                                                  0.0
                                                ],
                                                [
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            },
                                            "grad": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  0.0
                                                ],
                                                [
                                                  0.0
                                                ],
                                                [
                                                  0.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        }
                                      ],
                                      "dtype": null,
                                      "shape": null
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                },
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "y",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          3.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          0.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                }
                              ],
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 436,
          "function_name": "backpropagation",
          "code": "for node in reversed(nodes):  # @inspect node.name"
        }
      ],
      "env": {
        "node.name": {
          "type": "str",
          "contents": "residuals",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 371,
          "function_name": "backward",
          "code": "def backward(self):  # @inspect self"
        }
      ],
      "env": {
        "self": {
          "type": "backpropagation.Subtract",
          "contents": {
            "name": {
              "type": "str",
              "contents": "residuals",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  1.0
                ],
                [
                  -2.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                2,
                1
              ]
            },
            "grad": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  2.0
                ],
                [
                  -4.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                2,
                1
              ]
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "predictions",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0
                        ],
                        [
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          0.0
                        ],
                        [
                          0.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  1.0,
                                  2.0,
                                  0.0
                                ],
                                [
                                  0.0,
                                  -1.0,
                                  1.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                3
                              ]
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  0.0,
                                  0.0,
                                  0.0
                                ],
                                [
                                  0.0,
                                  0.0,
                                  0.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                3
                              ]
                            }
                          },
                          "dtype": null,
                          "shape": null
                        },
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "w",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  1.0
                                ],
                                [
                                  0.0
                                ],
                                [
                                  1.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                3,
                                1
                              ]
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  0.0
                                ],
                                [
                                  0.0
                                ],
                                [
                                  0.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                3,
                                1
                              ]
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "y",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          0.0
                        ],
                        [
                          3.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          0.0
                        ],
                        [
                          0.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 372,
          "function_name": "backward",
          "code": "x, y = self.dependencies"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 373,
          "function_name": "backward",
          "code": "x.grad += self.grad  # @inspect self"
        }
      ],
      "env": {
        "self": {
          "type": "backpropagation.Subtract",
          "contents": {
            "name": {
              "type": "str",
              "contents": "residuals",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  1.0
                ],
                [
                  -2.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                2,
                1
              ]
            },
            "grad": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  2.0
                ],
                [
                  -4.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                2,
                1
              ]
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "predictions",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0
                        ],
                        [
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          2.0
                        ],
                        [
                          -4.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  1.0,
                                  2.0,
                                  0.0
                                ],
                                [
                                  0.0,
                                  -1.0,
                                  1.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                3
                              ]
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  0.0,
                                  0.0,
                                  0.0
                                ],
                                [
                                  0.0,
                                  0.0,
                                  0.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                3
                              ]
                            }
                          },
                          "dtype": null,
                          "shape": null
                        },
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "w",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  1.0
                                ],
                                [
                                  0.0
                                ],
                                [
                                  1.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                3,
                                1
                              ]
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  0.0
                                ],
                                [
                                  0.0
                                ],
                                [
                                  0.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                3,
                                1
                              ]
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "y",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          0.0
                        ],
                        [
                          3.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          0.0
                        ],
                        [
                          0.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 374,
          "function_name": "backward",
          "code": "y.grad -= self.grad  # @inspect self"
        }
      ],
      "env": {
        "self": {
          "type": "backpropagation.Subtract",
          "contents": {
            "name": {
              "type": "str",
              "contents": "residuals",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  1.0
                ],
                [
                  -2.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                2,
                1
              ]
            },
            "grad": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  2.0
                ],
                [
                  -4.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                2,
                1
              ]
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "predictions",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0
                        ],
                        [
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          2.0
                        ],
                        [
                          -4.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "x",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  1.0,
                                  2.0,
                                  0.0
                                ],
                                [
                                  0.0,
                                  -1.0,
                                  1.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                3
                              ]
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  0.0,
                                  0.0,
                                  0.0
                                ],
                                [
                                  0.0,
                                  0.0,
                                  0.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                3
                              ]
                            }
                          },
                          "dtype": null,
                          "shape": null
                        },
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "w",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  1.0
                                ],
                                [
                                  0.0
                                ],
                                [
                                  1.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                3,
                                1
                              ]
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  0.0
                                ],
                                [
                                  0.0
                                ],
                                [
                                  0.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                3,
                                1
                              ]
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "y",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          0.0
                        ],
                        [
                          3.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          -2.0
                        ],
                        [
                          4.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        }
      ],
      "env": {
        "root": {
          "type": "backpropagation.Multiply",
          "contents": {
            "name": {
              "type": "str",
              "contents": "total_loss",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  5.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                1,
                1
              ]
            },
            "grad": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  1.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                1,
                1
              ]
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "ones",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0,
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0,
                          4.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "losses",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0
                        ],
                        [
                          4.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0
                        ],
                        [
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "residuals",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  1.0
                                ],
                                [
                                  -2.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  2.0
                                ],
                                [
                                  -4.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            },
                            "dependencies": {
                              "type": "list",
                              "contents": [
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "predictions",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          1.0
                                        ],
                                        [
                                          1.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          2.0
                                        ],
                                        [
                                          -4.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "dependencies": {
                                      "type": "list",
                                      "contents": [
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "x",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0,
                                                  2.0,
                                                  0.0
                                                ],
                                                [
                                                  0.0,
                                                  -1.0,
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            },
                                            "grad": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  0.0,
                                                  0.0,
                                                  0.0
                                                ],
                                                [
                                                  0.0,
                                                  0.0,
                                                  0.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        },
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "w",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0
                                                ],
                                                [
                                                  0.0
                                                ],
                                                [
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            },
                                            "grad": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  0.0
                                                ],
                                                [
                                                  0.0
                                                ],
                                                [
                                                  0.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        }
                                      ],
                                      "dtype": null,
                                      "shape": null
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                },
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "y",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          3.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          -2.0
                                        ],
                                        [
                                          4.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                }
                              ],
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 436,
          "function_name": "backpropagation",
          "code": "for node in reversed(nodes):  # @inspect node.name"
        }
      ],
      "env": {
        "node.name": {
          "type": "str",
          "contents": "y",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 348,
          "function_name": "backward",
          "code": "def backward(self):"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 350,
          "function_name": "backward",
          "code": "pass"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        }
      ],
      "env": {
        "root": {
          "type": "backpropagation.Multiply",
          "contents": {
            "name": {
              "type": "str",
              "contents": "total_loss",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  5.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                1,
                1
              ]
            },
            "grad": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  1.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                1,
                1
              ]
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "ones",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0,
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0,
                          4.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "losses",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0
                        ],
                        [
                          4.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0
                        ],
                        [
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "residuals",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  1.0
                                ],
                                [
                                  -2.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  2.0
                                ],
                                [
                                  -4.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            },
                            "dependencies": {
                              "type": "list",
                              "contents": [
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "predictions",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          1.0
                                        ],
                                        [
                                          1.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          2.0
                                        ],
                                        [
                                          -4.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "dependencies": {
                                      "type": "list",
                                      "contents": [
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "x",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0,
                                                  2.0,
                                                  0.0
                                                ],
                                                [
                                                  0.0,
                                                  -1.0,
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            },
                                            "grad": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  0.0,
                                                  0.0,
                                                  0.0
                                                ],
                                                [
                                                  0.0,
                                                  0.0,
                                                  0.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        },
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "w",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0
                                                ],
                                                [
                                                  0.0
                                                ],
                                                [
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            },
                                            "grad": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  0.0
                                                ],
                                                [
                                                  0.0
                                                ],
                                                [
                                                  0.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        }
                                      ],
                                      "dtype": null,
                                      "shape": null
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                },
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "y",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          3.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          -2.0
                                        ],
                                        [
                                          4.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                }
                              ],
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 436,
          "function_name": "backpropagation",
          "code": "for node in reversed(nodes):  # @inspect node.name"
        }
      ],
      "env": {
        "node.name": {
          "type": "str",
          "contents": "predictions",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 383,
          "function_name": "backward",
          "code": "def backward(self):  # @inspect self"
        }
      ],
      "env": {
        "self": {
          "type": "backpropagation.Multiply",
          "contents": {
            "name": {
              "type": "str",
              "contents": "predictions",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  1.0
                ],
                [
                  1.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                2,
                1
              ]
            },
            "grad": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  2.0
                ],
                [
                  -4.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                2,
                1
              ]
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "x",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0,
                          2.0,
                          0.0
                        ],
                        [
                          0.0,
                          -1.0,
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        3
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          0.0,
                          0.0,
                          0.0
                        ],
                        [
                          0.0,
                          0.0,
                          0.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        3
                      ]
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "w",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0
                        ],
                        [
                          0.0
                        ],
                        [
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        3,
                        1
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          0.0
                        ],
                        [
                          0.0
                        ],
                        [
                          0.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        3,
                        1
                      ]
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 384,
          "function_name": "backward",
          "code": "x, y = self.dependencies"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 385,
          "function_name": "backward",
          "code": "x.grad += self.grad @ y.value.T  # @inspect self"
        }
      ],
      "env": {
        "self": {
          "type": "backpropagation.Multiply",
          "contents": {
            "name": {
              "type": "str",
              "contents": "predictions",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  1.0
                ],
                [
                  1.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                2,
                1
              ]
            },
            "grad": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  2.0
                ],
                [
                  -4.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                2,
                1
              ]
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "x",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0,
                          2.0,
                          0.0
                        ],
                        [
                          0.0,
                          -1.0,
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        3
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          2.0,
                          0.0,
                          2.0
                        ],
                        [
                          -4.0,
                          0.0,
                          -4.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        3
                      ]
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "w",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0
                        ],
                        [
                          0.0
                        ],
                        [
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        3,
                        1
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          0.0
                        ],
                        [
                          0.0
                        ],
                        [
                          0.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        3,
                        1
                      ]
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 386,
          "function_name": "backward",
          "code": "y.grad += x.value.T @ self.grad  # @inspect self"
        }
      ],
      "env": {
        "self": {
          "type": "backpropagation.Multiply",
          "contents": {
            "name": {
              "type": "str",
              "contents": "predictions",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  1.0
                ],
                [
                  1.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                2,
                1
              ]
            },
            "grad": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  2.0
                ],
                [
                  -4.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                2,
                1
              ]
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "x",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0,
                          2.0,
                          0.0
                        ],
                        [
                          0.0,
                          -1.0,
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        3
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          2.0,
                          0.0,
                          2.0
                        ],
                        [
                          -4.0,
                          0.0,
                          -4.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        3
                      ]
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "w",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0
                        ],
                        [
                          0.0
                        ],
                        [
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        3,
                        1
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          2.0
                        ],
                        [
                          8.0
                        ],
                        [
                          -4.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        3,
                        1
                      ]
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        }
      ],
      "env": {
        "root": {
          "type": "backpropagation.Multiply",
          "contents": {
            "name": {
              "type": "str",
              "contents": "total_loss",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  5.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                1,
                1
              ]
            },
            "grad": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  1.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                1,
                1
              ]
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "ones",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0,
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0,
                          4.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "losses",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0
                        ],
                        [
                          4.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0
                        ],
                        [
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "residuals",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  1.0
                                ],
                                [
                                  -2.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  2.0
                                ],
                                [
                                  -4.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            },
                            "dependencies": {
                              "type": "list",
                              "contents": [
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "predictions",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          1.0
                                        ],
                                        [
                                          1.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          2.0
                                        ],
                                        [
                                          -4.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "dependencies": {
                                      "type": "list",
                                      "contents": [
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "x",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0,
                                                  2.0,
                                                  0.0
                                                ],
                                                [
                                                  0.0,
                                                  -1.0,
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            },
                                            "grad": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  2.0,
                                                  0.0,
                                                  2.0
                                                ],
                                                [
                                                  -4.0,
                                                  0.0,
                                                  -4.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        },
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "w",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0
                                                ],
                                                [
                                                  0.0
                                                ],
                                                [
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            },
                                            "grad": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  2.0
                                                ],
                                                [
                                                  8.0
                                                ],
                                                [
                                                  -4.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        }
                                      ],
                                      "dtype": null,
                                      "shape": null
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                },
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "y",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          3.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          -2.0
                                        ],
                                        [
                                          4.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                }
                              ],
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 436,
          "function_name": "backpropagation",
          "code": "for node in reversed(nodes):  # @inspect node.name"
        }
      ],
      "env": {
        "node.name": {
          "type": "str",
          "contents": "w",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 348,
          "function_name": "backward",
          "code": "def backward(self):"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 350,
          "function_name": "backward",
          "code": "pass"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        }
      ],
      "env": {
        "root": {
          "type": "backpropagation.Multiply",
          "contents": {
            "name": {
              "type": "str",
              "contents": "total_loss",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  5.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                1,
                1
              ]
            },
            "grad": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  1.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                1,
                1
              ]
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "ones",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0,
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0,
                          4.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "losses",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0
                        ],
                        [
                          4.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0
                        ],
                        [
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "residuals",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  1.0
                                ],
                                [
                                  -2.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  2.0
                                ],
                                [
                                  -4.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            },
                            "dependencies": {
                              "type": "list",
                              "contents": [
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "predictions",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          1.0
                                        ],
                                        [
                                          1.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          2.0
                                        ],
                                        [
                                          -4.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "dependencies": {
                                      "type": "list",
                                      "contents": [
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "x",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0,
                                                  2.0,
                                                  0.0
                                                ],
                                                [
                                                  0.0,
                                                  -1.0,
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            },
                                            "grad": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  2.0,
                                                  0.0,
                                                  2.0
                                                ],
                                                [
                                                  -4.0,
                                                  0.0,
                                                  -4.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        },
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "w",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0
                                                ],
                                                [
                                                  0.0
                                                ],
                                                [
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            },
                                            "grad": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  2.0
                                                ],
                                                [
                                                  8.0
                                                ],
                                                [
                                                  -4.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        }
                                      ],
                                      "dtype": null,
                                      "shape": null
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                },
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "y",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          3.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          -2.0
                                        ],
                                        [
                                          4.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                }
                              ],
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 436,
          "function_name": "backpropagation",
          "code": "for node in reversed(nodes):  # @inspect node.name"
        }
      ],
      "env": {
        "node.name": {
          "type": "str",
          "contents": "x",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 348,
          "function_name": "backward",
          "code": "def backward(self):"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 350,
          "function_name": "backward",
          "code": "pass"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        }
      ],
      "env": {
        "root": {
          "type": "backpropagation.Multiply",
          "contents": {
            "name": {
              "type": "str",
              "contents": "total_loss",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  5.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                1,
                1
              ]
            },
            "grad": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  1.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                1,
                1
              ]
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "ones",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0,
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0,
                          4.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "losses",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0
                        ],
                        [
                          4.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0
                        ],
                        [
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "residuals",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  1.0
                                ],
                                [
                                  -2.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  2.0
                                ],
                                [
                                  -4.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            },
                            "dependencies": {
                              "type": "list",
                              "contents": [
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "predictions",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          1.0
                                        ],
                                        [
                                          1.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          2.0
                                        ],
                                        [
                                          -4.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "dependencies": {
                                      "type": "list",
                                      "contents": [
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "x",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0,
                                                  2.0,
                                                  0.0
                                                ],
                                                [
                                                  0.0,
                                                  -1.0,
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            },
                                            "grad": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  2.0,
                                                  0.0,
                                                  2.0
                                                ],
                                                [
                                                  -4.0,
                                                  0.0,
                                                  -4.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        },
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "w",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0
                                                ],
                                                [
                                                  0.0
                                                ],
                                                [
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            },
                                            "grad": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  2.0
                                                ],
                                                [
                                                  8.0
                                                ],
                                                [
                                                  -4.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        }
                                      ],
                                      "dtype": null,
                                      "shape": null
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                },
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "y",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          3.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          -2.0
                                        ],
                                        [
                                          4.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                }
                              ],
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 436,
          "function_name": "backpropagation",
          "code": "for node in reversed(nodes):  # @inspect node.name"
        }
      ],
      "env": {
        "node.name": {
          "type": "str",
          "contents": "ones",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 348,
          "function_name": "backward",
          "code": "def backward(self):"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        },
        {
          "path": "backpropagation.py",
          "line_number": 350,
          "function_name": "backward",
          "code": "pass"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 437,
          "function_name": "backpropagation",
          "code": "node.backward()  # @inspect root"
        }
      ],
      "env": {
        "root": {
          "type": "backpropagation.Multiply",
          "contents": {
            "name": {
              "type": "str",
              "contents": "total_loss",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  5.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                1,
                1
              ]
            },
            "grad": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  1.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                1,
                1
              ]
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "ones",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0,
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0,
                          4.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "losses",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0
                        ],
                        [
                          4.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0
                        ],
                        [
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "residuals",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  1.0
                                ],
                                [
                                  -2.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  2.0
                                ],
                                [
                                  -4.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            },
                            "dependencies": {
                              "type": "list",
                              "contents": [
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "predictions",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          1.0
                                        ],
                                        [
                                          1.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          2.0
                                        ],
                                        [
                                          -4.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "dependencies": {
                                      "type": "list",
                                      "contents": [
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "x",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0,
                                                  2.0,
                                                  0.0
                                                ],
                                                [
                                                  0.0,
                                                  -1.0,
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            },
                                            "grad": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  2.0,
                                                  0.0,
                                                  2.0
                                                ],
                                                [
                                                  -4.0,
                                                  0.0,
                                                  -4.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        },
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "w",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0
                                                ],
                                                [
                                                  0.0
                                                ],
                                                [
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            },
                                            "grad": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  2.0
                                                ],
                                                [
                                                  8.0
                                                ],
                                                [
                                                  -4.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        }
                                      ],
                                      "dtype": null,
                                      "shape": null
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                },
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "y",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          3.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          -2.0
                                        ],
                                        [
                                          4.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                }
                              ],
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        },
        {
          "path": "backpropagation.py",
          "line_number": 436,
          "function_name": "backpropagation",
          "code": "for node in reversed(nodes):  # @inspect node.name"
        }
      ],
      "env": {
        "node.name": {
          "type": "str",
          "contents": "ones",
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 303,
          "function_name": "computation_graphs_general",
          "code": "backpropagation(total_loss)  # @inspect total_loss"
        }
      ],
      "env": {
        "total_loss": {
          "type": "backpropagation.Multiply",
          "contents": {
            "name": {
              "type": "str",
              "contents": "total_loss",
              "dtype": null,
              "shape": null
            },
            "value": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  5.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                1,
                1
              ]
            },
            "grad": {
              "type": "numpy.ndarray",
              "contents": [
                [
                  1.0
                ]
              ],
              "dtype": "float64",
              "shape": [
                1,
                1
              ]
            },
            "dependencies": {
              "type": "list",
              "contents": [
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "ones",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0,
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0,
                          4.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        1,
                        2
                      ]
                    }
                  },
                  "dtype": null,
                  "shape": null
                },
                {
                  "type": "dict",
                  "contents": {
                    "name": {
                      "type": "str",
                      "contents": "losses",
                      "dtype": null,
                      "shape": null
                    },
                    "value": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0
                        ],
                        [
                          4.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "grad": {
                      "type": "numpy.ndarray",
                      "contents": [
                        [
                          1.0
                        ],
                        [
                          1.0
                        ]
                      ],
                      "dtype": "float64",
                      "shape": [
                        2,
                        1
                      ]
                    },
                    "dependencies": {
                      "type": "list",
                      "contents": [
                        {
                          "type": "dict",
                          "contents": {
                            "name": {
                              "type": "str",
                              "contents": "residuals",
                              "dtype": null,
                              "shape": null
                            },
                            "value": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  1.0
                                ],
                                [
                                  -2.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            },
                            "grad": {
                              "type": "numpy.ndarray",
                              "contents": [
                                [
                                  2.0
                                ],
                                [
                                  -4.0
                                ]
                              ],
                              "dtype": "float64",
                              "shape": [
                                2,
                                1
                              ]
                            },
                            "dependencies": {
                              "type": "list",
                              "contents": [
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "predictions",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          1.0
                                        ],
                                        [
                                          1.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          2.0
                                        ],
                                        [
                                          -4.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "dependencies": {
                                      "type": "list",
                                      "contents": [
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "x",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0,
                                                  2.0,
                                                  0.0
                                                ],
                                                [
                                                  0.0,
                                                  -1.0,
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            },
                                            "grad": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  2.0,
                                                  0.0,
                                                  2.0
                                                ],
                                                [
                                                  -4.0,
                                                  0.0,
                                                  -4.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                2,
                                                3
                                              ]
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        },
                                        {
                                          "type": "dict",
                                          "contents": {
                                            "name": {
                                              "type": "str",
                                              "contents": "w",
                                              "dtype": null,
                                              "shape": null
                                            },
                                            "value": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  1.0
                                                ],
                                                [
                                                  0.0
                                                ],
                                                [
                                                  1.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            },
                                            "grad": {
                                              "type": "numpy.ndarray",
                                              "contents": [
                                                [
                                                  2.0
                                                ],
                                                [
                                                  8.0
                                                ],
                                                [
                                                  -4.0
                                                ]
                                              ],
                                              "dtype": "float64",
                                              "shape": [
                                                3,
                                                1
                                              ]
                                            }
                                          },
                                          "dtype": null,
                                          "shape": null
                                        }
                                      ],
                                      "dtype": null,
                                      "shape": null
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                },
                                {
                                  "type": "dict",
                                  "contents": {
                                    "name": {
                                      "type": "str",
                                      "contents": "y",
                                      "dtype": null,
                                      "shape": null
                                    },
                                    "value": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          0.0
                                        ],
                                        [
                                          3.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    },
                                    "grad": {
                                      "type": "numpy.ndarray",
                                      "contents": [
                                        [
                                          -2.0
                                        ],
                                        [
                                          4.0
                                        ]
                                      ],
                                      "dtype": "float64",
                                      "shape": [
                                        2,
                                        1
                                      ]
                                    }
                                  },
                                  "dtype": null,
                                  "shape": null
                                }
                              ],
                              "dtype": null,
                              "shape": null
                            }
                          },
                          "dtype": null,
                          "shape": null
                        }
                      ],
                      "dtype": null,
                      "shape": null
                    }
                  },
                  "dtype": null,
                  "shape": null
                }
              ],
              "dtype": null,
              "shape": null
            }
          },
          "dtype": null,
          "shape": null
        }
      },
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 235,
          "function_name": "computation_graphs",
          "code": "computation_graphs_general()"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 237,
          "function_name": "computation_graphs",
          "code": "text(\"Summary:\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Summary:",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 238,
          "function_name": "computation_graphs",
          "code": "text(\"- Computation graphs represent complex functions in terms of primitive operations.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Computation graphs represent complex functions in terms of primitive operations.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 239,
          "function_name": "computation_graphs",
          "code": "text(\"- We are interested in computing the function value but also gradients with respect to inputs.\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- We are interested in computing the function value but also gradients with respect to inputs.",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 240,
          "function_name": "computation_graphs",
          "code": "text(\"- Key mathematical property: chain rule\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Key mathematical property: chain rule",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 241,
          "function_name": "computation_graphs",
          "code": "text(\"- Backpropagation is a general algorithm to organize the computation of gradients (and values).\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Backpropagation is a general algorithm to organize the computation of gradients (and values).",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        },
        {
          "path": "backpropagation.py",
          "line_number": 242,
          "function_name": "computation_graphs",
          "code": "text(\"- Can deepen your understanding of calculus too!\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Can deepen your understanding of calculus too!",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 21,
          "function_name": "main",
          "code": "computation_graphs()"
        }
      ],
      "env": {},
      "renderings": []
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 23,
          "function_name": "main",
          "code": "text(\"Summary:\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "Summary:",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 24,
          "function_name": "main",
          "code": "text(\"- Reviewed einsum (for each assignment of input axes, multiply/add to corresponding outputs)\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Reviewed einsum (for each assignment of input axes, multiply/add to corresponding outputs)",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 25,
          "function_name": "main",
          "code": "text(\"- Construct computation graphs to create other tensors (future: use einsum!)\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Construct computation graphs to create other tensors (future: use einsum!)",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 26,
          "function_name": "main",
          "code": "text(\"- Gradients / partial derivatives: how much does the function change if we change the input?\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Gradients / partial derivatives: how much does the function change if we change the input?",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    },
    {
      "stack": [
        {
          "path": "backpropagation.py",
          "line_number": 27,
          "function_name": "main",
          "code": "text(\"- Backpropagation: general algorithm to compute gradients using computation graphs\")"
        }
      ],
      "env": {},
      "renderings": [
        {
          "type": "markdown",
          "data": "- Backpropagation: general algorithm to compute gradients using computation graphs",
          "style": {},
          "external_link": null,
          "internal_link": null
        }
      ]
    }
  ]
}